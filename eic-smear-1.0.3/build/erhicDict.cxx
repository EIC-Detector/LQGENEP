//
// File generated by /afs/rhic.bnl.gov/sphenix/sys/x8664_sl6/new.3/root/bin/rootcint at Tue Sep 26 14:31:38 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIphenixdIudIspjeffasdILQGENEPdIeicmIsmearmI1dO0dO3dIbuilddIerhicDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "erhicDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ParticleIdentifier ParticleIdentifier;
      #else
      class ParticleIdentifier  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ParticleIdentifier() throw() {};
         bool mChargedCurrent; //
         int mLeptonBeamPdgCode; //
         int mScatteredPdgCode; //
      };
      #endif

      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::EventFromAsciiFactory< ::erhic::EventPepsi > EventFromAsciiFactorylEerhiccLcLEventPepsigR;
      #else
      class EventFromAsciiFactorylEerhiccLcLEventPepsigR  :  public ::erhic::VirtualEventFactory {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EventFromAsciiFactorylEerhiccLcLEventPepsigR() throw() {};
         ::basic_istream< char, ::char_traits< char >  >* mInput; //!
         string mLine; //!
         ::auto_ptr< ::erhic::EventPepsi > mEvent; //!
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::EventFromAsciiFactory< ::erhic::EventMilou > EventFromAsciiFactorylEerhiccLcLEventMilougR;
      #else
      class EventFromAsciiFactorylEerhiccLcLEventMilougR  :  public ::erhic::VirtualEventFactory {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EventFromAsciiFactorylEerhiccLcLEventMilougR() throw() {};
         ::basic_istream< char, ::char_traits< char >  >* mInput; //!
         string mLine; //!
         ::auto_ptr< ::erhic::EventMilou > mEvent; //!
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::EventFromAsciiFactory< ::erhic::EventRapgap > EventFromAsciiFactorylEerhiccLcLEventRapgapgR;
      #else
      class EventFromAsciiFactorylEerhiccLcLEventRapgapgR  :  public ::erhic::VirtualEventFactory {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EventFromAsciiFactorylEerhiccLcLEventRapgapgR() throw() {};
         ::basic_istream< char, ::char_traits< char >  >* mInput; //!
         string mLine; //!
         ::auto_ptr< ::erhic::EventRapgap > mEvent; //!
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::EventFromAsciiFactory< ::erhic::EventDjangoh > EventFromAsciiFactorylEerhiccLcLEventDjangohgR;
      #else
      class EventFromAsciiFactorylEerhiccLcLEventDjangohgR  :  public ::erhic::VirtualEventFactory {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EventFromAsciiFactorylEerhiccLcLEventDjangohgR() throw() {};
         ::basic_istream< char, ::char_traits< char >  >* mInput; //!
         string mLine; //!
         ::auto_ptr< ::erhic::EventDjangoh > mEvent; //!
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::EventFromAsciiFactory< ::erhic::EventDpmjet > EventFromAsciiFactorylEerhiccLcLEventDpmjetgR;
      #else
      class EventFromAsciiFactorylEerhiccLcLEventDpmjetgR  :  public ::erhic::VirtualEventFactory {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EventFromAsciiFactorylEerhiccLcLEventDpmjetgR() throw() {};
         ::basic_istream< char, ::char_traits< char >  >* mInput; //!
         string mLine; //!
         ::auto_ptr< ::erhic::EventDpmjet > mEvent; //!
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::EventFromAsciiFactory< ::erhic::EventPythia > EventFromAsciiFactorylEerhiccLcLEventPythiagR;
      #else
      class EventFromAsciiFactorylEerhiccLcLEventPythiagR  :  public ::erhic::VirtualEventFactory {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EventFromAsciiFactorylEerhiccLcLEventPythiagR() throw() {};
         ::basic_istream< char, ::char_traits< char >  >* mInput; //!
         string mLine; //!
         ::auto_ptr< ::erhic::EventPythia > mEvent; //!
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::EventFromAsciiFactory< ::erhic::EventGmcTrans > EventFromAsciiFactorylEerhiccLcLEventGmcTransgR;
      #else
      class EventFromAsciiFactorylEerhiccLcLEventGmcTransgR  :  public ::erhic::VirtualEventFactory {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EventFromAsciiFactorylEerhiccLcLEventGmcTransgR() throw() {};
         ::basic_istream< char, ::char_traits< char >  >* mInput; //!
         string mLine; //!
         ::auto_ptr< ::erhic::EventGmcTrans > mEvent; //!
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::File< ::erhic::EventPythia > FilelEerhiccLcLEventPythiagR;
      #else
      class FilelEerhiccLcLEventPythiagR  :  public ::erhic::FileType {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilelEerhiccLcLEventPythiagR() throw() {};
         ::erhic::EventPythia* t_; //
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::File< ::erhic::EventMilou > FilelEerhiccLcLEventMilougR;
      #else
      class FilelEerhiccLcLEventMilougR  :  public ::erhic::FileType {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilelEerhiccLcLEventMilougR() throw() {};
         ::erhic::EventMilou* t_; //
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::File< ::erhic::EventPepsi > FilelEerhiccLcLEventPepsigR;
      #else
      class FilelEerhiccLcLEventPepsigR  :  public ::erhic::FileType {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilelEerhiccLcLEventPepsigR() throw() {};
         ::erhic::EventPepsi* t_; //
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::File< ::erhic::EventRapgap > FilelEerhiccLcLEventRapgapgR;
      #else
      class FilelEerhiccLcLEventRapgapgR  :  public ::erhic::FileType {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilelEerhiccLcLEventRapgapgR() throw() {};
         ::erhic::EventRapgap* t_; //
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::File< ::erhic::EventDjangoh > FilelEerhiccLcLEventDjangohgR;
      #else
      class FilelEerhiccLcLEventDjangohgR  :  public ::erhic::FileType {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilelEerhiccLcLEventDjangohgR() throw() {};
         ::erhic::EventDjangoh* t_; //
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::File< ::erhic::EventDpmjet > FilelEerhiccLcLEventDpmjetgR;
      #else
      class FilelEerhiccLcLEventDpmjetgR  :  public ::erhic::FileType {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilelEerhiccLcLEventDpmjetgR() throw() {};
         ::erhic::EventDpmjet* t_; //
      };
      #endif
      } 
      namespace erhic {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::erhic::File< ::erhic::EventGmcTrans > FilelEerhiccLcLEventGmcTransgR;
      #else
      class FilelEerhiccLcLEventGmcTransgR  :  public ::erhic::FileType {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilelEerhiccLcLEventGmcTransgR() throw() {};
         ::erhic::EventGmcTrans* t_; //
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::auto_ptr< ::erhic::Pid > auto_ptrlEerhiccLcLPidgR;
      #else
      class auto_ptrlEerhiccLcLPidgR  {
         public:
         //friend XX;
         typedef ::erhic::Pid element_type;
         ::erhic::Pid* ptr; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace erhic {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void erhic_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("erhic", 0 /*version*/, "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Forester.h", 30,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &erhic_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void erhic_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void erhiccLcLPid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLPid(void *p = 0);
   static void *newArray_erhiccLcLPid(Long_t size, void *p);
   static void delete_erhiccLcLPid(void *p);
   static void deleteArray_erhiccLcLPid(void *p);
   static void destruct_erhiccLcLPid(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::Pid*)
   {
      ::erhic::Pid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::Pid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::Pid", ::erhic::Pid::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Pid.h", 22,
                  typeid(::erhic::Pid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::Pid::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::Pid) );
      instance.SetNew(&new_erhiccLcLPid);
      instance.SetNewArray(&newArray_erhiccLcLPid);
      instance.SetDelete(&delete_erhiccLcLPid);
      instance.SetDeleteArray(&deleteArray_erhiccLcLPid);
      instance.SetDestructor(&destruct_erhiccLcLPid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::Pid*)
   {
      return GenerateInitInstanceLocal((::erhic::Pid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::Pid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLVirtualParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLVirtualParticle(void *p);
   static void deleteArray_erhiccLcLVirtualParticle(void *p);
   static void destruct_erhiccLcLVirtualParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::VirtualParticle*)
   {
      ::erhic::VirtualParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::VirtualParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::VirtualParticle", ::erhic::VirtualParticle::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/VirtualParticle.h", 23,
                  typeid(::erhic::VirtualParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::VirtualParticle::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::VirtualParticle) );
      instance.SetDelete(&delete_erhiccLcLVirtualParticle);
      instance.SetDeleteArray(&deleteArray_erhiccLcLVirtualParticle);
      instance.SetDestructor(&destruct_erhiccLcLVirtualParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::VirtualParticle*)
   {
      return GenerateInitInstanceLocal((::erhic::VirtualParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::VirtualParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLEventMC(void *p);
   static void deleteArray_erhiccLcLEventMC(void *p);
   static void destruct_erhiccLcLEventMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventMC*)
   {
      ::erhic::EventMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventMC", ::erhic::EventMC::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventMC.h", 30,
                  typeid(::erhic::EventMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventMC::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventMC) );
      instance.SetDelete(&delete_erhiccLcLEventMC);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventMC);
      instance.SetDestructor(&destruct_erhiccLcLEventMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventMC*)
   {
      return GenerateInitInstanceLocal((::erhic::EventMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLParticleMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLParticleMC(void *p = 0);
   static void *newArray_erhiccLcLParticleMC(Long_t size, void *p);
   static void delete_erhiccLcLParticleMC(void *p);
   static void deleteArray_erhiccLcLParticleMC(void *p);
   static void destruct_erhiccLcLParticleMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::ParticleMC*)
   {
      ::erhic::ParticleMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::ParticleMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::ParticleMC", ::erhic::ParticleMC::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/ParticleMC.h", 28,
                  typeid(::erhic::ParticleMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::ParticleMC::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::ParticleMC) );
      instance.SetNew(&new_erhiccLcLParticleMC);
      instance.SetNewArray(&newArray_erhiccLcLParticleMC);
      instance.SetDelete(&delete_erhiccLcLParticleMC);
      instance.SetDeleteArray(&deleteArray_erhiccLcLParticleMC);
      instance.SetDestructor(&destruct_erhiccLcLParticleMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::ParticleMC*)
   {
      return GenerateInitInstanceLocal((::erhic::ParticleMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::ParticleMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BeamParticles_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BeamParticles(void *p = 0);
   static void *newArray_BeamParticles(Long_t size, void *p);
   static void delete_BeamParticles(void *p);
   static void deleteArray_BeamParticles(void *p);
   static void destruct_BeamParticles(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BeamParticles*)
   {
      ::BeamParticles *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BeamParticles >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BeamParticles", ::BeamParticles::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/BeamParticles.h", 20,
                  typeid(::BeamParticles), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BeamParticles::Dictionary, isa_proxy, 4,
                  sizeof(::BeamParticles) );
      instance.SetNew(&new_BeamParticles);
      instance.SetNewArray(&newArray_BeamParticles);
      instance.SetDelete(&delete_BeamParticles);
      instance.SetDeleteArray(&deleteArray_BeamParticles);
      instance.SetDestructor(&destruct_BeamParticles);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BeamParticles*)
   {
      return GenerateInitInstanceLocal((::BeamParticles*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BeamParticles*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLVirtualEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLVirtualEvent(void *p);
   static void deleteArray_erhiccLcLVirtualEvent(void *p);
   static void destruct_erhiccLcLVirtualEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::VirtualEvent*)
   {
      ::erhic::VirtualEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::VirtualEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::VirtualEvent", ::erhic::VirtualEvent::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/VirtualEvent.h", 25,
                  typeid(::erhic::VirtualEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::VirtualEvent::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::VirtualEvent) );
      instance.SetDelete(&delete_erhiccLcLVirtualEvent);
      instance.SetDeleteArray(&deleteArray_erhiccLcLVirtualEvent);
      instance.SetDestructor(&destruct_erhiccLcLVirtualEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::VirtualEvent*)
   {
      return GenerateInitInstanceLocal((::erhic::VirtualEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::VirtualEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ParticleIdentifier_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ParticleIdentifier_Dictionary();
   static void *new_ParticleIdentifier(void *p = 0);
   static void *newArray_ParticleIdentifier(Long_t size, void *p);
   static void delete_ParticleIdentifier(void *p);
   static void deleteArray_ParticleIdentifier(void *p);
   static void destruct_ParticleIdentifier(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ParticleIdentifier*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ParticleIdentifier) == sizeof( ::ROOTShadow::Shadow::ParticleIdentifier));
      ::ParticleIdentifier *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ParticleIdentifier),0);
      static ::ROOT::TGenericClassInfo 
         instance("ParticleIdentifier", "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/ParticleIdentifier.h", 25,
                  typeid(::ParticleIdentifier), ::ROOT::DefineBehavior(ptr, ptr),
                  &ParticleIdentifier_ShowMembers, &ParticleIdentifier_Dictionary, isa_proxy, 4,
                  sizeof(::ParticleIdentifier) );
      instance.SetNew(&new_ParticleIdentifier);
      instance.SetNewArray(&newArray_ParticleIdentifier);
      instance.SetDelete(&delete_ParticleIdentifier);
      instance.SetDeleteArray(&deleteArray_ParticleIdentifier);
      instance.SetDestructor(&destruct_ParticleIdentifier);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ParticleIdentifier*)
   {
      return GenerateInitInstanceLocal((::ParticleIdentifier*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ParticleIdentifier*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ParticleIdentifier_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleIdentifier*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventDis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLEventDis(void *p);
   static void deleteArray_erhiccLcLEventDis(void *p);
   static void destruct_erhiccLcLEventDis(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventDis*)
   {
      ::erhic::EventDis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventDis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventDis", ::erhic::EventDis::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventDis.h", 37,
                  typeid(::erhic::EventDis), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventDis::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventDis) );
      instance.SetDelete(&delete_erhiccLcLEventDis);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventDis);
      instance.SetDestructor(&destruct_erhiccLcLEventDis);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventDis*)
   {
      return GenerateInitInstanceLocal((::erhic::EventDis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventDis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLDisKinematics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLDisKinematics(void *p = 0);
   static void *newArray_erhiccLcLDisKinematics(Long_t size, void *p);
   static void delete_erhiccLcLDisKinematics(void *p);
   static void deleteArray_erhiccLcLDisKinematics(void *p);
   static void destruct_erhiccLcLDisKinematics(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::DisKinematics*)
   {
      ::erhic::DisKinematics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::DisKinematics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::DisKinematics", ::erhic::DisKinematics::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Kinematics.h", 31,
                  typeid(::erhic::DisKinematics), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::DisKinematics::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::DisKinematics) );
      instance.SetNew(&new_erhiccLcLDisKinematics);
      instance.SetNewArray(&newArray_erhiccLcLDisKinematics);
      instance.SetDelete(&delete_erhiccLcLDisKinematics);
      instance.SetDeleteArray(&deleteArray_erhiccLcLDisKinematics);
      instance.SetDestructor(&destruct_erhiccLcLDisKinematics);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::DisKinematics*)
   {
      return GenerateInitInstanceLocal((::erhic::DisKinematics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::DisKinematics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLKinematicsComputer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLKinematicsComputer(void *p);
   static void deleteArray_erhiccLcLKinematicsComputer(void *p);
   static void destruct_erhiccLcLKinematicsComputer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::KinematicsComputer*)
   {
      ::erhic::KinematicsComputer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::KinematicsComputer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::KinematicsComputer", ::erhic::KinematicsComputer::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Kinematics.h", 52,
                  typeid(::erhic::KinematicsComputer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::KinematicsComputer::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::KinematicsComputer) );
      instance.SetDelete(&delete_erhiccLcLKinematicsComputer);
      instance.SetDeleteArray(&deleteArray_erhiccLcLKinematicsComputer);
      instance.SetDestructor(&destruct_erhiccLcLKinematicsComputer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::KinematicsComputer*)
   {
      return GenerateInitInstanceLocal((::erhic::KinematicsComputer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::KinematicsComputer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLeptonKinematicsComputer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLLeptonKinematicsComputer(void *p);
   static void deleteArray_erhiccLcLLeptonKinematicsComputer(void *p);
   static void destruct_erhiccLcLLeptonKinematicsComputer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LeptonKinematicsComputer*)
   {
      ::erhic::LeptonKinematicsComputer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LeptonKinematicsComputer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LeptonKinematicsComputer", ::erhic::LeptonKinematicsComputer::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Kinematics.h", 64,
                  typeid(::erhic::LeptonKinematicsComputer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LeptonKinematicsComputer::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::LeptonKinematicsComputer) );
      instance.SetDelete(&delete_erhiccLcLLeptonKinematicsComputer);
      instance.SetDeleteArray(&deleteArray_erhiccLcLLeptonKinematicsComputer);
      instance.SetDestructor(&destruct_erhiccLcLLeptonKinematicsComputer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LeptonKinematicsComputer*)
   {
      return GenerateInitInstanceLocal((::erhic::LeptonKinematicsComputer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LeptonKinematicsComputer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLJacquetBlondelComputer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLJacquetBlondelComputer(void *p);
   static void deleteArray_erhiccLcLJacquetBlondelComputer(void *p);
   static void destruct_erhiccLcLJacquetBlondelComputer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::JacquetBlondelComputer*)
   {
      ::erhic::JacquetBlondelComputer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::JacquetBlondelComputer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::JacquetBlondelComputer", ::erhic::JacquetBlondelComputer::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Kinematics.h", 86,
                  typeid(::erhic::JacquetBlondelComputer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::JacquetBlondelComputer::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::JacquetBlondelComputer) );
      instance.SetDelete(&delete_erhiccLcLJacquetBlondelComputer);
      instance.SetDeleteArray(&deleteArray_erhiccLcLJacquetBlondelComputer);
      instance.SetDestructor(&destruct_erhiccLcLJacquetBlondelComputer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::JacquetBlondelComputer*)
   {
      return GenerateInitInstanceLocal((::erhic::JacquetBlondelComputer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::JacquetBlondelComputer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLDoubleAngleComputer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLDoubleAngleComputer(void *p);
   static void deleteArray_erhiccLcLDoubleAngleComputer(void *p);
   static void destruct_erhiccLcLDoubleAngleComputer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::DoubleAngleComputer*)
   {
      ::erhic::DoubleAngleComputer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::DoubleAngleComputer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::DoubleAngleComputer", ::erhic::DoubleAngleComputer::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Kinematics.h", 117,
                  typeid(::erhic::DoubleAngleComputer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::DoubleAngleComputer::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::DoubleAngleComputer) );
      instance.SetDelete(&delete_erhiccLcLDoubleAngleComputer);
      instance.SetDeleteArray(&deleteArray_erhiccLcLDoubleAngleComputer);
      instance.SetDestructor(&destruct_erhiccLcLDoubleAngleComputer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::DoubleAngleComputer*)
   {
      return GenerateInitInstanceLocal((::erhic::DoubleAngleComputer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::DoubleAngleComputer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLVirtualEventFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLVirtualEventFactory(void *p);
   static void deleteArray_erhiccLcLVirtualEventFactory(void *p);
   static void destruct_erhiccLcLVirtualEventFactory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::VirtualEventFactory*)
   {
      ::erhic::VirtualEventFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::VirtualEventFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::VirtualEventFactory", ::erhic::VirtualEventFactory::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 35,
                  typeid(::erhic::VirtualEventFactory), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::VirtualEventFactory::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::VirtualEventFactory) );
      instance.SetDelete(&delete_erhiccLcLVirtualEventFactory);
      instance.SetDeleteArray(&deleteArray_erhiccLcLVirtualEventFactory);
      instance.SetDestructor(&destruct_erhiccLcLVirtualEventFactory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::VirtualEventFactory*)
   {
      return GenerateInitInstanceLocal((::erhic::VirtualEventFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::VirtualEventFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EventToDot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventToDot(void *p = 0);
   static void *newArray_EventToDot(Long_t size, void *p);
   static void delete_EventToDot(void *p);
   static void deleteArray_EventToDot(void *p);
   static void destruct_EventToDot(void *p);
   static void streamer_EventToDot(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EventToDot*)
   {
      ::EventToDot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventToDot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventToDot", ::EventToDot::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/functions.h", 64,
                  typeid(::EventToDot), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EventToDot::Dictionary, isa_proxy, 0,
                  sizeof(::EventToDot) );
      instance.SetNew(&new_EventToDot);
      instance.SetNewArray(&newArray_EventToDot);
      instance.SetDelete(&delete_EventToDot);
      instance.SetDeleteArray(&deleteArray_EventToDot);
      instance.SetDestructor(&destruct_EventToDot);
      instance.SetStreamerFunc(&streamer_EventToDot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EventToDot*)
   {
      return GenerateInitInstanceLocal((::EventToDot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventToDot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLReader(void *p = 0);
   static void *newArray_erhiccLcLReader(Long_t size, void *p);
   static void delete_erhiccLcLReader(void *p);
   static void deleteArray_erhiccLcLReader(void *p);
   static void destruct_erhiccLcLReader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::Reader*)
   {
      ::erhic::Reader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::Reader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::Reader", ::erhic::Reader::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventMC.h", 264,
                  typeid(::erhic::Reader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::Reader::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::Reader) );
      instance.SetNew(&new_erhiccLcLReader);
      instance.SetNewArray(&newArray_erhiccLcLReader);
      instance.SetDelete(&delete_erhiccLcLReader);
      instance.SetDeleteArray(&deleteArray_erhiccLcLReader);
      instance.SetDestructor(&destruct_erhiccLcLReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::Reader*)
   {
      return GenerateInitInstanceLocal((::erhic::Reader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::Reader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventDjangoh_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLEventDjangoh(void *p = 0);
   static void *newArray_erhiccLcLEventDjangoh(Long_t size, void *p);
   static void delete_erhiccLcLEventDjangoh(void *p);
   static void deleteArray_erhiccLcLEventDjangoh(void *p);
   static void destruct_erhiccLcLEventDjangoh(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventDjangoh*)
   {
      ::erhic::EventDjangoh *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventDjangoh >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventDjangoh", ::erhic::EventDjangoh::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventDjangoh.h", 26,
                  typeid(::erhic::EventDjangoh), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventDjangoh::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventDjangoh) );
      instance.SetNew(&new_erhiccLcLEventDjangoh);
      instance.SetNewArray(&newArray_erhiccLcLEventDjangoh);
      instance.SetDelete(&delete_erhiccLcLEventDjangoh);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventDjangoh);
      instance.SetDestructor(&destruct_erhiccLcLEventDjangoh);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventDjangoh*)
   {
      return GenerateInitInstanceLocal((::erhic::EventDjangoh*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventDjangoh*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventDpmjet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLEventDpmjet(void *p = 0);
   static void *newArray_erhiccLcLEventDpmjet(Long_t size, void *p);
   static void delete_erhiccLcLEventDpmjet(void *p);
   static void deleteArray_erhiccLcLEventDpmjet(void *p);
   static void destruct_erhiccLcLEventDpmjet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventDpmjet*)
   {
      ::erhic::EventDpmjet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventDpmjet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventDpmjet", ::erhic::EventDpmjet::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventDpmjet.h", 24,
                  typeid(::erhic::EventDpmjet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventDpmjet::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventDpmjet) );
      instance.SetNew(&new_erhiccLcLEventDpmjet);
      instance.SetNewArray(&newArray_erhiccLcLEventDpmjet);
      instance.SetDelete(&delete_erhiccLcLEventDpmjet);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventDpmjet);
      instance.SetDestructor(&destruct_erhiccLcLEventDpmjet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventDpmjet*)
   {
      return GenerateInitInstanceLocal((::erhic::EventDpmjet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventDpmjet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventPythia_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLEventPythia(void *p = 0);
   static void *newArray_erhiccLcLEventPythia(Long_t size, void *p);
   static void delete_erhiccLcLEventPythia(void *p);
   static void deleteArray_erhiccLcLEventPythia(void *p);
   static void destruct_erhiccLcLEventPythia(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventPythia*)
   {
      ::erhic::EventPythia *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventPythia >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventPythia", ::erhic::EventPythia::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventPythia.h", 28,
                  typeid(::erhic::EventPythia), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventPythia::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventPythia) );
      instance.SetNew(&new_erhiccLcLEventPythia);
      instance.SetNewArray(&newArray_erhiccLcLEventPythia);
      instance.SetDelete(&delete_erhiccLcLEventPythia);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventPythia);
      instance.SetDestructor(&destruct_erhiccLcLEventPythia);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventPythia*)
   {
      return GenerateInitInstanceLocal((::erhic::EventPythia*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventPythia*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventGmcTrans_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLEventGmcTrans(void *p = 0);
   static void *newArray_erhiccLcLEventGmcTrans(Long_t size, void *p);
   static void delete_erhiccLcLEventGmcTrans(void *p);
   static void deleteArray_erhiccLcLEventGmcTrans(void *p);
   static void destruct_erhiccLcLEventGmcTrans(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventGmcTrans*)
   {
      ::erhic::EventGmcTrans *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventGmcTrans >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventGmcTrans", ::erhic::EventGmcTrans::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventGmcTrans.h", 23,
                  typeid(::erhic::EventGmcTrans), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventGmcTrans::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventGmcTrans) );
      instance.SetNew(&new_erhiccLcLEventGmcTrans);
      instance.SetNewArray(&newArray_erhiccLcLEventGmcTrans);
      instance.SetDelete(&delete_erhiccLcLEventGmcTrans);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventGmcTrans);
      instance.SetDestructor(&destruct_erhiccLcLEventGmcTrans);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventGmcTrans*)
   {
      return GenerateInitInstanceLocal((::erhic::EventGmcTrans*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventGmcTrans*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventMCFilterABC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLEventMCFilterABC(void *p);
   static void deleteArray_erhiccLcLEventMCFilterABC(void *p);
   static void destruct_erhiccLcLEventMCFilterABC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventMCFilterABC*)
   {
      ::erhic::EventMCFilterABC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventMCFilterABC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventMCFilterABC", ::erhic::EventMCFilterABC::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventMCFilterABC.h", 22,
                  typeid(::erhic::EventMCFilterABC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventMCFilterABC::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventMCFilterABC) );
      instance.SetDelete(&delete_erhiccLcLEventMCFilterABC);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventMCFilterABC);
      instance.SetDestructor(&destruct_erhiccLcLEventMCFilterABC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventMCFilterABC*)
   {
      return GenerateInitInstanceLocal((::erhic::EventMCFilterABC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventMCFilterABC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventMilou_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLEventMilou(void *p = 0);
   static void *newArray_erhiccLcLEventMilou(Long_t size, void *p);
   static void delete_erhiccLcLEventMilou(void *p);
   static void deleteArray_erhiccLcLEventMilou(void *p);
   static void destruct_erhiccLcLEventMilou(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventMilou*)
   {
      ::erhic::EventMilou *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventMilou >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventMilou", ::erhic::EventMilou::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventMilou.h", 24,
                  typeid(::erhic::EventMilou), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventMilou::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventMilou) );
      instance.SetNew(&new_erhiccLcLEventMilou);
      instance.SetNewArray(&newArray_erhiccLcLEventMilou);
      instance.SetDelete(&delete_erhiccLcLEventMilou);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventMilou);
      instance.SetDestructor(&destruct_erhiccLcLEventMilou);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventMilou*)
   {
      return GenerateInitInstanceLocal((::erhic::EventMilou*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventMilou*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventPepsi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLEventPepsi(void *p = 0);
   static void *newArray_erhiccLcLEventPepsi(Long_t size, void *p);
   static void delete_erhiccLcLEventPepsi(void *p);
   static void deleteArray_erhiccLcLEventPepsi(void *p);
   static void destruct_erhiccLcLEventPepsi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventPepsi*)
   {
      ::erhic::EventPepsi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventPepsi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventPepsi", ::erhic::EventPepsi::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventPepsi.h", 26,
                  typeid(::erhic::EventPepsi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventPepsi::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventPepsi) );
      instance.SetNew(&new_erhiccLcLEventPepsi);
      instance.SetNewArray(&newArray_erhiccLcLEventPepsi);
      instance.SetDelete(&delete_erhiccLcLEventPepsi);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventPepsi);
      instance.SetDestructor(&destruct_erhiccLcLEventPepsi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventPepsi*)
   {
      return GenerateInitInstanceLocal((::erhic::EventPepsi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventPepsi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventRapgap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLEventRapgap(void *p = 0);
   static void *newArray_erhiccLcLEventRapgap(Long_t size, void *p);
   static void delete_erhiccLcLEventRapgap(void *p);
   static void deleteArray_erhiccLcLEventRapgap(void *p);
   static void destruct_erhiccLcLEventRapgap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventRapgap*)
   {
      ::erhic::EventRapgap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventRapgap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventRapgap", ::erhic::EventRapgap::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventRapgap.h", 24,
                  typeid(::erhic::EventRapgap), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::EventRapgap::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventRapgap) );
      instance.SetNew(&new_erhiccLcLEventRapgap);
      instance.SetNewArray(&newArray_erhiccLcLEventRapgap);
      instance.SetDelete(&delete_erhiccLcLEventRapgap);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventRapgap);
      instance.SetDestructor(&destruct_erhiccLcLEventRapgap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventRapgap*)
   {
      return GenerateInitInstanceLocal((::erhic::EventRapgap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventRapgap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLogReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLLogReader(void *p);
   static void deleteArray_erhiccLcLLogReader(void *p);
   static void destruct_erhiccLcLLogReader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LogReader*)
   {
      ::erhic::LogReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LogReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LogReader", ::erhic::LogReader::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 36,
                  typeid(::erhic::LogReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LogReader::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::LogReader) );
      instance.SetDelete(&delete_erhiccLcLLogReader);
      instance.SetDeleteArray(&deleteArray_erhiccLcLLogReader);
      instance.SetDestructor(&destruct_erhiccLcLLogReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LogReader*)
   {
      return GenerateInitInstanceLocal((::erhic::LogReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LogReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLogReaderPythia_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLLogReaderPythia(void *p = 0);
   static void *newArray_erhiccLcLLogReaderPythia(Long_t size, void *p);
   static void delete_erhiccLcLLogReaderPythia(void *p);
   static void deleteArray_erhiccLcLLogReaderPythia(void *p);
   static void destruct_erhiccLcLLogReaderPythia(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LogReaderPythia*)
   {
      ::erhic::LogReaderPythia *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LogReaderPythia >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LogReaderPythia", ::erhic::LogReaderPythia::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 77,
                  typeid(::erhic::LogReaderPythia), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LogReaderPythia::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::LogReaderPythia) );
      instance.SetNew(&new_erhiccLcLLogReaderPythia);
      instance.SetNewArray(&newArray_erhiccLcLLogReaderPythia);
      instance.SetDelete(&delete_erhiccLcLLogReaderPythia);
      instance.SetDeleteArray(&deleteArray_erhiccLcLLogReaderPythia);
      instance.SetDestructor(&destruct_erhiccLcLLogReaderPythia);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LogReaderPythia*)
   {
      return GenerateInitInstanceLocal((::erhic::LogReaderPythia*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LogReaderPythia*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLogReaderPepsi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLLogReaderPepsi(void *p = 0);
   static void *newArray_erhiccLcLLogReaderPepsi(Long_t size, void *p);
   static void delete_erhiccLcLLogReaderPepsi(void *p);
   static void deleteArray_erhiccLcLLogReaderPepsi(void *p);
   static void destruct_erhiccLcLLogReaderPepsi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LogReaderPepsi*)
   {
      ::erhic::LogReaderPepsi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LogReaderPepsi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LogReaderPepsi", ::erhic::LogReaderPepsi::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 125,
                  typeid(::erhic::LogReaderPepsi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LogReaderPepsi::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::LogReaderPepsi) );
      instance.SetNew(&new_erhiccLcLLogReaderPepsi);
      instance.SetNewArray(&newArray_erhiccLcLLogReaderPepsi);
      instance.SetDelete(&delete_erhiccLcLLogReaderPepsi);
      instance.SetDeleteArray(&deleteArray_erhiccLcLLogReaderPepsi);
      instance.SetDestructor(&destruct_erhiccLcLLogReaderPepsi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LogReaderPepsi*)
   {
      return GenerateInitInstanceLocal((::erhic::LogReaderPepsi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LogReaderPepsi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLogReaderDjangoh_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLLogReaderDjangoh(void *p = 0);
   static void *newArray_erhiccLcLLogReaderDjangoh(Long_t size, void *p);
   static void delete_erhiccLcLLogReaderDjangoh(void *p);
   static void deleteArray_erhiccLcLLogReaderDjangoh(void *p);
   static void destruct_erhiccLcLLogReaderDjangoh(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LogReaderDjangoh*)
   {
      ::erhic::LogReaderDjangoh *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LogReaderDjangoh >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LogReaderDjangoh", ::erhic::LogReaderDjangoh::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 173,
                  typeid(::erhic::LogReaderDjangoh), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LogReaderDjangoh::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::LogReaderDjangoh) );
      instance.SetNew(&new_erhiccLcLLogReaderDjangoh);
      instance.SetNewArray(&newArray_erhiccLcLLogReaderDjangoh);
      instance.SetDelete(&delete_erhiccLcLLogReaderDjangoh);
      instance.SetDeleteArray(&deleteArray_erhiccLcLLogReaderDjangoh);
      instance.SetDestructor(&destruct_erhiccLcLLogReaderDjangoh);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LogReaderDjangoh*)
   {
      return GenerateInitInstanceLocal((::erhic::LogReaderDjangoh*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LogReaderDjangoh*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLogReaderMilou_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLLogReaderMilou(void *p = 0);
   static void *newArray_erhiccLcLLogReaderMilou(Long_t size, void *p);
   static void delete_erhiccLcLLogReaderMilou(void *p);
   static void deleteArray_erhiccLcLLogReaderMilou(void *p);
   static void destruct_erhiccLcLLogReaderMilou(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LogReaderMilou*)
   {
      ::erhic::LogReaderMilou *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LogReaderMilou >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LogReaderMilou", ::erhic::LogReaderMilou::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 221,
                  typeid(::erhic::LogReaderMilou), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LogReaderMilou::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::LogReaderMilou) );
      instance.SetNew(&new_erhiccLcLLogReaderMilou);
      instance.SetNewArray(&newArray_erhiccLcLLogReaderMilou);
      instance.SetDelete(&delete_erhiccLcLLogReaderMilou);
      instance.SetDeleteArray(&deleteArray_erhiccLcLLogReaderMilou);
      instance.SetDestructor(&destruct_erhiccLcLLogReaderMilou);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LogReaderMilou*)
   {
      return GenerateInitInstanceLocal((::erhic::LogReaderMilou*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LogReaderMilou*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLogReaderGmcTrans_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLLogReaderGmcTrans(void *p = 0);
   static void *newArray_erhiccLcLLogReaderGmcTrans(Long_t size, void *p);
   static void delete_erhiccLcLLogReaderGmcTrans(void *p);
   static void deleteArray_erhiccLcLLogReaderGmcTrans(void *p);
   static void destruct_erhiccLcLLogReaderGmcTrans(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LogReaderGmcTrans*)
   {
      ::erhic::LogReaderGmcTrans *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LogReaderGmcTrans >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LogReaderGmcTrans", ::erhic::LogReaderGmcTrans::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 302,
                  typeid(::erhic::LogReaderGmcTrans), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LogReaderGmcTrans::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::LogReaderGmcTrans) );
      instance.SetNew(&new_erhiccLcLLogReaderGmcTrans);
      instance.SetNewArray(&newArray_erhiccLcLLogReaderGmcTrans);
      instance.SetDelete(&delete_erhiccLcLLogReaderGmcTrans);
      instance.SetDeleteArray(&deleteArray_erhiccLcLLogReaderGmcTrans);
      instance.SetDestructor(&destruct_erhiccLcLLogReaderGmcTrans);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LogReaderGmcTrans*)
   {
      return GenerateInitInstanceLocal((::erhic::LogReaderGmcTrans*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LogReaderGmcTrans*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLLogReaderFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void streamer_erhiccLcLLogReaderFactory(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::LogReaderFactory*)
   {
      ::erhic::LogReaderFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::LogReaderFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::LogReaderFactory", ::erhic::LogReaderFactory::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 360,
                  typeid(::erhic::LogReaderFactory), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::LogReaderFactory::Dictionary, isa_proxy, 0,
                  sizeof(::erhic::LogReaderFactory) );
      instance.SetStreamerFunc(&streamer_erhiccLcLLogReaderFactory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::LogReaderFactory*)
   {
      return GenerateInitInstanceLocal((::erhic::LogReaderFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::LogReaderFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFileType_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_erhiccLcLFileType(void *p);
   static void deleteArray_erhiccLcLFileType(void *p);
   static void destruct_erhiccLcLFileType(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::FileType*)
   {
      ::erhic::FileType *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::FileType >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::FileType", ::erhic::FileType::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 424,
                  typeid(::erhic::FileType), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::FileType::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::FileType) );
      instance.SetDelete(&delete_erhiccLcLFileType);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFileType);
      instance.SetDestructor(&destruct_erhiccLcLFileType);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::FileType*)
   {
      return GenerateInitInstanceLocal((::erhic::FileType*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::FileType*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFileFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFileFactory_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::FileFactory*)
   {
      ::erhic::FileFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::erhic::FileFactory),0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::FileFactory", "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 533,
                  typeid(::erhic::FileFactory), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &erhiccLcLFileFactory_Dictionary, isa_proxy, 0,
                  sizeof(::erhic::FileFactory) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::FileFactory*)
   {
      return GenerateInitInstanceLocal((::erhic::FileFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::FileFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFileFactory_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::FileFactory*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLForester_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLForester(void *p = 0);
   static void *newArray_erhiccLcLForester(Long_t size, void *p);
   static void delete_erhiccLcLForester(void *p);
   static void deleteArray_erhiccLcLForester(void *p);
   static void destruct_erhiccLcLForester(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::Forester*)
   {
      ::erhic::Forester *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::Forester >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::Forester", ::erhic::Forester::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Forester.h", 39,
                  typeid(::erhic::Forester), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::Forester::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::Forester) );
      instance.SetNew(&new_erhiccLcLForester);
      instance.SetNewArray(&newArray_erhiccLcLForester);
      instance.SetDelete(&delete_erhiccLcLForester);
      instance.SetDeleteArray(&deleteArray_erhiccLcLForester);
      instance.SetDestructor(&destruct_erhiccLcLForester);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::Forester*)
   {
      return GenerateInitInstanceLocal((::erhic::Forester*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::Forester*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLForestercLcLStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_erhiccLcLForestercLcLStatus(void *p = 0);
   static void *newArray_erhiccLcLForestercLcLStatus(Long_t size, void *p);
   static void delete_erhiccLcLForestercLcLStatus(void *p);
   static void deleteArray_erhiccLcLForestercLcLStatus(void *p);
   static void destruct_erhiccLcLForestercLcLStatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::Forester::Status*)
   {
      ::erhic::Forester::Status *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::Forester::Status >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::Forester::Status", ::erhic::Forester::Status::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Forester.h", 153,
                  typeid(::erhic::Forester::Status), ::ROOT::DefineBehavior(ptr, ptr),
                  &::erhic::Forester::Status::Dictionary, isa_proxy, 4,
                  sizeof(::erhic::Forester::Status) );
      instance.SetNew(&new_erhiccLcLForestercLcLStatus);
      instance.SetNewArray(&newArray_erhiccLcLForestercLcLStatus);
      instance.SetDelete(&delete_erhiccLcLForestercLcLStatus);
      instance.SetDeleteArray(&deleteArray_erhiccLcLForestercLcLStatus);
      instance.SetDestructor(&destruct_erhiccLcLForestercLcLStatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::Forester::Status*)
   {
      return GenerateInitInstanceLocal((::erhic::Forester::Status*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::Forester::Status*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR_Dictionary();
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p = 0);
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(Long_t size, void *p);
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p);
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p);
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::EventFromAsciiFactory<erhic::EventPepsi>) == sizeof( ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventPepsigR));
      ::erhic::EventFromAsciiFactory<erhic::EventPepsi> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventFromAsciiFactory<erhic::EventPepsi> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventFromAsciiFactory<erhic::EventPepsi>", ::erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 86,
                  typeid(::erhic::EventFromAsciiFactory<erhic::EventPepsi>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventFromAsciiFactory<erhic::EventPepsi>) );
      instance.SetNew(&new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR);
      instance.SetNewArray(&newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR);
      instance.SetDelete(&delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR);
      instance.SetDestructor(&destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)
   {
      return GenerateInitInstanceLocal((::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR_Dictionary();
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p = 0);
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(Long_t size, void *p);
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p);
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p);
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::EventFromAsciiFactory<erhic::EventMilou>) == sizeof( ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventMilougR));
      ::erhic::EventFromAsciiFactory<erhic::EventMilou> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventFromAsciiFactory<erhic::EventMilou> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventFromAsciiFactory<erhic::EventMilou>", ::erhic::EventFromAsciiFactory<erhic::EventMilou>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 86,
                  typeid(::erhic::EventFromAsciiFactory<erhic::EventMilou>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventFromAsciiFactory<erhic::EventMilou>) );
      instance.SetNew(&new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR);
      instance.SetNewArray(&newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR);
      instance.SetDelete(&delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR);
      instance.SetDestructor(&destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)
   {
      return GenerateInitInstanceLocal((::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR_Dictionary();
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p = 0);
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(Long_t size, void *p);
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p);
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p);
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::EventFromAsciiFactory<erhic::EventRapgap>) == sizeof( ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventRapgapgR));
      ::erhic::EventFromAsciiFactory<erhic::EventRapgap> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventFromAsciiFactory<erhic::EventRapgap> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventFromAsciiFactory<erhic::EventRapgap>", ::erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 86,
                  typeid(::erhic::EventFromAsciiFactory<erhic::EventRapgap>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventFromAsciiFactory<erhic::EventRapgap>) );
      instance.SetNew(&new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR);
      instance.SetNewArray(&newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR);
      instance.SetDelete(&delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR);
      instance.SetDestructor(&destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)
   {
      return GenerateInitInstanceLocal((::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR_Dictionary();
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p = 0);
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(Long_t size, void *p);
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p);
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p);
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::EventFromAsciiFactory<erhic::EventDjangoh>) == sizeof( ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventDjangohgR));
      ::erhic::EventFromAsciiFactory<erhic::EventDjangoh> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventFromAsciiFactory<erhic::EventDjangoh> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventFromAsciiFactory<erhic::EventDjangoh>", ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 86,
                  typeid(::erhic::EventFromAsciiFactory<erhic::EventDjangoh>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventFromAsciiFactory<erhic::EventDjangoh>) );
      instance.SetNew(&new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR);
      instance.SetNewArray(&newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR);
      instance.SetDelete(&delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR);
      instance.SetDestructor(&destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)
   {
      return GenerateInitInstanceLocal((::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR_Dictionary();
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p = 0);
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(Long_t size, void *p);
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p);
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p);
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::EventFromAsciiFactory<erhic::EventDpmjet>) == sizeof( ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventDpmjetgR));
      ::erhic::EventFromAsciiFactory<erhic::EventDpmjet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventFromAsciiFactory<erhic::EventDpmjet> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventFromAsciiFactory<erhic::EventDpmjet>", ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 86,
                  typeid(::erhic::EventFromAsciiFactory<erhic::EventDpmjet>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventFromAsciiFactory<erhic::EventDpmjet>) );
      instance.SetNew(&new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR);
      instance.SetNewArray(&newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR);
      instance.SetDelete(&delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR);
      instance.SetDestructor(&destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)
   {
      return GenerateInitInstanceLocal((::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR_Dictionary();
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p = 0);
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(Long_t size, void *p);
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p);
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p);
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::EventFromAsciiFactory<erhic::EventPythia>) == sizeof( ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventPythiagR));
      ::erhic::EventFromAsciiFactory<erhic::EventPythia> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventFromAsciiFactory<erhic::EventPythia> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventFromAsciiFactory<erhic::EventPythia>", ::erhic::EventFromAsciiFactory<erhic::EventPythia>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 86,
                  typeid(::erhic::EventFromAsciiFactory<erhic::EventPythia>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventFromAsciiFactory<erhic::EventPythia>) );
      instance.SetNew(&new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR);
      instance.SetNewArray(&newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR);
      instance.SetDelete(&delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR);
      instance.SetDestructor(&destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)
   {
      return GenerateInitInstanceLocal((::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR_Dictionary();
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p = 0);
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(Long_t size, void *p);
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p);
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p);
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>) == sizeof( ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventGmcTransgR));
      ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::EventFromAsciiFactory<erhic::EventGmcTrans>", ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h", 86,
                  typeid(::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>) );
      instance.SetNew(&new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR);
      instance.SetNewArray(&newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR);
      instance.SetDelete(&delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR);
      instance.SetDestructor(&destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)
   {
      return GenerateInitInstanceLocal((::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventPythiagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFilelEerhiccLcLEventPythiagR_Dictionary();
   static void *new_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p = 0);
   static void *newArray_erhiccLcLFilelEerhiccLcLEventPythiagR(Long_t size, void *p);
   static void delete_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p);
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p);
   static void destruct_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::File<erhic::EventPythia>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::File<erhic::EventPythia>) == sizeof( ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventPythiagR));
      ::erhic::File<erhic::EventPythia> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::File<erhic::EventPythia> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::File<erhic::EventPythia>", ::erhic::File<erhic::EventPythia>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 464,
                  typeid(::erhic::File<erhic::EventPythia>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLFilelEerhiccLcLEventPythiagR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::File<erhic::EventPythia>) );
      instance.SetNew(&new_erhiccLcLFilelEerhiccLcLEventPythiagR);
      instance.SetNewArray(&newArray_erhiccLcLFilelEerhiccLcLEventPythiagR);
      instance.SetDelete(&delete_erhiccLcLFilelEerhiccLcLEventPythiagR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFilelEerhiccLcLEventPythiagR);
      instance.SetDestructor(&destruct_erhiccLcLFilelEerhiccLcLEventPythiagR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::File<erhic::EventPythia>*)
   {
      return GenerateInitInstanceLocal((::erhic::File<erhic::EventPythia>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPythia>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFilelEerhiccLcLEventPythiagR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPythia>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventMilougR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFilelEerhiccLcLEventMilougR_Dictionary();
   static void *new_erhiccLcLFilelEerhiccLcLEventMilougR(void *p = 0);
   static void *newArray_erhiccLcLFilelEerhiccLcLEventMilougR(Long_t size, void *p);
   static void delete_erhiccLcLFilelEerhiccLcLEventMilougR(void *p);
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventMilougR(void *p);
   static void destruct_erhiccLcLFilelEerhiccLcLEventMilougR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::File<erhic::EventMilou>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::File<erhic::EventMilou>) == sizeof( ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventMilougR));
      ::erhic::File<erhic::EventMilou> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::File<erhic::EventMilou> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::File<erhic::EventMilou>", ::erhic::File<erhic::EventMilou>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 464,
                  typeid(::erhic::File<erhic::EventMilou>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLFilelEerhiccLcLEventMilougR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::File<erhic::EventMilou>) );
      instance.SetNew(&new_erhiccLcLFilelEerhiccLcLEventMilougR);
      instance.SetNewArray(&newArray_erhiccLcLFilelEerhiccLcLEventMilougR);
      instance.SetDelete(&delete_erhiccLcLFilelEerhiccLcLEventMilougR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFilelEerhiccLcLEventMilougR);
      instance.SetDestructor(&destruct_erhiccLcLFilelEerhiccLcLEventMilougR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::File<erhic::EventMilou>*)
   {
      return GenerateInitInstanceLocal((::erhic::File<erhic::EventMilou>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::File<erhic::EventMilou>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFilelEerhiccLcLEventMilougR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventMilou>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventPepsigR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFilelEerhiccLcLEventPepsigR_Dictionary();
   static void *new_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p = 0);
   static void *newArray_erhiccLcLFilelEerhiccLcLEventPepsigR(Long_t size, void *p);
   static void delete_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p);
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p);
   static void destruct_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::File<erhic::EventPepsi>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::File<erhic::EventPepsi>) == sizeof( ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventPepsigR));
      ::erhic::File<erhic::EventPepsi> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::File<erhic::EventPepsi> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::File<erhic::EventPepsi>", ::erhic::File<erhic::EventPepsi>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 464,
                  typeid(::erhic::File<erhic::EventPepsi>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLFilelEerhiccLcLEventPepsigR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::File<erhic::EventPepsi>) );
      instance.SetNew(&new_erhiccLcLFilelEerhiccLcLEventPepsigR);
      instance.SetNewArray(&newArray_erhiccLcLFilelEerhiccLcLEventPepsigR);
      instance.SetDelete(&delete_erhiccLcLFilelEerhiccLcLEventPepsigR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFilelEerhiccLcLEventPepsigR);
      instance.SetDestructor(&destruct_erhiccLcLFilelEerhiccLcLEventPepsigR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::File<erhic::EventPepsi>*)
   {
      return GenerateInitInstanceLocal((::erhic::File<erhic::EventPepsi>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPepsi>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFilelEerhiccLcLEventPepsigR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPepsi>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventRapgapgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFilelEerhiccLcLEventRapgapgR_Dictionary();
   static void *new_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p = 0);
   static void *newArray_erhiccLcLFilelEerhiccLcLEventRapgapgR(Long_t size, void *p);
   static void delete_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p);
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p);
   static void destruct_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::File<erhic::EventRapgap>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::File<erhic::EventRapgap>) == sizeof( ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventRapgapgR));
      ::erhic::File<erhic::EventRapgap> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::File<erhic::EventRapgap> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::File<erhic::EventRapgap>", ::erhic::File<erhic::EventRapgap>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 464,
                  typeid(::erhic::File<erhic::EventRapgap>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLFilelEerhiccLcLEventRapgapgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::File<erhic::EventRapgap>) );
      instance.SetNew(&new_erhiccLcLFilelEerhiccLcLEventRapgapgR);
      instance.SetNewArray(&newArray_erhiccLcLFilelEerhiccLcLEventRapgapgR);
      instance.SetDelete(&delete_erhiccLcLFilelEerhiccLcLEventRapgapgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFilelEerhiccLcLEventRapgapgR);
      instance.SetDestructor(&destruct_erhiccLcLFilelEerhiccLcLEventRapgapgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::File<erhic::EventRapgap>*)
   {
      return GenerateInitInstanceLocal((::erhic::File<erhic::EventRapgap>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::File<erhic::EventRapgap>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFilelEerhiccLcLEventRapgapgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventRapgap>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventDjangohgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFilelEerhiccLcLEventDjangohgR_Dictionary();
   static void *new_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p = 0);
   static void *newArray_erhiccLcLFilelEerhiccLcLEventDjangohgR(Long_t size, void *p);
   static void delete_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p);
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p);
   static void destruct_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::File<erhic::EventDjangoh>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::File<erhic::EventDjangoh>) == sizeof( ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventDjangohgR));
      ::erhic::File<erhic::EventDjangoh> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::File<erhic::EventDjangoh> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::File<erhic::EventDjangoh>", ::erhic::File<erhic::EventDjangoh>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 464,
                  typeid(::erhic::File<erhic::EventDjangoh>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLFilelEerhiccLcLEventDjangohgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::File<erhic::EventDjangoh>) );
      instance.SetNew(&new_erhiccLcLFilelEerhiccLcLEventDjangohgR);
      instance.SetNewArray(&newArray_erhiccLcLFilelEerhiccLcLEventDjangohgR);
      instance.SetDelete(&delete_erhiccLcLFilelEerhiccLcLEventDjangohgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFilelEerhiccLcLEventDjangohgR);
      instance.SetDestructor(&destruct_erhiccLcLFilelEerhiccLcLEventDjangohgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::File<erhic::EventDjangoh>*)
   {
      return GenerateInitInstanceLocal((::erhic::File<erhic::EventDjangoh>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDjangoh>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFilelEerhiccLcLEventDjangohgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDjangoh>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventDpmjetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFilelEerhiccLcLEventDpmjetgR_Dictionary();
   static void *new_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p = 0);
   static void *newArray_erhiccLcLFilelEerhiccLcLEventDpmjetgR(Long_t size, void *p);
   static void delete_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p);
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p);
   static void destruct_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::File<erhic::EventDpmjet>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::File<erhic::EventDpmjet>) == sizeof( ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventDpmjetgR));
      ::erhic::File<erhic::EventDpmjet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::File<erhic::EventDpmjet> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::File<erhic::EventDpmjet>", ::erhic::File<erhic::EventDpmjet>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 464,
                  typeid(::erhic::File<erhic::EventDpmjet>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLFilelEerhiccLcLEventDpmjetgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::File<erhic::EventDpmjet>) );
      instance.SetNew(&new_erhiccLcLFilelEerhiccLcLEventDpmjetgR);
      instance.SetNewArray(&newArray_erhiccLcLFilelEerhiccLcLEventDpmjetgR);
      instance.SetDelete(&delete_erhiccLcLFilelEerhiccLcLEventDpmjetgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFilelEerhiccLcLEventDpmjetgR);
      instance.SetDestructor(&destruct_erhiccLcLFilelEerhiccLcLEventDpmjetgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::File<erhic::EventDpmjet>*)
   {
      return GenerateInitInstanceLocal((::erhic::File<erhic::EventDpmjet>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDpmjet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFilelEerhiccLcLEventDpmjetgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDpmjet>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventGmcTransgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void erhiccLcLFilelEerhiccLcLEventGmcTransgR_Dictionary();
   static void *new_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p = 0);
   static void *newArray_erhiccLcLFilelEerhiccLcLEventGmcTransgR(Long_t size, void *p);
   static void delete_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p);
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p);
   static void destruct_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::erhic::File<erhic::EventGmcTrans>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::erhic::File<erhic::EventGmcTrans>) == sizeof( ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventGmcTransgR));
      ::erhic::File<erhic::EventGmcTrans> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::erhic::File<erhic::EventGmcTrans> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("erhic::File<erhic::EventGmcTrans>", ::erhic::File<erhic::EventGmcTrans>::Class_Version(), "/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h", 464,
                  typeid(::erhic::File<erhic::EventGmcTrans>), ::ROOT::DefineBehavior(ptr, ptr),
                  &erhiccLcLFilelEerhiccLcLEventGmcTransgR_Dictionary, isa_proxy, 4,
                  sizeof(::erhic::File<erhic::EventGmcTrans>) );
      instance.SetNew(&new_erhiccLcLFilelEerhiccLcLEventGmcTransgR);
      instance.SetNewArray(&newArray_erhiccLcLFilelEerhiccLcLEventGmcTransgR);
      instance.SetDelete(&delete_erhiccLcLFilelEerhiccLcLEventGmcTransgR);
      instance.SetDeleteArray(&deleteArray_erhiccLcLFilelEerhiccLcLEventGmcTransgR);
      instance.SetDestructor(&destruct_erhiccLcLFilelEerhiccLcLEventGmcTransgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::erhic::File<erhic::EventGmcTrans>*)
   {
      return GenerateInitInstanceLocal((::erhic::File<erhic::EventGmcTrans>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::erhic::File<erhic::EventGmcTrans>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void erhiccLcLFilelEerhiccLcLEventGmcTransgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventGmcTrans>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void auto_ptrlEerhiccLcLPidgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void auto_ptrlEerhiccLcLPidgR_Dictionary();
   static void *new_auto_ptrlEerhiccLcLPidgR(void *p = 0);
   static void *newArray_auto_ptrlEerhiccLcLPidgR(Long_t size, void *p);
   static void delete_auto_ptrlEerhiccLcLPidgR(void *p);
   static void deleteArray_auto_ptrlEerhiccLcLPidgR(void *p);
   static void destruct_auto_ptrlEerhiccLcLPidgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const auto_ptr<erhic::Pid>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(auto_ptr<erhic::Pid>) == sizeof( ::ROOTShadow::Shadow::auto_ptrlEerhiccLcLPidgR));
      auto_ptr<erhic::Pid> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(auto_ptr<erhic::Pid>),0);
      static ::ROOT::TGenericClassInfo 
         instance("auto_ptr<erhic::Pid>", "prec_stl/memory", 210,
                  typeid(auto_ptr<erhic::Pid>), ::ROOT::DefineBehavior(ptr, ptr),
                  &auto_ptrlEerhiccLcLPidgR_ShowMembers, &auto_ptrlEerhiccLcLPidgR_Dictionary, isa_proxy, 0,
                  sizeof(auto_ptr<erhic::Pid>) );
      instance.SetNew(&new_auto_ptrlEerhiccLcLPidgR);
      instance.SetNewArray(&newArray_auto_ptrlEerhiccLcLPidgR);
      instance.SetDelete(&delete_auto_ptrlEerhiccLcLPidgR);
      instance.SetDeleteArray(&deleteArray_auto_ptrlEerhiccLcLPidgR);
      instance.SetDestructor(&destruct_auto_ptrlEerhiccLcLPidgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const auto_ptr<erhic::Pid>*)
   {
      return GenerateInitInstanceLocal((auto_ptr<erhic::Pid>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const auto_ptr<erhic::Pid>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void auto_ptrlEerhiccLcLPidgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const auto_ptr<erhic::Pid>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr Pid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Pid::Class_Name()
{
   return "erhic::Pid";
}

//______________________________________________________________________________
const char *Pid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Pid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Pid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Pid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Pid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr VirtualParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VirtualParticle::Class_Name()
{
   return "erhic::VirtualParticle";
}

//______________________________________________________________________________
const char *VirtualParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VirtualParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VirtualParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VirtualParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualParticle*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventMC::Class_Name()
{
   return "erhic::EventMC";
}

//______________________________________________________________________________
const char *EventMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMC*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr ParticleMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ParticleMC::Class_Name()
{
   return "erhic::ParticleMC";
}

//______________________________________________________________________________
const char *ParticleMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::ParticleMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParticleMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::ParticleMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParticleMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::ParticleMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParticleMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::ParticleMC*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
//______________________________________________________________________________
atomic_TClass_ptr BeamParticles::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BeamParticles::Class_Name()
{
   return "BeamParticles";
}

//______________________________________________________________________________
const char *BeamParticles::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BeamParticles*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BeamParticles::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BeamParticles*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BeamParticles::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BeamParticles*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BeamParticles::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BeamParticles*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr VirtualEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VirtualEvent::Class_Name()
{
   return "erhic::VirtualEvent";
}

//______________________________________________________________________________
const char *VirtualEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VirtualEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VirtualEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VirtualEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEvent*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventDis::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventDis::Class_Name()
{
   return "erhic::EventDis";
}

//______________________________________________________________________________
const char *EventDis::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventDis::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventDis::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventDis::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDis*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr DisKinematics::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DisKinematics::Class_Name()
{
   return "erhic::DisKinematics";
}

//______________________________________________________________________________
const char *DisKinematics::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DisKinematics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DisKinematics::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DisKinematics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DisKinematics::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DisKinematics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DisKinematics::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DisKinematics*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr KinematicsComputer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KinematicsComputer::Class_Name()
{
   return "erhic::KinematicsComputer";
}

//______________________________________________________________________________
const char *KinematicsComputer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::KinematicsComputer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KinematicsComputer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::KinematicsComputer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KinematicsComputer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::KinematicsComputer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KinematicsComputer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::KinematicsComputer*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LeptonKinematicsComputer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LeptonKinematicsComputer::Class_Name()
{
   return "erhic::LeptonKinematicsComputer";
}

//______________________________________________________________________________
const char *LeptonKinematicsComputer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LeptonKinematicsComputer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LeptonKinematicsComputer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LeptonKinematicsComputer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LeptonKinematicsComputer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LeptonKinematicsComputer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LeptonKinematicsComputer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LeptonKinematicsComputer*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr JacquetBlondelComputer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JacquetBlondelComputer::Class_Name()
{
   return "erhic::JacquetBlondelComputer";
}

//______________________________________________________________________________
const char *JacquetBlondelComputer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::JacquetBlondelComputer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JacquetBlondelComputer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::JacquetBlondelComputer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JacquetBlondelComputer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::JacquetBlondelComputer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JacquetBlondelComputer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::JacquetBlondelComputer*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr DoubleAngleComputer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DoubleAngleComputer::Class_Name()
{
   return "erhic::DoubleAngleComputer";
}

//______________________________________________________________________________
const char *DoubleAngleComputer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DoubleAngleComputer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DoubleAngleComputer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DoubleAngleComputer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DoubleAngleComputer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DoubleAngleComputer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DoubleAngleComputer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::DoubleAngleComputer*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr VirtualEventFactory::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VirtualEventFactory::Class_Name()
{
   return "erhic::VirtualEventFactory";
}

//______________________________________________________________________________
const char *VirtualEventFactory::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEventFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VirtualEventFactory::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEventFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VirtualEventFactory::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEventFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VirtualEventFactory::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::VirtualEventFactory*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
//______________________________________________________________________________
atomic_TClass_ptr EventToDot::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventToDot::Class_Name()
{
   return "EventToDot";
}

//______________________________________________________________________________
const char *EventToDot::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventToDot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventToDot::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventToDot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventToDot::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventToDot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventToDot::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventToDot*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr Reader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Reader::Class_Name()
{
   return "erhic::Reader";
}

//______________________________________________________________________________
const char *Reader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Reader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Reader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Reader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Reader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Reader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Reader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Reader*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventDjangoh::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventDjangoh::Class_Name()
{
   return "erhic::EventDjangoh";
}

//______________________________________________________________________________
const char *EventDjangoh::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDjangoh*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventDjangoh::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDjangoh*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventDjangoh::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDjangoh*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventDjangoh::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDjangoh*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventDpmjet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventDpmjet::Class_Name()
{
   return "erhic::EventDpmjet";
}

//______________________________________________________________________________
const char *EventDpmjet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDpmjet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventDpmjet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDpmjet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventDpmjet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDpmjet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventDpmjet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventDpmjet*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventPythia::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventPythia::Class_Name()
{
   return "erhic::EventPythia";
}

//______________________________________________________________________________
const char *EventPythia::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPythia*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventPythia::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPythia*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventPythia::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPythia*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventPythia::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPythia*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventGmcTrans::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventGmcTrans::Class_Name()
{
   return "erhic::EventGmcTrans";
}

//______________________________________________________________________________
const char *EventGmcTrans::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventGmcTrans*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventGmcTrans::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventGmcTrans*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventGmcTrans::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventGmcTrans*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventGmcTrans::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventGmcTrans*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventMCFilterABC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventMCFilterABC::Class_Name()
{
   return "erhic::EventMCFilterABC";
}

//______________________________________________________________________________
const char *EventMCFilterABC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMCFilterABC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventMCFilterABC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMCFilterABC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventMCFilterABC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMCFilterABC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventMCFilterABC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMCFilterABC*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventMilou::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventMilou::Class_Name()
{
   return "erhic::EventMilou";
}

//______________________________________________________________________________
const char *EventMilou::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMilou*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventMilou::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMilou*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventMilou::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMilou*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventMilou::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventMilou*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventPepsi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventPepsi::Class_Name()
{
   return "erhic::EventPepsi";
}

//______________________________________________________________________________
const char *EventPepsi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPepsi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventPepsi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPepsi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventPepsi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPepsi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventPepsi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventPepsi*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr EventRapgap::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventRapgap::Class_Name()
{
   return "erhic::EventRapgap";
}

//______________________________________________________________________________
const char *EventRapgap::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventRapgap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventRapgap::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventRapgap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventRapgap::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventRapgap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventRapgap::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventRapgap*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LogReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LogReader::Class_Name()
{
   return "erhic::LogReader";
}

//______________________________________________________________________________
const char *LogReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LogReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LogReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LogReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReader*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LogReaderPythia::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LogReaderPythia::Class_Name()
{
   return "erhic::LogReaderPythia";
}

//______________________________________________________________________________
const char *LogReaderPythia::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPythia*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LogReaderPythia::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPythia*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LogReaderPythia::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPythia*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LogReaderPythia::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPythia*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LogReaderPepsi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LogReaderPepsi::Class_Name()
{
   return "erhic::LogReaderPepsi";
}

//______________________________________________________________________________
const char *LogReaderPepsi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPepsi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LogReaderPepsi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPepsi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LogReaderPepsi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPepsi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LogReaderPepsi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderPepsi*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LogReaderDjangoh::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LogReaderDjangoh::Class_Name()
{
   return "erhic::LogReaderDjangoh";
}

//______________________________________________________________________________
const char *LogReaderDjangoh::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderDjangoh*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LogReaderDjangoh::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderDjangoh*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LogReaderDjangoh::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderDjangoh*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LogReaderDjangoh::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderDjangoh*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LogReaderMilou::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LogReaderMilou::Class_Name()
{
   return "erhic::LogReaderMilou";
}

//______________________________________________________________________________
const char *LogReaderMilou::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderMilou*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LogReaderMilou::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderMilou*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LogReaderMilou::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderMilou*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LogReaderMilou::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderMilou*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LogReaderGmcTrans::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LogReaderGmcTrans::Class_Name()
{
   return "erhic::LogReaderGmcTrans";
}

//______________________________________________________________________________
const char *LogReaderGmcTrans::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderGmcTrans*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LogReaderGmcTrans::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderGmcTrans*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LogReaderGmcTrans::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderGmcTrans*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LogReaderGmcTrans::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderGmcTrans*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr LogReaderFactory::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LogReaderFactory::Class_Name()
{
   return "erhic::LogReaderFactory";
}

//______________________________________________________________________________
const char *LogReaderFactory::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LogReaderFactory::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LogReaderFactory::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LogReaderFactory::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::LogReaderFactory*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr FileType::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FileType::Class_Name()
{
   return "erhic::FileType";
}

//______________________________________________________________________________
const char *FileType::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::FileType*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FileType::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::FileType*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FileType::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::FileType*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FileType::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::FileType*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr Forester::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Forester::Class_Name()
{
   return "erhic::Forester";
}

//______________________________________________________________________________
const char *Forester::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Forester::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Forester::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Forester::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
atomic_TClass_ptr Forester::Status::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Forester::Status::Class_Name()
{
   return "erhic::Forester::Status";
}

//______________________________________________________________________________
const char *Forester::Status::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester::Status*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Forester::Status::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester::Status*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Forester::Status::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester::Status*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Forester::Status::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::Forester::Status*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr EventFromAsciiFactory<erhic::EventPepsi>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventPepsi>::Class_Name()
{
   return "erhic::EventFromAsciiFactory<erhic::EventPepsi>";
}

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventPepsi>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int EventFromAsciiFactory<erhic::EventPepsi>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventPepsi>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *EventFromAsciiFactory<erhic::EventPepsi>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr EventFromAsciiFactory<erhic::EventMilou>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventMilou>::Class_Name()
{
   return "erhic::EventFromAsciiFactory<erhic::EventMilou>";
}

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventMilou>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int EventFromAsciiFactory<erhic::EventMilou>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventMilou>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *EventFromAsciiFactory<erhic::EventMilou>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr EventFromAsciiFactory<erhic::EventRapgap>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventRapgap>::Class_Name()
{
   return "erhic::EventFromAsciiFactory<erhic::EventRapgap>";
}

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventRapgap>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int EventFromAsciiFactory<erhic::EventRapgap>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventRapgap>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *EventFromAsciiFactory<erhic::EventRapgap>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr EventFromAsciiFactory<erhic::EventDjangoh>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventDjangoh>::Class_Name()
{
   return "erhic::EventFromAsciiFactory<erhic::EventDjangoh>";
}

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventDjangoh>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int EventFromAsciiFactory<erhic::EventDjangoh>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventDjangoh>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *EventFromAsciiFactory<erhic::EventDjangoh>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr EventFromAsciiFactory<erhic::EventDpmjet>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventDpmjet>::Class_Name()
{
   return "erhic::EventFromAsciiFactory<erhic::EventDpmjet>";
}

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventDpmjet>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int EventFromAsciiFactory<erhic::EventDpmjet>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventDpmjet>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *EventFromAsciiFactory<erhic::EventDpmjet>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr EventFromAsciiFactory<erhic::EventPythia>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventPythia>::Class_Name()
{
   return "erhic::EventFromAsciiFactory<erhic::EventPythia>";
}

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventPythia>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int EventFromAsciiFactory<erhic::EventPythia>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventPythia>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *EventFromAsciiFactory<erhic::EventPythia>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr EventFromAsciiFactory<erhic::EventGmcTrans>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventGmcTrans>::Class_Name()
{
   return "erhic::EventFromAsciiFactory<erhic::EventGmcTrans>";
}

//______________________________________________________________________________
template <> const char *EventFromAsciiFactory<erhic::EventGmcTrans>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int EventFromAsciiFactory<erhic::EventGmcTrans>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventGmcTrans>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *EventFromAsciiFactory<erhic::EventGmcTrans>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr File<erhic::EventPythia>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *File<erhic::EventPythia>::Class_Name()
{
   return "erhic::File<erhic::EventPythia>";
}

//______________________________________________________________________________
template <> const char *File<erhic::EventPythia>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPythia>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int File<erhic::EventPythia>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPythia>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void File<erhic::EventPythia>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPythia>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *File<erhic::EventPythia>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPythia>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr File<erhic::EventMilou>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *File<erhic::EventMilou>::Class_Name()
{
   return "erhic::File<erhic::EventMilou>";
}

//______________________________________________________________________________
template <> const char *File<erhic::EventMilou>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventMilou>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int File<erhic::EventMilou>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventMilou>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void File<erhic::EventMilou>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventMilou>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *File<erhic::EventMilou>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventMilou>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr File<erhic::EventPepsi>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *File<erhic::EventPepsi>::Class_Name()
{
   return "erhic::File<erhic::EventPepsi>";
}

//______________________________________________________________________________
template <> const char *File<erhic::EventPepsi>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPepsi>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int File<erhic::EventPepsi>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPepsi>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void File<erhic::EventPepsi>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPepsi>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *File<erhic::EventPepsi>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPepsi>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr File<erhic::EventRapgap>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *File<erhic::EventRapgap>::Class_Name()
{
   return "erhic::File<erhic::EventRapgap>";
}

//______________________________________________________________________________
template <> const char *File<erhic::EventRapgap>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventRapgap>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int File<erhic::EventRapgap>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventRapgap>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void File<erhic::EventRapgap>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventRapgap>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *File<erhic::EventRapgap>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventRapgap>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr File<erhic::EventDjangoh>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *File<erhic::EventDjangoh>::Class_Name()
{
   return "erhic::File<erhic::EventDjangoh>";
}

//______________________________________________________________________________
template <> const char *File<erhic::EventDjangoh>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDjangoh>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int File<erhic::EventDjangoh>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDjangoh>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void File<erhic::EventDjangoh>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDjangoh>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *File<erhic::EventDjangoh>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDjangoh>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr File<erhic::EventDpmjet>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *File<erhic::EventDpmjet>::Class_Name()
{
   return "erhic::File<erhic::EventDpmjet>";
}

//______________________________________________________________________________
template <> const char *File<erhic::EventDpmjet>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDpmjet>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int File<erhic::EventDpmjet>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDpmjet>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void File<erhic::EventDpmjet>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDpmjet>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *File<erhic::EventDpmjet>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDpmjet>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
template <> atomic_TClass_ptr File<erhic::EventGmcTrans>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *File<erhic::EventGmcTrans>::Class_Name()
{
   return "erhic::File<erhic::EventGmcTrans>";
}

//______________________________________________________________________________
template <> const char *File<erhic::EventGmcTrans>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventGmcTrans>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int File<erhic::EventGmcTrans>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventGmcTrans>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void File<erhic::EventGmcTrans>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventGmcTrans>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *File<erhic::EventGmcTrans>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventGmcTrans>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace erhic
      namespace erhic {
//______________________________________________________________________________
void VirtualParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::VirtualParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::VirtualParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::VirtualParticle::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void VirtualParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::VirtualParticle.
      TClass *R__cl = ::erhic::VirtualParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLVirtualParticle(void *p) {
      delete ((::erhic::VirtualParticle*)p);
   }
   static void deleteArray_erhiccLcLVirtualParticle(void *p) {
      delete [] ((::erhic::VirtualParticle*)p);
   }
   static void destruct_erhiccLcLVirtualParticle(void *p) {
      typedef ::erhic::VirtualParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::VirtualParticle

      namespace erhic {
//______________________________________________________________________________
void ParticleMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::ParticleMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::ParticleMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::ParticleMC::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void ParticleMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::ParticleMC.
      TClass *R__cl = ::erhic::ParticleMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "I", &I);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KS", &KS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orig", &orig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daughter", &daughter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ldaughter", &ldaughter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xv", &xv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yv", &yv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zv", &zv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentId", &parentId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rapidity", &rapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xFeynman", &xFeynman);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaGamma", &thetaGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptVsGamma", &ptVsGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiPrf", &phiPrf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event", &event);
      R__insp.InspectMember(event, "event.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::VirtualParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLParticleMC(void *p) {
      return  p ? new(p) ::erhic::ParticleMC : new ::erhic::ParticleMC;
   }
   static void *newArray_erhiccLcLParticleMC(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::ParticleMC[nElements] : new ::erhic::ParticleMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLParticleMC(void *p) {
      delete ((::erhic::ParticleMC*)p);
   }
   static void deleteArray_erhiccLcLParticleMC(void *p) {
      delete [] ((::erhic::ParticleMC*)p);
   }
   static void destruct_erhiccLcLParticleMC(void *p) {
      typedef ::erhic::ParticleMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::ParticleMC

      namespace erhic {
//______________________________________________________________________________
void EventMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventMC::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventMC.
      TClass *R__cl = ::erhic::EventMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", &process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTracks", &nTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ELeptonInNucl", &ELeptonInNucl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ELeptonOutNucl", &ELeptonOutNucl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particles", &particles);
      R__insp.InspectMember(particles, "particles.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventDis baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLEventMC(void *p) {
      delete ((::erhic::EventMC*)p);
   }
   static void deleteArray_erhiccLcLEventMC(void *p) {
      delete [] ((::erhic::EventMC*)p);
   }
   static void destruct_erhiccLcLEventMC(void *p) {
      typedef ::erhic::EventMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventMC

      namespace erhic {
//______________________________________________________________________________
void VirtualEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::VirtualEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::VirtualEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::VirtualEvent::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void VirtualEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::VirtualEvent.
      TClass *R__cl = ::erhic::VirtualEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLVirtualEvent(void *p) {
      delete ((::erhic::VirtualEvent*)p);
   }
   static void deleteArray_erhiccLcLVirtualEvent(void *p) {
      delete [] ((::erhic::VirtualEvent*)p);
   }
   static void destruct_erhiccLcLVirtualEvent(void *p) {
      typedef ::erhic::VirtualEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::VirtualEvent

      namespace erhic {
//______________________________________________________________________________
void EventDis::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventDis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventDis::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventDis::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventDis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventDis.
      TClass *R__cl = ::erhic::EventDis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QSquared", &QSquared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WSquared", &WSquared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu", &nu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yJB", &yJB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QSquaredJB", &QSquaredJB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xJB", &xJB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WSquaredJB", &WSquaredJB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yDA", &yDA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QSquaredDA", &QSquaredDA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xDA", &xDA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WSquaredDA", &WSquaredDA);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::VirtualEvent baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLEventDis(void *p) {
      delete ((::erhic::EventDis*)p);
   }
   static void deleteArray_erhiccLcLEventDis(void *p) {
      delete [] ((::erhic::EventDis*)p);
   }
   static void destruct_erhiccLcLEventDis(void *p) {
      typedef ::erhic::EventDis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventDis

      namespace erhic {
//______________________________________________________________________________
void EventPythia::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventPythia.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventPythia::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventPythia::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventPythia::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventPythia.
      TClass *R__cl = ::erhic::EventPythia::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nucleon", &nucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgtparton", &tgtparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamparton", &beamparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genevent", &genevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xtgtparton", &xtgtparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xbeamparton", &xbeamparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetabeamparton", &thetabeamparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptonphi", &leptonphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F1", &F1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma_rad", &sigma_rad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_hat", &t_hat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "u_hat", &u_hat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2_hat", &Q2_hat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigRadCor", &SigRadCor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EBrems", &EBrems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonflux", &photonflux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueY", &trueY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueQ2", &trueQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueX", &trueX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueW2", &trueW2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueNu", &trueNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2", &F2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R", &R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt2_hat", &pt2_hat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sHat", &sHat);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventMC baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventPythia(void *p) {
      return  p ? new(p) ::erhic::EventPythia : new ::erhic::EventPythia;
   }
   static void *newArray_erhiccLcLEventPythia(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventPythia[nElements] : new ::erhic::EventPythia[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventPythia(void *p) {
      delete ((::erhic::EventPythia*)p);
   }
   static void deleteArray_erhiccLcLEventPythia(void *p) {
      delete [] ((::erhic::EventPythia*)p);
   }
   static void destruct_erhiccLcLEventPythia(void *p) {
      typedef ::erhic::EventPythia current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventPythia

      namespace erhic {
//______________________________________________________________________________
void EventRapgap::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventRapgap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventRapgap::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventRapgap::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventRapgap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventRapgap.
      TClass *R__cl = ::erhic::EventRapgap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idir", &idir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idisdif", &idisdif);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genevent", &genevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cs", &cs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma_cs", &sigma_cs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "s", &s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q2", &q2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xgam", &xgam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xpr", &xpr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pt_h", &Pt_h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_pom", &x_pom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sHat2", &sHat2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1", &x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi1", &phi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt2_hat", &pt2_hat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sHat", &sHat);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventMC baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventRapgap(void *p) {
      return  p ? new(p) ::erhic::EventRapgap : new ::erhic::EventRapgap;
   }
   static void *newArray_erhiccLcLEventRapgap(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventRapgap[nElements] : new ::erhic::EventRapgap[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventRapgap(void *p) {
      delete ((::erhic::EventRapgap*)p);
   }
   static void deleteArray_erhiccLcLEventRapgap(void *p) {
      delete [] ((::erhic::EventRapgap*)p);
   }
   static void destruct_erhiccLcLEventRapgap(void *p) {
      typedef ::erhic::EventRapgap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventRapgap

      namespace erhic {
//______________________________________________________________________________
void EventPepsi::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventPepsi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventPepsi::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventPepsi::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventPepsi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventPepsi.
      TClass *R__cl = ::erhic::EventPepsi::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nucleon", &nucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "struckparton", &struckparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partontrck", &partontrck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genevent", &genevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subprocess", &subprocess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueY", &trueY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueQ2", &trueQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueX", &trueX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueW2", &trueW2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueNu", &trueNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FixedWeight", &FixedWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Weight", &Weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxsec", &dxsec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtraWeight", &ExtraWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Dilute", &Dilute);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F1", &F1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2", &F2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "A1", &A1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "A2", &A2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R", &R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DePol", &DePol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D", &D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eps", &Eps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi", &Chi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gendilut", &gendilut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genF1", &genF1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genF2", &genF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genA1", &genA1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genA2", &genA2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genR", &genR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genDepol", &genDepol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gend", &gend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "geneta", &geneta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "geneps", &geneps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genchi", &genchi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigCorr", &SigCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "radgamEnucl", &radgamEnucl);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventMC baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventPepsi(void *p) {
      return  p ? new(p) ::erhic::EventPepsi : new ::erhic::EventPepsi;
   }
   static void *newArray_erhiccLcLEventPepsi(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventPepsi[nElements] : new ::erhic::EventPepsi[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventPepsi(void *p) {
      delete ((::erhic::EventPepsi*)p);
   }
   static void deleteArray_erhiccLcLEventPepsi(void *p) {
      delete [] ((::erhic::EventPepsi*)p);
   }
   static void destruct_erhiccLcLEventPepsi(void *p) {
      typedef ::erhic::EventPepsi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventPepsi

      namespace erhic {
//______________________________________________________________________________
void EventDjangoh::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventDjangoh.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventDjangoh::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventDjangoh::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventDjangoh::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventDjangoh.
      TClass *R__cl = ::erhic::EventDjangoh::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nucleon", &nucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IChannel", &IChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dprocess", &dprocess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dstruckparton", &dstruckparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dpartontrck", &dpartontrck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dY", &dY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dQ2", &dQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dX", &dX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dW2", &dW2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dNu", &dNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueY", &dtrueY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueQ2", &dtrueQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueX", &dtrueX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueW2", &dtrueW2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueNu", &dtrueNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigTot", &sigTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigTotErr", &sigTotErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D", &D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F1NC", &F1NC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3NC", &F3NC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G1NC", &G1NC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G3NC", &G3NC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "A1NC", &A1NC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F1CC", &F1CC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3CC", &F3CC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G1CC", &G1CC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G5CC", &G5CC);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventMC baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventDjangoh(void *p) {
      return  p ? new(p) ::erhic::EventDjangoh : new ::erhic::EventDjangoh;
   }
   static void *newArray_erhiccLcLEventDjangoh(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventDjangoh[nElements] : new ::erhic::EventDjangoh[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventDjangoh(void *p) {
      delete ((::erhic::EventDjangoh*)p);
   }
   static void deleteArray_erhiccLcLEventDjangoh(void *p) {
      delete [] ((::erhic::EventDjangoh*)p);
   }
   static void destruct_erhiccLcLEventDjangoh(void *p) {
      typedef ::erhic::EventDjangoh current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventDjangoh

      namespace erhic {
//______________________________________________________________________________
void EventDpmjet::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventDpmjet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventDpmjet::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventDpmjet::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventDpmjet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventDpmjet.
      TClass *R__cl = ::erhic::EventDpmjet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ievent", &ievent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "I", &I);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process1", &process1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process2", &process2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IP", &IP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgtparton", &tgtparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "prjparton", &prjparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nucleon", &nucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xtgtparton", &xtgtparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xprjparton", &xprjparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueW2", &dtrueW2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueNu", &dtrueNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueQ2", &dtrueQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueY", &dtrueY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtrueX", &dtrueX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta_Evt", &theta_Evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonFlux", &photonFlux);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventMC baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventDpmjet(void *p) {
      return  p ? new(p) ::erhic::EventDpmjet : new ::erhic::EventDpmjet;
   }
   static void *newArray_erhiccLcLEventDpmjet(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventDpmjet[nElements] : new ::erhic::EventDpmjet[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventDpmjet(void *p) {
      delete ((::erhic::EventDpmjet*)p);
   }
   static void deleteArray_erhiccLcLEventDpmjet(void *p) {
      delete [] ((::erhic::EventDpmjet*)p);
   }
   static void destruct_erhiccLcLEventDpmjet(void *p) {
      typedef ::erhic::EventDpmjet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventDpmjet

      namespace erhic {
//______________________________________________________________________________
void EventMilou::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventMilou.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventMilou::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventMilou::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventMilou::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventMilou.
      TClass *R__cl = ::erhic::EventMilou::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "radcorr", &radcorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weight", &weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueX", &trueX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueQ2", &trueQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueY", &trueY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueT", &trueT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "truePhi", &truePhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phibelgen", &phibelgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phibelres", &phibelres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phibelrec", &phibelrec);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventMC baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventMilou(void *p) {
      return  p ? new(p) ::erhic::EventMilou : new ::erhic::EventMilou;
   }
   static void *newArray_erhiccLcLEventMilou(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventMilou[nElements] : new ::erhic::EventMilou[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventMilou(void *p) {
      delete ((::erhic::EventMilou*)p);
   }
   static void deleteArray_erhiccLcLEventMilou(void *p) {
      delete [] ((::erhic::EventMilou*)p);
   }
   static void destruct_erhiccLcLEventMilou(void *p) {
      typedef ::erhic::EventMilou current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventMilou

      namespace erhic {
//______________________________________________________________________________
void EventGmcTrans::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventGmcTrans.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventGmcTrans::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventGmcTrans::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventGmcTrans::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventGmcTrans.
      TClass *R__cl = ::erhic::EventGmcTrans::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStruckQuark", &mStruckQuark);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQSquared", &mQSquared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBjorkenX", &mBjorkenX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mInelasticity", &mInelasticity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWSquared", &mWSquared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNu", &mNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mS", &mS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZ", &mZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHadronPt", &mHadronPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLeptonTheta", &mLeptonTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLeptonPhi", &mLeptonPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhiSpin", &mPhiSpin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhiHadron", &mPhiHadron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mF1", &mF1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mG1", &mG1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mH1", &mH1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mD1", &mD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mF1TPerp", &mF1TPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mF1TPerp1", &mF1TPerp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mF1TPerp12", &mF1TPerp12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mH1Perp", &mH1Perp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mH1Perp1", &mH1Perp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mH1Perp12", &mH1Perp12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutSiv", &mAutSiv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutWtSiv", &mAutWtSiv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutSivAllQ", &mAutSivAllQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutWtSivAllQ", &mAutWtSivAllQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutSivPiDiff", &mAutSivPiDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutWtSivPiDiff", &mAutWtSivPiDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutCol", &mAutCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutWtCol", &mAutWtCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutTw3Col", &mAutTw3Col);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutWtTw3Col", &mAutWtTw3Col);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutColAllQ", &mAutColAllQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAutWtColAllQ", &mAutWtColAllQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXUnpolarised", &mXUnpolarised);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXSivers", &mXSivers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXCollins", &mXCollins);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::EventMC baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventGmcTrans(void *p) {
      return  p ? new(p) ::erhic::EventGmcTrans : new ::erhic::EventGmcTrans;
   }
   static void *newArray_erhiccLcLEventGmcTrans(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventGmcTrans[nElements] : new ::erhic::EventGmcTrans[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventGmcTrans(void *p) {
      delete ((::erhic::EventGmcTrans*)p);
   }
   static void deleteArray_erhiccLcLEventGmcTrans(void *p) {
      delete [] ((::erhic::EventGmcTrans*)p);
   }
   static void destruct_erhiccLcLEventGmcTrans(void *p) {
      typedef ::erhic::EventGmcTrans current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventGmcTrans

      namespace erhic {
//______________________________________________________________________________
void VirtualEventFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::VirtualEventFactory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::VirtualEventFactory::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::VirtualEventFactory::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void VirtualEventFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::VirtualEventFactory.
      TClass *R__cl = ::erhic::VirtualEventFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLVirtualEventFactory(void *p) {
      delete ((::erhic::VirtualEventFactory*)p);
   }
   static void deleteArray_erhiccLcLVirtualEventFactory(void *p) {
      delete [] ((::erhic::VirtualEventFactory*)p);
   }
   static void destruct_erhiccLcLVirtualEventFactory(void *p) {
      typedef ::erhic::VirtualEventFactory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::VirtualEventFactory

      namespace erhic {
//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventPepsi>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventFromAsciiFactory<erhic::EventPepsi>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::EventFromAsciiFactory<erhic::EventPepsi>.
      typedef ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventPepsigR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mInput", &sobj->mInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&sobj->mLine);
      R__insp.InspectMember("string", (void*)&sobj->mLine, "mLine.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", (void*)&sobj->mEvent);
      R__insp.InspectMember("auto_ptr<erhic::EventPepsi>", (void*)&sobj->mEvent, "mEvent.", true);
      sobj->erhic::VirtualEventFactory::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void EventFromAsciiFactory<erhic::EventPepsi>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p) {
      return  p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventPepsi> : new ::erhic::EventFromAsciiFactory<erhic::EventPepsi>;
   }
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventPepsi>[nElements] : new ::erhic::EventFromAsciiFactory<erhic::EventPepsi>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p) {
      delete ((::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)p);
   }
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p) {
      delete [] ((::erhic::EventFromAsciiFactory<erhic::EventPepsi>*)p);
   }
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void *p) {
      typedef ::erhic::EventFromAsciiFactory<erhic::EventPepsi> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventFromAsciiFactory<erhic::EventPepsi>

      namespace erhic {
//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventMilou>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventFromAsciiFactory<erhic::EventMilou>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventFromAsciiFactory<erhic::EventMilou>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventFromAsciiFactory<erhic::EventMilou>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::EventFromAsciiFactory<erhic::EventMilou>.
      typedef ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventMilougR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mInput", &sobj->mInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&sobj->mLine);
      R__insp.InspectMember("string", (void*)&sobj->mLine, "mLine.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", (void*)&sobj->mEvent);
      R__insp.InspectMember("auto_ptr<erhic::EventMilou>", (void*)&sobj->mEvent, "mEvent.", true);
      sobj->erhic::VirtualEventFactory::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void EventFromAsciiFactory<erhic::EventMilou>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p) {
      return  p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventMilou> : new ::erhic::EventFromAsciiFactory<erhic::EventMilou>;
   }
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventMilou>[nElements] : new ::erhic::EventFromAsciiFactory<erhic::EventMilou>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p) {
      delete ((::erhic::EventFromAsciiFactory<erhic::EventMilou>*)p);
   }
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p) {
      delete [] ((::erhic::EventFromAsciiFactory<erhic::EventMilou>*)p);
   }
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void *p) {
      typedef ::erhic::EventFromAsciiFactory<erhic::EventMilou> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventFromAsciiFactory<erhic::EventMilou>

      namespace erhic {
//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventRapgap>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventFromAsciiFactory<erhic::EventRapgap>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::EventFromAsciiFactory<erhic::EventRapgap>.
      typedef ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventRapgapgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mInput", &sobj->mInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&sobj->mLine);
      R__insp.InspectMember("string", (void*)&sobj->mLine, "mLine.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", (void*)&sobj->mEvent);
      R__insp.InspectMember("auto_ptr<erhic::EventRapgap>", (void*)&sobj->mEvent, "mEvent.", true);
      sobj->erhic::VirtualEventFactory::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void EventFromAsciiFactory<erhic::EventRapgap>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p) {
      return  p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventRapgap> : new ::erhic::EventFromAsciiFactory<erhic::EventRapgap>;
   }
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventRapgap>[nElements] : new ::erhic::EventFromAsciiFactory<erhic::EventRapgap>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p) {
      delete ((::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)p);
   }
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p) {
      delete [] ((::erhic::EventFromAsciiFactory<erhic::EventRapgap>*)p);
   }
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void *p) {
      typedef ::erhic::EventFromAsciiFactory<erhic::EventRapgap> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventFromAsciiFactory<erhic::EventRapgap>

      namespace erhic {
//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventDjangoh>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventFromAsciiFactory<erhic::EventDjangoh>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::EventFromAsciiFactory<erhic::EventDjangoh>.
      typedef ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventDjangohgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mInput", &sobj->mInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&sobj->mLine);
      R__insp.InspectMember("string", (void*)&sobj->mLine, "mLine.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", (void*)&sobj->mEvent);
      R__insp.InspectMember("auto_ptr<erhic::EventDjangoh>", (void*)&sobj->mEvent, "mEvent.", true);
      sobj->erhic::VirtualEventFactory::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void EventFromAsciiFactory<erhic::EventDjangoh>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p) {
      return  p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventDjangoh> : new ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>;
   }
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>[nElements] : new ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p) {
      delete ((::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)p);
   }
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p) {
      delete [] ((::erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)p);
   }
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void *p) {
      typedef ::erhic::EventFromAsciiFactory<erhic::EventDjangoh> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventFromAsciiFactory<erhic::EventDjangoh>

      namespace erhic {
//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventDpmjet>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventFromAsciiFactory<erhic::EventDpmjet>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::EventFromAsciiFactory<erhic::EventDpmjet>.
      typedef ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventDpmjetgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mInput", &sobj->mInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&sobj->mLine);
      R__insp.InspectMember("string", (void*)&sobj->mLine, "mLine.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", (void*)&sobj->mEvent);
      R__insp.InspectMember("auto_ptr<erhic::EventDpmjet>", (void*)&sobj->mEvent, "mEvent.", true);
      sobj->erhic::VirtualEventFactory::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void EventFromAsciiFactory<erhic::EventDpmjet>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p) {
      return  p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventDpmjet> : new ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>;
   }
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>[nElements] : new ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p) {
      delete ((::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)p);
   }
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p) {
      delete [] ((::erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)p);
   }
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void *p) {
      typedef ::erhic::EventFromAsciiFactory<erhic::EventDpmjet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventFromAsciiFactory<erhic::EventDpmjet>

      namespace erhic {
//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventPythia>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventFromAsciiFactory<erhic::EventPythia>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventFromAsciiFactory<erhic::EventPythia>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventFromAsciiFactory<erhic::EventPythia>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::EventFromAsciiFactory<erhic::EventPythia>.
      typedef ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventPythiagR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mInput", &sobj->mInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&sobj->mLine);
      R__insp.InspectMember("string", (void*)&sobj->mLine, "mLine.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", (void*)&sobj->mEvent);
      R__insp.InspectMember("auto_ptr<erhic::EventPythia>", (void*)&sobj->mEvent, "mEvent.", true);
      sobj->erhic::VirtualEventFactory::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void EventFromAsciiFactory<erhic::EventPythia>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p) {
      return  p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventPythia> : new ::erhic::EventFromAsciiFactory<erhic::EventPythia>;
   }
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventPythia>[nElements] : new ::erhic::EventFromAsciiFactory<erhic::EventPythia>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p) {
      delete ((::erhic::EventFromAsciiFactory<erhic::EventPythia>*)p);
   }
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p) {
      delete [] ((::erhic::EventFromAsciiFactory<erhic::EventPythia>*)p);
   }
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void *p) {
      typedef ::erhic::EventFromAsciiFactory<erhic::EventPythia> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventFromAsciiFactory<erhic::EventPythia>

      namespace erhic {
//______________________________________________________________________________
template <> void EventFromAsciiFactory<erhic::EventGmcTrans>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventFromAsciiFactory<erhic::EventGmcTrans>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::EventFromAsciiFactory<erhic::EventGmcTrans>.
      typedef ::ROOTShadow::Shadow::erhic::EventFromAsciiFactorylEerhiccLcLEventGmcTransgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mInput", &sobj->mInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&sobj->mLine);
      R__insp.InspectMember("string", (void*)&sobj->mLine, "mLine.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", (void*)&sobj->mEvent);
      R__insp.InspectMember("auto_ptr<erhic::EventGmcTrans>", (void*)&sobj->mEvent, "mEvent.", true);
      sobj->erhic::VirtualEventFactory::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void EventFromAsciiFactory<erhic::EventGmcTrans>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p) {
      return  p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans> : new ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>;
   }
   static void *newArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>[nElements] : new ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p) {
      delete ((::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)p);
   }
   static void deleteArray_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p) {
      delete [] ((::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)p);
   }
   static void destruct_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void *p) {
      typedef ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventFromAsciiFactory<erhic::EventGmcTrans>

      namespace erhic {
//______________________________________________________________________________
void EventMCFilterABC::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::EventMCFilterABC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::EventMCFilterABC::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::EventMCFilterABC::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void EventMCFilterABC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::EventMCFilterABC.
      TClass *R__cl = ::erhic::EventMCFilterABC::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLEventMCFilterABC(void *p) {
      delete ((::erhic::EventMCFilterABC*)p);
   }
   static void deleteArray_erhiccLcLEventMCFilterABC(void *p) {
      delete [] ((::erhic::EventMCFilterABC*)p);
   }
   static void destruct_erhiccLcLEventMCFilterABC(void *p) {
      typedef ::erhic::EventMCFilterABC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::EventMCFilterABC

      namespace erhic {
//______________________________________________________________________________
void Forester::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::Forester.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::Forester::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::Forester::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void Forester::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::Forester.
      TClass *R__cl = ::erhic::Forester::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQuit", &mQuit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVerbose", &mVerbose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTree", &mTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEvent", &mEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFile", &mFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mRootFile", &mRootFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxNEvents", &mMaxNEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mInterval", &mInterval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTextFile", &mTextFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mInputName", (void*)&mInputName);
      R__insp.InspectMember("string", (void*)&mInputName, "mInputName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOutputName", (void*)&mOutputName);
      R__insp.InspectMember("string", (void*)&mOutputName, "mOutputName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTreeName", (void*)&mTreeName);
      R__insp.InspectMember("string", (void*)&mTreeName, "mTreeName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBranchName", (void*)&mBranchName);
      R__insp.InspectMember("string", (void*)&mBranchName, "mBranchName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLine", (void*)&mLine);
      R__insp.InspectMember("string", (void*)&mLine, "mLine.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatus", &mStatus);
      R__insp.InspectMember(mStatus, "mStatus.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFactory", &mFactory);
      TObject::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLForester(void *p) {
      return  p ? new(p) ::erhic::Forester : new ::erhic::Forester;
   }
   static void *newArray_erhiccLcLForester(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::Forester[nElements] : new ::erhic::Forester[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLForester(void *p) {
      delete ((::erhic::Forester*)p);
   }
   static void deleteArray_erhiccLcLForester(void *p) {
      delete [] ((::erhic::Forester*)p);
   }
   static void destruct_erhiccLcLForester(void *p) {
      typedef ::erhic::Forester current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::Forester

      namespace erhic {
//______________________________________________________________________________
void Forester::Status::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::Forester::Status.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::Forester::Status::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::Forester::Status::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void Forester::Status::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::Forester::Status.
      TClass *R__cl = ::erhic::Forester::Status::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStartTime", &mStartTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEndTime", &mEndTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNEvents", &mNEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNParticles", &mNParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTimer", &mTimer);
      R__insp.InspectMember(mTimer, "mTimer.");
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLForestercLcLStatus(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::erhic::Forester::Status : new ::erhic::Forester::Status;
   }
   static void *newArray_erhiccLcLForestercLcLStatus(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::erhic::Forester::Status[nElements] : new ::erhic::Forester::Status[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLForestercLcLStatus(void *p) {
      delete ((::erhic::Forester::Status*)p);
   }
   static void deleteArray_erhiccLcLForestercLcLStatus(void *p) {
      delete [] ((::erhic::Forester::Status*)p);
   }
   static void destruct_erhiccLcLForestercLcLStatus(void *p) {
      typedef ::erhic::Forester::Status current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::Forester::Status

      namespace erhic {
//______________________________________________________________________________
void LogReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LogReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::LogReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::LogReader::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LogReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LogReader.
      TClass *R__cl = ::erhic::LogReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLLogReader(void *p) {
      delete ((::erhic::LogReader*)p);
   }
   static void deleteArray_erhiccLcLLogReader(void *p) {
      delete [] ((::erhic::LogReader*)p);
   }
   static void destruct_erhiccLcLLogReader(void *p) {
      typedef ::erhic::LogReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::LogReader

      namespace erhic {
//______________________________________________________________________________
void LogReaderPythia::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LogReaderPythia.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::LogReaderPythia::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::LogReaderPythia::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LogReaderPythia::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LogReaderPythia.
      TClass *R__cl = ::erhic::LogReaderPythia::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossSection_", &crossSection_);
      R__insp.InspectMember(crossSection_, "crossSection_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents_", &nEvents_);
      R__insp.InspectMember(nEvents_, "nEvents_.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::LogReader baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLLogReaderPythia(void *p) {
      return  p ? new(p) ::erhic::LogReaderPythia : new ::erhic::LogReaderPythia;
   }
   static void *newArray_erhiccLcLLogReaderPythia(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::LogReaderPythia[nElements] : new ::erhic::LogReaderPythia[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLLogReaderPythia(void *p) {
      delete ((::erhic::LogReaderPythia*)p);
   }
   static void deleteArray_erhiccLcLLogReaderPythia(void *p) {
      delete [] ((::erhic::LogReaderPythia*)p);
   }
   static void destruct_erhiccLcLLogReaderPythia(void *p) {
      typedef ::erhic::LogReaderPythia current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::LogReaderPythia

      namespace erhic {
//______________________________________________________________________________
void LogReaderPepsi::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LogReaderPepsi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::LogReaderPepsi::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::LogReaderPepsi::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LogReaderPepsi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LogReaderPepsi.
      TClass *R__cl = ::erhic::LogReaderPepsi::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossSection_", &crossSection_);
      R__insp.InspectMember(crossSection_, "crossSection_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents_", &nEvents_);
      R__insp.InspectMember(nEvents_, "nEvents_.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::LogReader baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLLogReaderPepsi(void *p) {
      return  p ? new(p) ::erhic::LogReaderPepsi : new ::erhic::LogReaderPepsi;
   }
   static void *newArray_erhiccLcLLogReaderPepsi(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::LogReaderPepsi[nElements] : new ::erhic::LogReaderPepsi[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLLogReaderPepsi(void *p) {
      delete ((::erhic::LogReaderPepsi*)p);
   }
   static void deleteArray_erhiccLcLLogReaderPepsi(void *p) {
      delete [] ((::erhic::LogReaderPepsi*)p);
   }
   static void destruct_erhiccLcLLogReaderPepsi(void *p) {
      typedef ::erhic::LogReaderPepsi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::LogReaderPepsi

      namespace erhic {
//______________________________________________________________________________
void LogReaderDjangoh::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LogReaderDjangoh.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::LogReaderDjangoh::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::LogReaderDjangoh::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LogReaderDjangoh::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LogReaderDjangoh.
      TClass *R__cl = ::erhic::LogReaderDjangoh::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossSection_", &crossSection_);
      R__insp.InspectMember(crossSection_, "crossSection_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents_", &nEvents_);
      R__insp.InspectMember(nEvents_, "nEvents_.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::LogReader baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLLogReaderDjangoh(void *p) {
      return  p ? new(p) ::erhic::LogReaderDjangoh : new ::erhic::LogReaderDjangoh;
   }
   static void *newArray_erhiccLcLLogReaderDjangoh(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::LogReaderDjangoh[nElements] : new ::erhic::LogReaderDjangoh[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLLogReaderDjangoh(void *p) {
      delete ((::erhic::LogReaderDjangoh*)p);
   }
   static void deleteArray_erhiccLcLLogReaderDjangoh(void *p) {
      delete [] ((::erhic::LogReaderDjangoh*)p);
   }
   static void destruct_erhiccLcLLogReaderDjangoh(void *p) {
      typedef ::erhic::LogReaderDjangoh current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::LogReaderDjangoh

      namespace erhic {
//______________________________________________________________________________
void LogReaderMilou::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LogReaderMilou.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::LogReaderMilou::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::LogReaderMilou::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LogReaderMilou::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LogReaderMilou.
      TClass *R__cl = ::erhic::LogReaderMilou::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossSection_", &crossSection_);
      R__insp.InspectMember(crossSection_, "crossSection_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossSectionError_", &crossSectionError_);
      R__insp.InspectMember(crossSectionError_, "crossSectionError_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents_", &nEvents_);
      R__insp.InspectMember(nEvents_, "nEvents_.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::LogReader baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLLogReaderMilou(void *p) {
      return  p ? new(p) ::erhic::LogReaderMilou : new ::erhic::LogReaderMilou;
   }
   static void *newArray_erhiccLcLLogReaderMilou(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::LogReaderMilou[nElements] : new ::erhic::LogReaderMilou[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLLogReaderMilou(void *p) {
      delete ((::erhic::LogReaderMilou*)p);
   }
   static void deleteArray_erhiccLcLLogReaderMilou(void *p) {
      delete [] ((::erhic::LogReaderMilou*)p);
   }
   static void destruct_erhiccLcLLogReaderMilou(void *p) {
      typedef ::erhic::LogReaderMilou current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::LogReaderMilou

      namespace erhic {
//______________________________________________________________________________
void LogReaderGmcTrans::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LogReaderGmcTrans.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::LogReaderGmcTrans::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::LogReaderGmcTrans::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LogReaderGmcTrans::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LogReaderGmcTrans.
      TClass *R__cl = ::erhic::LogReaderGmcTrans::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNEvents", &mNEvents);
      R__insp.InspectMember(mNEvents, "mNEvents.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCrossSection", &mCrossSection);
      R__insp.InspectMember(mCrossSection, "mCrossSection.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::LogReader baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLLogReaderGmcTrans(void *p) {
      return  p ? new(p) ::erhic::LogReaderGmcTrans : new ::erhic::LogReaderGmcTrans;
   }
   static void *newArray_erhiccLcLLogReaderGmcTrans(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::LogReaderGmcTrans[nElements] : new ::erhic::LogReaderGmcTrans[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLLogReaderGmcTrans(void *p) {
      delete ((::erhic::LogReaderGmcTrans*)p);
   }
   static void deleteArray_erhiccLcLLogReaderGmcTrans(void *p) {
      delete [] ((::erhic::LogReaderGmcTrans*)p);
   }
   static void destruct_erhiccLcLLogReaderGmcTrans(void *p) {
      typedef ::erhic::LogReaderGmcTrans current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::LogReaderGmcTrans

      namespace erhic {
//______________________________________________________________________________
void LogReaderFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LogReaderFactory.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::erhic::LogReaderFactory thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      {
         erhic::LogReaderFactory::Map &R__stl =  prototypes_;
         R__stl.clear();
         TClass *R__tcl2 = TBuffer::GetClass(typeid(erhic::LogReader));
         if (R__tcl2==0) {
            Error("prototypes_ streamer","Missing the TClass object for erhic::LogReader!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            erhic::LogReader* R__t2;
            R__t2 = (erhic::LogReader*)R__b.ReadObjectAny(R__tcl2);
            typedef string Value_t;
            std::pair<Value_t const, erhic::LogReader* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      {
         erhic::LogReaderFactory::Map &R__stl =  prototypes_;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            erhic::LogReaderFactory::Map::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LogReaderFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LogReaderFactory.
      TClass *R__cl = ::erhic::LogReaderFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "prototypes_", (void*)&prototypes_);
      R__insp.InspectMember("erhic::LogReaderFactory::Map", (void*)&prototypes_, "prototypes_.", false);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around a custom streamer member function.
   static void streamer_erhiccLcLLogReaderFactory(TBuffer &buf, void *obj) {
      ((::erhic::LogReaderFactory*)obj)->::erhic::LogReaderFactory::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::erhic::LogReaderFactory

      namespace erhic {
//______________________________________________________________________________
void FileType::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::FileType.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::FileType::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::FileType::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void FileType::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::FileType.
      TClass *R__cl = ::erhic::FileType::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLFileType(void *p) {
      delete ((::erhic::FileType*)p);
   }
   static void deleteArray_erhiccLcLFileType(void *p) {
      delete [] ((::erhic::FileType*)p);
   }
   static void destruct_erhiccLcLFileType(void *p) {
      typedef ::erhic::FileType current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::FileType

      namespace erhic {
//______________________________________________________________________________
template <> void File<erhic::EventPythia>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::File<erhic::EventPythia>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::File<erhic::EventPythia>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::File<erhic::EventPythia>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventPythiagR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::File<erhic::EventPythia>.
      typedef ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventPythiagR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPythia>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_", &sobj->t_);
      sobj->erhic::FileType::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void File<erhic::EventPythia>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLFilelEerhiccLcLEventPythiagR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p) {
      return  p ? new(p) ::erhic::File<erhic::EventPythia> : new ::erhic::File<erhic::EventPythia>;
   }
   static void *newArray_erhiccLcLFilelEerhiccLcLEventPythiagR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::File<erhic::EventPythia>[nElements] : new ::erhic::File<erhic::EventPythia>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p) {
      delete ((::erhic::File<erhic::EventPythia>*)p);
   }
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p) {
      delete [] ((::erhic::File<erhic::EventPythia>*)p);
   }
   static void destruct_erhiccLcLFilelEerhiccLcLEventPythiagR(void *p) {
      typedef ::erhic::File<erhic::EventPythia> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::File<erhic::EventPythia>

      namespace erhic {
//______________________________________________________________________________
template <> void File<erhic::EventMilou>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::File<erhic::EventMilou>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::File<erhic::EventMilou>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::File<erhic::EventMilou>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventMilougR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::File<erhic::EventMilou>.
      typedef ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventMilougR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventMilou>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_", &sobj->t_);
      sobj->erhic::FileType::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void File<erhic::EventMilou>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLFilelEerhiccLcLEventMilougR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLFilelEerhiccLcLEventMilougR(void *p) {
      return  p ? new(p) ::erhic::File<erhic::EventMilou> : new ::erhic::File<erhic::EventMilou>;
   }
   static void *newArray_erhiccLcLFilelEerhiccLcLEventMilougR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::File<erhic::EventMilou>[nElements] : new ::erhic::File<erhic::EventMilou>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLFilelEerhiccLcLEventMilougR(void *p) {
      delete ((::erhic::File<erhic::EventMilou>*)p);
   }
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventMilougR(void *p) {
      delete [] ((::erhic::File<erhic::EventMilou>*)p);
   }
   static void destruct_erhiccLcLFilelEerhiccLcLEventMilougR(void *p) {
      typedef ::erhic::File<erhic::EventMilou> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::File<erhic::EventMilou>

      namespace erhic {
//______________________________________________________________________________
template <> void File<erhic::EventPepsi>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::File<erhic::EventPepsi>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::File<erhic::EventPepsi>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::File<erhic::EventPepsi>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventPepsigR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::File<erhic::EventPepsi>.
      typedef ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventPepsigR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventPepsi>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_", &sobj->t_);
      sobj->erhic::FileType::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void File<erhic::EventPepsi>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLFilelEerhiccLcLEventPepsigR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p) {
      return  p ? new(p) ::erhic::File<erhic::EventPepsi> : new ::erhic::File<erhic::EventPepsi>;
   }
   static void *newArray_erhiccLcLFilelEerhiccLcLEventPepsigR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::File<erhic::EventPepsi>[nElements] : new ::erhic::File<erhic::EventPepsi>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p) {
      delete ((::erhic::File<erhic::EventPepsi>*)p);
   }
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p) {
      delete [] ((::erhic::File<erhic::EventPepsi>*)p);
   }
   static void destruct_erhiccLcLFilelEerhiccLcLEventPepsigR(void *p) {
      typedef ::erhic::File<erhic::EventPepsi> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::File<erhic::EventPepsi>

      namespace erhic {
//______________________________________________________________________________
template <> void File<erhic::EventRapgap>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::File<erhic::EventRapgap>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::File<erhic::EventRapgap>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::File<erhic::EventRapgap>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventRapgapgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::File<erhic::EventRapgap>.
      typedef ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventRapgapgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventRapgap>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_", &sobj->t_);
      sobj->erhic::FileType::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void File<erhic::EventRapgap>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLFilelEerhiccLcLEventRapgapgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p) {
      return  p ? new(p) ::erhic::File<erhic::EventRapgap> : new ::erhic::File<erhic::EventRapgap>;
   }
   static void *newArray_erhiccLcLFilelEerhiccLcLEventRapgapgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::File<erhic::EventRapgap>[nElements] : new ::erhic::File<erhic::EventRapgap>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p) {
      delete ((::erhic::File<erhic::EventRapgap>*)p);
   }
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p) {
      delete [] ((::erhic::File<erhic::EventRapgap>*)p);
   }
   static void destruct_erhiccLcLFilelEerhiccLcLEventRapgapgR(void *p) {
      typedef ::erhic::File<erhic::EventRapgap> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::File<erhic::EventRapgap>

      namespace erhic {
//______________________________________________________________________________
template <> void File<erhic::EventDjangoh>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::File<erhic::EventDjangoh>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::File<erhic::EventDjangoh>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::File<erhic::EventDjangoh>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventDjangohgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::File<erhic::EventDjangoh>.
      typedef ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventDjangohgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDjangoh>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_", &sobj->t_);
      sobj->erhic::FileType::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void File<erhic::EventDjangoh>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLFilelEerhiccLcLEventDjangohgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p) {
      return  p ? new(p) ::erhic::File<erhic::EventDjangoh> : new ::erhic::File<erhic::EventDjangoh>;
   }
   static void *newArray_erhiccLcLFilelEerhiccLcLEventDjangohgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::File<erhic::EventDjangoh>[nElements] : new ::erhic::File<erhic::EventDjangoh>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p) {
      delete ((::erhic::File<erhic::EventDjangoh>*)p);
   }
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p) {
      delete [] ((::erhic::File<erhic::EventDjangoh>*)p);
   }
   static void destruct_erhiccLcLFilelEerhiccLcLEventDjangohgR(void *p) {
      typedef ::erhic::File<erhic::EventDjangoh> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::File<erhic::EventDjangoh>

      namespace erhic {
//______________________________________________________________________________
template <> void File<erhic::EventDpmjet>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::File<erhic::EventDpmjet>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::File<erhic::EventDpmjet>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::File<erhic::EventDpmjet>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventDpmjetgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::File<erhic::EventDpmjet>.
      typedef ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventDpmjetgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventDpmjet>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_", &sobj->t_);
      sobj->erhic::FileType::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void File<erhic::EventDpmjet>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLFilelEerhiccLcLEventDpmjetgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p) {
      return  p ? new(p) ::erhic::File<erhic::EventDpmjet> : new ::erhic::File<erhic::EventDpmjet>;
   }
   static void *newArray_erhiccLcLFilelEerhiccLcLEventDpmjetgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::File<erhic::EventDpmjet>[nElements] : new ::erhic::File<erhic::EventDpmjet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p) {
      delete ((::erhic::File<erhic::EventDpmjet>*)p);
   }
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p) {
      delete [] ((::erhic::File<erhic::EventDpmjet>*)p);
   }
   static void destruct_erhiccLcLFilelEerhiccLcLEventDpmjetgR(void *p) {
      typedef ::erhic::File<erhic::EventDpmjet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::File<erhic::EventDpmjet>

      namespace erhic {
//______________________________________________________________________________
template <> void File<erhic::EventGmcTrans>::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::File<erhic::EventGmcTrans>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::File<erhic::EventGmcTrans>::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::File<erhic::EventGmcTrans>::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
namespace ROOTDict {
   void erhiccLcLFilelEerhiccLcLEventGmcTransgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class erhic::File<erhic::EventGmcTrans>.
      typedef ::ROOTShadow::Shadow::erhic::FilelEerhiccLcLEventGmcTransgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::erhic::File<erhic::EventGmcTrans>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_", &sobj->t_);
      sobj->erhic::FileType::ShowMembers(R__insp);
   }

}

      namespace erhic {
template <> void File<erhic::EventGmcTrans>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::erhiccLcLFilelEerhiccLcLEventGmcTransgR_ShowMembers(this, R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p) {
      return  p ? new(p) ::erhic::File<erhic::EventGmcTrans> : new ::erhic::File<erhic::EventGmcTrans>;
   }
   static void *newArray_erhiccLcLFilelEerhiccLcLEventGmcTransgR(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::File<erhic::EventGmcTrans>[nElements] : new ::erhic::File<erhic::EventGmcTrans>[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p) {
      delete ((::erhic::File<erhic::EventGmcTrans>*)p);
   }
   static void deleteArray_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p) {
      delete [] ((::erhic::File<erhic::EventGmcTrans>*)p);
   }
   static void destruct_erhiccLcLFilelEerhiccLcLEventGmcTransgR(void *p) {
      typedef ::erhic::File<erhic::EventGmcTrans> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::File<erhic::EventGmcTrans>

namespace ROOTDict {
} // end of namespace ROOTDict for class ::erhic::FileFactory

//______________________________________________________________________________
namespace ROOTDict {
   void auto_ptrlEerhiccLcLPidgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class auto_ptr<erhic::Pid>.
      typedef ::ROOTShadow::Shadow::auto_ptrlEerhiccLcLPidgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const auto_ptr<erhic::Pid>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ptr", &sobj->ptr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_auto_ptrlEerhiccLcLPidgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) auto_ptr<erhic::Pid> : new auto_ptr<erhic::Pid>;
   }
   static void *newArray_auto_ptrlEerhiccLcLPidgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) auto_ptr<erhic::Pid>[nElements] : new auto_ptr<erhic::Pid>[nElements];
   }
   // Wrapper around operator delete
   static void delete_auto_ptrlEerhiccLcLPidgR(void *p) {
      delete ((auto_ptr<erhic::Pid>*)p);
   }
   static void deleteArray_auto_ptrlEerhiccLcLPidgR(void *p) {
      delete [] ((auto_ptr<erhic::Pid>*)p);
   }
   static void destruct_auto_ptrlEerhiccLcLPidgR(void *p) {
      typedef auto_ptr<erhic::Pid> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class auto_ptr<erhic::Pid>

      namespace erhic {
//______________________________________________________________________________
void DisKinematics::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::DisKinematics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::DisKinematics::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::DisKinematics::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void DisKinematics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::DisKinematics.
      TClass *R__cl = ::erhic::DisKinematics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX", &mX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQ2", &mQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mW2", &mW2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNu", &mNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mY", &mY);
      TObject::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLDisKinematics(void *p) {
      return  p ? new(p) ::erhic::DisKinematics : new ::erhic::DisKinematics;
   }
   static void *newArray_erhiccLcLDisKinematics(Long_t nElements, void *p) {
      return p ? new(p) ::erhic::DisKinematics[nElements] : new ::erhic::DisKinematics[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLDisKinematics(void *p) {
      delete ((::erhic::DisKinematics*)p);
   }
   static void deleteArray_erhiccLcLDisKinematics(void *p) {
      delete [] ((::erhic::DisKinematics*)p);
   }
   static void destruct_erhiccLcLDisKinematics(void *p) {
      typedef ::erhic::DisKinematics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::DisKinematics

//______________________________________________________________________________
void BeamParticles::Streamer(TBuffer &R__b)
{
   // Stream an object of class BeamParticles.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BeamParticles::Class(),this);
   } else {
      R__b.WriteClassBuffer(BeamParticles::Class(),this);
   }
}

//______________________________________________________________________________
void BeamParticles::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BeamParticles.
      TClass *R__cl = ::BeamParticles::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBeamHadron", &mBeamHadron);
      R__insp.InspectMember(mBeamHadron, "mBeamHadron.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBeamLepton", &mBeamLepton);
      R__insp.InspectMember(mBeamLepton, "mBeamLepton.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mScatteredHadron", &mScatteredHadron);
      R__insp.InspectMember(mScatteredHadron, "mScatteredHadron.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mScatteredLepton", &mScatteredLepton);
      R__insp.InspectMember(mScatteredLepton, "mScatteredLepton.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBoson", &mBoson);
      R__insp.InspectMember(mBoson, "mBoson.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BeamParticles(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BeamParticles : new ::BeamParticles;
   }
   static void *newArray_BeamParticles(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BeamParticles[nElements] : new ::BeamParticles[nElements];
   }
   // Wrapper around operator delete
   static void delete_BeamParticles(void *p) {
      delete ((::BeamParticles*)p);
   }
   static void deleteArray_BeamParticles(void *p) {
      delete [] ((::BeamParticles*)p);
   }
   static void destruct_BeamParticles(void *p) {
      typedef ::BeamParticles current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BeamParticles

//______________________________________________________________________________
void EventToDot::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventToDot.

   ::Error("EventToDot::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void EventToDot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventToDot.
      TClass *R__cl = ::EventToDot::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EventToDot(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventToDot : new ::EventToDot;
   }
   static void *newArray_EventToDot(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventToDot[nElements] : new ::EventToDot[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventToDot(void *p) {
      delete ((::EventToDot*)p);
   }
   static void deleteArray_EventToDot(void *p) {
      delete [] ((::EventToDot*)p);
   }
   static void destruct_EventToDot(void *p) {
      typedef ::EventToDot current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EventToDot(TBuffer &buf, void *obj) {
      ((::EventToDot*)obj)->::EventToDot::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EventToDot

      namespace erhic {
//______________________________________________________________________________
void Pid::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::Pid.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::Pid::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::Pid::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void Pid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::Pid.
      TClass *R__cl = ::erhic::Pid::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCode", &mCode);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLPid(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::erhic::Pid : new ::erhic::Pid;
   }
   static void *newArray_erhiccLcLPid(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::erhic::Pid[nElements] : new ::erhic::Pid[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLPid(void *p) {
      delete ((::erhic::Pid*)p);
   }
   static void deleteArray_erhiccLcLPid(void *p) {
      delete [] ((::erhic::Pid*)p);
   }
   static void destruct_erhiccLcLPid(void *p) {
      typedef ::erhic::Pid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::Pid

      namespace erhic {
//______________________________________________________________________________
void Reader::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::Reader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::Reader::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::Reader::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void Reader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::Reader.
      TClass *R__cl = ::erhic::Reader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEvent", &mEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTree", &mTree);
}

} // namespace erhic
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_erhiccLcLReader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::erhic::Reader : new ::erhic::Reader;
   }
   static void *newArray_erhiccLcLReader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::erhic::Reader[nElements] : new ::erhic::Reader[nElements];
   }
   // Wrapper around operator delete
   static void delete_erhiccLcLReader(void *p) {
      delete ((::erhic::Reader*)p);
   }
   static void deleteArray_erhiccLcLReader(void *p) {
      delete [] ((::erhic::Reader*)p);
   }
   static void destruct_erhiccLcLReader(void *p) {
      typedef ::erhic::Reader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::Reader

      namespace erhic {
//______________________________________________________________________________
void KinematicsComputer::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::KinematicsComputer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::KinematicsComputer::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::KinematicsComputer::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void KinematicsComputer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::KinematicsComputer.
      TClass *R__cl = ::erhic::KinematicsComputer::IsA();
      if (R__cl || R__insp.IsA()) { }
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLKinematicsComputer(void *p) {
      delete ((::erhic::KinematicsComputer*)p);
   }
   static void deleteArray_erhiccLcLKinematicsComputer(void *p) {
      delete [] ((::erhic::KinematicsComputer*)p);
   }
   static void destruct_erhiccLcLKinematicsComputer(void *p) {
      typedef ::erhic::KinematicsComputer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::KinematicsComputer

      namespace erhic {
//______________________________________________________________________________
void LeptonKinematicsComputer::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::LeptonKinematicsComputer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::LeptonKinematicsComputer::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::LeptonKinematicsComputer::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void LeptonKinematicsComputer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::LeptonKinematicsComputer.
      TClass *R__cl = ::erhic::LeptonKinematicsComputer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBeams", (void*)&mBeams);
      R__insp.InspectMember("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >", (void*)&mBeams, "mBeams.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::KinematicsComputer baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLLeptonKinematicsComputer(void *p) {
      delete ((::erhic::LeptonKinematicsComputer*)p);
   }
   static void deleteArray_erhiccLcLLeptonKinematicsComputer(void *p) {
      delete [] ((::erhic::LeptonKinematicsComputer*)p);
   }
   static void destruct_erhiccLcLLeptonKinematicsComputer(void *p) {
      typedef ::erhic::LeptonKinematicsComputer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::LeptonKinematicsComputer

      namespace erhic {
//______________________________________________________________________________
void JacquetBlondelComputer::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::JacquetBlondelComputer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::JacquetBlondelComputer::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::JacquetBlondelComputer::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void JacquetBlondelComputer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::JacquetBlondelComputer.
      TClass *R__cl = ::erhic::JacquetBlondelComputer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticles", (void*)&mParticles);
      R__insp.InspectMember("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >", (void*)&mParticles, "mParticles.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::KinematicsComputer baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLJacquetBlondelComputer(void *p) {
      delete ((::erhic::JacquetBlondelComputer*)p);
   }
   static void deleteArray_erhiccLcLJacquetBlondelComputer(void *p) {
      delete [] ((::erhic::JacquetBlondelComputer*)p);
   }
   static void destruct_erhiccLcLJacquetBlondelComputer(void *p) {
      typedef ::erhic::JacquetBlondelComputer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::JacquetBlondelComputer

      namespace erhic {
//______________________________________________________________________________
void DoubleAngleComputer::Streamer(TBuffer &R__b)
{
   // Stream an object of class erhic::DoubleAngleComputer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(erhic::DoubleAngleComputer::Class(),this);
   } else {
      R__b.WriteClassBuffer(erhic::DoubleAngleComputer::Class(),this);
   }
}

} // namespace erhic
//______________________________________________________________________________
      namespace erhic {
void DoubleAngleComputer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class erhic::DoubleAngleComputer.
      TClass *R__cl = ::erhic::DoubleAngleComputer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHasChanged", &mHasChanged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAngle", &mAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticles", (void*)&mParticles);
      R__insp.InspectMember("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >", (void*)&mParticles, "mParticles.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef erhic::KinematicsComputer baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace erhic
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_erhiccLcLDoubleAngleComputer(void *p) {
      delete ((::erhic::DoubleAngleComputer*)p);
   }
   static void deleteArray_erhiccLcLDoubleAngleComputer(void *p) {
      delete [] ((::erhic::DoubleAngleComputer*)p);
   }
   static void destruct_erhiccLcLDoubleAngleComputer(void *p) {
      typedef ::erhic::DoubleAngleComputer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::erhic::DoubleAngleComputer

//______________________________________________________________________________
namespace ROOTDict {
   void ParticleIdentifier_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ParticleIdentifier.
      typedef ::ROOTShadow::Shadow::ParticleIdentifier ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleIdentifier*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChargedCurrent", &sobj->mChargedCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLeptonBeamPdgCode", &sobj->mLeptonBeamPdgCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mScatteredPdgCode", &sobj->mScatteredPdgCode);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ParticleIdentifier(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParticleIdentifier : new ::ParticleIdentifier;
   }
   static void *newArray_ParticleIdentifier(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParticleIdentifier[nElements] : new ::ParticleIdentifier[nElements];
   }
   // Wrapper around operator delete
   static void delete_ParticleIdentifier(void *p) {
      delete ((::ParticleIdentifier*)p);
   }
   static void deleteArray_ParticleIdentifier(void *p) {
      delete [] ((::ParticleIdentifier*)p);
   }
   static void destruct_ParticleIdentifier(void *p) {
      typedef ::ParticleIdentifier current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ParticleIdentifier

namespace ROOTDict {
   void maplEstringcOerhiccLcLLogReadermUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOerhiccLcLLogReadermUgR_Dictionary();
   static void *new_maplEstringcOerhiccLcLLogReadermUgR(void *p = 0);
   static void *newArray_maplEstringcOerhiccLcLLogReadermUgR(Long_t size, void *p);
   static void delete_maplEstringcOerhiccLcLLogReadermUgR(void *p);
   static void deleteArray_maplEstringcOerhiccLcLLogReadermUgR(void *p);
   static void destruct_maplEstringcOerhiccLcLLogReadermUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,erhic::LogReader*>*)
   {
      map<string,erhic::LogReader*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,erhic::LogReader*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,erhic::LogReader*>", -2, "prec_stl/map", 63,
                  typeid(map<string,erhic::LogReader*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOerhiccLcLLogReadermUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,erhic::LogReader*>) );
      instance.SetNew(&new_maplEstringcOerhiccLcLLogReadermUgR);
      instance.SetNewArray(&newArray_maplEstringcOerhiccLcLLogReadermUgR);
      instance.SetDelete(&delete_maplEstringcOerhiccLcLLogReadermUgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOerhiccLcLLogReadermUgR);
      instance.SetDestructor(&destruct_maplEstringcOerhiccLcLLogReadermUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,erhic::LogReader*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,erhic::LogReader*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOerhiccLcLLogReadermUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,erhic::LogReader*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOerhiccLcLLogReadermUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,erhic::LogReader*> : new map<string,erhic::LogReader*>;
   }
   static void *newArray_maplEstringcOerhiccLcLLogReadermUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,erhic::LogReader*>[nElements] : new map<string,erhic::LogReader*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOerhiccLcLLogReadermUgR(void *p) {
      delete ((map<string,erhic::LogReader*>*)p);
   }
   static void deleteArray_maplEstringcOerhiccLcLLogReadermUgR(void *p) {
      delete [] ((map<string,erhic::LogReader*>*)p);
   }
   static void destruct_maplEstringcOerhiccLcLLogReadermUgR(void *p) {
      typedef map<string,erhic::LogReader*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,erhic::LogReader*>

namespace ROOTDict {
   void vectorlEconstsPerhiccLcLParticleMCmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEconstsPerhiccLcLParticleMCmUgR_Dictionary();
   static void *new_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p = 0);
   static void *newArray_vectorlEconstsPerhiccLcLParticleMCmUgR(Long_t size, void *p);
   static void delete_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p);
   static void deleteArray_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p);
   static void destruct_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<const erhic::ParticleMC*>*)
   {
      vector<const erhic::ParticleMC*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<const erhic::ParticleMC*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<const erhic::ParticleMC*>", -2, "prec_stl/vector", 49,
                  typeid(vector<const erhic::ParticleMC*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEconstsPerhiccLcLParticleMCmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<const erhic::ParticleMC*>) );
      instance.SetNew(&new_vectorlEconstsPerhiccLcLParticleMCmUgR);
      instance.SetNewArray(&newArray_vectorlEconstsPerhiccLcLParticleMCmUgR);
      instance.SetDelete(&delete_vectorlEconstsPerhiccLcLParticleMCmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEconstsPerhiccLcLParticleMCmUgR);
      instance.SetDestructor(&destruct_vectorlEconstsPerhiccLcLParticleMCmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<const erhic::ParticleMC*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<const erhic::ParticleMC*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEconstsPerhiccLcLParticleMCmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<const erhic::ParticleMC*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<const erhic::ParticleMC*> : new vector<const erhic::ParticleMC*>;
   }
   static void *newArray_vectorlEconstsPerhiccLcLParticleMCmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<const erhic::ParticleMC*>[nElements] : new vector<const erhic::ParticleMC*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p) {
      delete ((vector<const erhic::ParticleMC*>*)p);
   }
   static void deleteArray_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p) {
      delete [] ((vector<const erhic::ParticleMC*>*)p);
   }
   static void destruct_vectorlEconstsPerhiccLcLParticleMCmUgR(void *p) {
      typedef vector<const erhic::ParticleMC*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<const erhic::ParticleMC*>

namespace ROOTDict {
   void vectorlEconstsPerhiccLcLVirtualParticlemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEconstsPerhiccLcLVirtualParticlemUgR_Dictionary();
   static void *new_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p = 0);
   static void *newArray_vectorlEconstsPerhiccLcLVirtualParticlemUgR(Long_t size, void *p);
   static void delete_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p);
   static void deleteArray_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p);
   static void destruct_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<const erhic::VirtualParticle*>*)
   {
      vector<const erhic::VirtualParticle*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<const erhic::VirtualParticle*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<const erhic::VirtualParticle*>", -2, "prec_stl/vector", 49,
                  typeid(vector<const erhic::VirtualParticle*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEconstsPerhiccLcLVirtualParticlemUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<const erhic::VirtualParticle*>) );
      instance.SetNew(&new_vectorlEconstsPerhiccLcLVirtualParticlemUgR);
      instance.SetNewArray(&newArray_vectorlEconstsPerhiccLcLVirtualParticlemUgR);
      instance.SetDelete(&delete_vectorlEconstsPerhiccLcLVirtualParticlemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEconstsPerhiccLcLVirtualParticlemUgR);
      instance.SetDestructor(&destruct_vectorlEconstsPerhiccLcLVirtualParticlemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<const erhic::VirtualParticle*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<const erhic::VirtualParticle*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEconstsPerhiccLcLVirtualParticlemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<const erhic::VirtualParticle*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<const erhic::VirtualParticle*> : new vector<const erhic::VirtualParticle*>;
   }
   static void *newArray_vectorlEconstsPerhiccLcLVirtualParticlemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<const erhic::VirtualParticle*>[nElements] : new vector<const erhic::VirtualParticle*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p) {
      delete ((vector<const erhic::VirtualParticle*>*)p);
   }
   static void deleteArray_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p) {
      delete [] ((vector<const erhic::VirtualParticle*>*)p);
   }
   static void destruct_vectorlEconstsPerhiccLcLVirtualParticlemUgR(void *p) {
      typedef vector<const erhic::VirtualParticle*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<const erhic::VirtualParticle*>

namespace ROOTDict {
   void vectorlEerhiccLcLParticleMCmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEerhiccLcLParticleMCmUgR_Dictionary();
   static void *new_vectorlEerhiccLcLParticleMCmUgR(void *p = 0);
   static void *newArray_vectorlEerhiccLcLParticleMCmUgR(Long_t size, void *p);
   static void delete_vectorlEerhiccLcLParticleMCmUgR(void *p);
   static void deleteArray_vectorlEerhiccLcLParticleMCmUgR(void *p);
   static void destruct_vectorlEerhiccLcLParticleMCmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<erhic::ParticleMC*>*)
   {
      vector<erhic::ParticleMC*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<erhic::ParticleMC*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<erhic::ParticleMC*>", -2, "prec_stl/vector", 49,
                  typeid(vector<erhic::ParticleMC*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEerhiccLcLParticleMCmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<erhic::ParticleMC*>) );
      instance.SetNew(&new_vectorlEerhiccLcLParticleMCmUgR);
      instance.SetNewArray(&newArray_vectorlEerhiccLcLParticleMCmUgR);
      instance.SetDelete(&delete_vectorlEerhiccLcLParticleMCmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEerhiccLcLParticleMCmUgR);
      instance.SetDestructor(&destruct_vectorlEerhiccLcLParticleMCmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<erhic::ParticleMC*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<erhic::ParticleMC*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEerhiccLcLParticleMCmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<erhic::ParticleMC*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEerhiccLcLParticleMCmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<erhic::ParticleMC*> : new vector<erhic::ParticleMC*>;
   }
   static void *newArray_vectorlEerhiccLcLParticleMCmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<erhic::ParticleMC*>[nElements] : new vector<erhic::ParticleMC*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEerhiccLcLParticleMCmUgR(void *p) {
      delete ((vector<erhic::ParticleMC*>*)p);
   }
   static void deleteArray_vectorlEerhiccLcLParticleMCmUgR(void *p) {
      delete [] ((vector<erhic::ParticleMC*>*)p);
   }
   static void destruct_vectorlEerhiccLcLParticleMCmUgR(void *p) {
      typedef vector<erhic::ParticleMC*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<erhic::ParticleMC*>

namespace ROOTDict {
   void vectorlEerhiccLcLParticleMCgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEerhiccLcLParticleMCgR_Dictionary();
   static void *new_vectorlEerhiccLcLParticleMCgR(void *p = 0);
   static void *newArray_vectorlEerhiccLcLParticleMCgR(Long_t size, void *p);
   static void delete_vectorlEerhiccLcLParticleMCgR(void *p);
   static void deleteArray_vectorlEerhiccLcLParticleMCgR(void *p);
   static void destruct_vectorlEerhiccLcLParticleMCgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<erhic::ParticleMC>*)
   {
      vector<erhic::ParticleMC> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<erhic::ParticleMC>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<erhic::ParticleMC>", -2, "prec_stl/vector", 49,
                  typeid(vector<erhic::ParticleMC>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEerhiccLcLParticleMCgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<erhic::ParticleMC>) );
      instance.SetNew(&new_vectorlEerhiccLcLParticleMCgR);
      instance.SetNewArray(&newArray_vectorlEerhiccLcLParticleMCgR);
      instance.SetDelete(&delete_vectorlEerhiccLcLParticleMCgR);
      instance.SetDeleteArray(&deleteArray_vectorlEerhiccLcLParticleMCgR);
      instance.SetDestructor(&destruct_vectorlEerhiccLcLParticleMCgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<erhic::ParticleMC> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<erhic::ParticleMC>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEerhiccLcLParticleMCgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<erhic::ParticleMC>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEerhiccLcLParticleMCgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<erhic::ParticleMC> : new vector<erhic::ParticleMC>;
   }
   static void *newArray_vectorlEerhiccLcLParticleMCgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<erhic::ParticleMC>[nElements] : new vector<erhic::ParticleMC>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEerhiccLcLParticleMCgR(void *p) {
      delete ((vector<erhic::ParticleMC>*)p);
   }
   static void deleteArray_vectorlEerhiccLcLParticleMCgR(void *p) {
      delete [] ((vector<erhic::ParticleMC>*)p);
   }
   static void destruct_vectorlEerhiccLcLParticleMCgR(void *p) {
      typedef vector<erhic::ParticleMC> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<erhic::ParticleMC>

/********************************************************
* /phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/build/erhicDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableerhicDict();

extern "C" void G__set_cpp_environmenterhicDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/functions.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/BeamParticles.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/DisKinematics.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventBase.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventDis.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventDjangoh.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventDpmjet.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventFactory.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventGmcTrans.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventMC.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventMCFilterABC.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventMilou.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventPepsi.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventPythia.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/EventRapgap.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/File.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Forester.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Kinematics.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Particle.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/ParticleIdentifier.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/ParticleMC.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/Pid.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/VirtualEvent.h");
  G__add_compiledheader("/phenix/u/spjeffas/LQGENEP/eic-smear-1.0.3/include/eicsmear/erhic/VirtualParticle.h");
  G__cpp_reset_tagtableerhicDict();
}
#include <new>
extern "C" int G__cpp_dllreverhicDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* erhic */

/* erhic::Pid */
static int G__erhicDict_356_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Pid::InvalidCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::Pid* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::Pid((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) erhic::Pid((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::Pid[n];
       } else {
         p = new((void*) gvp) erhic::Pid[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::Pid;
       } else {
         p = new((void*) gvp) erhic::Pid;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const erhic::Pid*) G__getstructoffset())->Code());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Pid*) G__getstructoffset())->Set((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::Pid*) G__getstructoffset())->Info());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const erhic::Pid*) G__getstructoffset())->operator Int_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::Pid*) G__getstructoffset())->operator==((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::Pid*) G__getstructoffset())->operator<((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::Pid*) G__getstructoffset())->operator>((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::Pid*) G__getstructoffset())->operator!=((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::Pid*) G__getstructoffset())->operator<=((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::Pid*) G__getstructoffset())->operator>=((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::Pid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Pid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::Pid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::Pid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::Pid*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Pid*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Pid*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Pid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Pid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Pid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Pid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_356_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Pid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_356_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::Pid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::Pid(*(erhic::Pid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::Pid G__TerhiccLcLPid;
static int G__erhicDict_356_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::Pid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::Pid*) (soff+(sizeof(erhic::Pid)*i)))->~G__TerhiccLcLPid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::Pid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::Pid*) (soff))->~G__TerhiccLcLPid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_356_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::Pid* dest = (erhic::Pid*) G__getstructoffset();
   *dest = *(erhic::Pid*) libp->para[0].ref;
   const erhic::Pid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::VirtualParticle */
static int G__erhicDict_357_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::Pid* pobj;
         const erhic::Pid xobj = ((const erhic::VirtualParticle*) G__getstructoffset())->Id();
         pobj = new erhic::Pid(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const erhic::VirtualParticle*) G__getstructoffset())->Get4Vector();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::VirtualParticle*) G__getstructoffset())->GetEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const erhic::VirtualParticle*) G__getstructoffset())->GetVertex();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const erhic::VirtualParticle*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const erhic::VirtualParticle*) G__getstructoffset())->GetParentIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::VirtualParticle*) G__getstructoffset())->SetVertex(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::VirtualParticle*) G__getstructoffset())->Set4Vector(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::VirtualParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::VirtualParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::VirtualParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::VirtualParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::VirtualParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_357_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::VirtualParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::VirtualParticle G__TerhiccLcLVirtualParticle;
static int G__erhicDict_357_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::VirtualParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::VirtualParticle*) (soff+(sizeof(erhic::VirtualParticle)*i)))->~G__TerhiccLcLVirtualParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::VirtualParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::VirtualParticle*) (soff))->~G__TerhiccLcLVirtualParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_357_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::VirtualParticle* dest = (erhic::VirtualParticle*) G__getstructoffset();
   *dest = *(erhic::VirtualParticle*) libp->para[0].ref;
   const erhic::VirtualParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventMC */
static int G__erhicDict_358_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const erhic::EventMC*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const erhic::EventMC*) G__getstructoffset())->GetProcess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((erhic::EventMC*) G__getstructoffset())->Parse(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->AddLast((erhic::ParticleMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->SetProcess((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->SetN((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->SetNTracks((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->SetELeptonInNuclearFrame((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->SetEScatteredInNuclearFrame((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const erhic::EventMC*) G__getstructoffset())->FinalState(*(erhic::VirtualEvent::ParticlePtrList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const erhic::EventMC*) G__getstructoffset())->FinalStateMomentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const erhic::EventMC*) G__getstructoffset())->HadronicFinalStateMomentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventMC*) G__getstructoffset())->FinalStateCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >* pobj;
         const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> > xobj = ((const erhic::EventMC*) G__getstructoffset())->GetTracks();
         pobj = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_358_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventMC G__TerhiccLcLEventMC;
static int G__erhicDict_358_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventMC*) (soff+(sizeof(erhic::EventMC)*i)))->~G__TerhiccLcLEventMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventMC*) (soff))->~G__TerhiccLcLEventMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::ParticleMC */
static int G__erhicDict_359_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::ParticleMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::ParticleMC(*(string*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) erhic::ParticleMC(*(string*) libp->para[0].ref);
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::ParticleMC[n];
       } else {
         p = new((void*) gvp) erhic::ParticleMC[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::ParticleMC;
       } else {
         p = new((void*) gvp) erhic::ParticleMC;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const erhic::ParticleMC*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::ParticleMC*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const erhic::ParticleMC*) G__getstructoffset())->GetChild1Index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const erhic::ParticleMC*) G__getstructoffset())->GetChildNIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const erhic::ParticleMC*) G__getstructoffset())->GetNChildren());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::ParticleMC*) G__getstructoffset())->GetChild((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::ParticleMC*) G__getstructoffset())->HasChild((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::Pid* pobj;
         const erhic::Pid xobj = ((const erhic::ParticleMC*) G__getstructoffset())->GetParentId();
         pobj = new erhic::Pid(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::ParticleMC*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::ParticleMC*) G__getstructoffset())->GetXFeynman());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::ParticleMC*) G__getstructoffset())->GetThetaVsGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::ParticleMC*) G__getstructoffset())->GetPtVsGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::ParticleMC*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetEvent((erhic::EventMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const erhic::ParticleMC*) G__getstructoffset())->PxPyPzE();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const erhic::ParticleMC*) G__getstructoffset())->Get4VectorInHadronBosonFrame();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetE((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetM((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetP((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetPt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetPz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetStatus((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::Pid* pobj;
         const erhic::Pid xobj = ((const erhic::ParticleMC*) G__getstructoffset())->GetPdgCode();
         pobj = new erhic::Pid(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->ComputeDerivedQuantities();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->ComputeEventDependentQuantities(*(erhic::EventMC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetIndex((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetStatus((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetParentIndex((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetChild1Index((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetChildNIndex((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->SetParentId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::ParticleMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::ParticleMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::ParticleMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::ParticleMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::ParticleMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::ParticleMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::ParticleMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::ParticleMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_359_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::ParticleMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_359_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::ParticleMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::ParticleMC(*(erhic::ParticleMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::ParticleMC G__TerhiccLcLParticleMC;
static int G__erhicDict_359_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::ParticleMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::ParticleMC*) (soff+(sizeof(erhic::ParticleMC)*i)))->~G__TerhiccLcLParticleMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::ParticleMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::ParticleMC*) (soff))->~G__TerhiccLcLParticleMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_359_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::ParticleMC* dest = (erhic::ParticleMC*) G__getstructoffset();
   *dest = *(erhic::ParticleMC*) libp->para[0].ref;
   const erhic::ParticleMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BeamParticles */
static int G__erhicDict_360_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BeamParticles* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BeamParticles[n];
     } else {
       p = new((void*) gvp) BeamParticles[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BeamParticles;
     } else {
       p = new((void*) gvp) BeamParticles;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_BeamParticles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BeamParticles* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BeamParticles(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) BeamParticles(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_BeamParticles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->SetBeamHadron(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->SetBeamLepton(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->SetScatteredHadron(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->SetScatteredLepton(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->SetBoson(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((const BeamParticles*) G__getstructoffset())->BeamHadron();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((const BeamParticles*) G__getstructoffset())->BeamLepton();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((const BeamParticles*) G__getstructoffset())->GetScatteredHadron();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((const BeamParticles*) G__getstructoffset())->ScatteredLepton();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((const BeamParticles*) G__getstructoffset())->GetBoson();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BeamParticles::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BeamParticles::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BeamParticles::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BeamParticles::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BeamParticles*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamParticles*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BeamParticles::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BeamParticles::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BeamParticles::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_360_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BeamParticles::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_360_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BeamParticles* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BeamParticles(*(BeamParticles*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_BeamParticles));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BeamParticles G__TBeamParticles;
static int G__erhicDict_360_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BeamParticles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BeamParticles*) (soff+(sizeof(BeamParticles)*i)))->~G__TBeamParticles();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BeamParticles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BeamParticles*) (soff))->~G__TBeamParticles();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_360_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BeamParticles* dest = (BeamParticles*) G__getstructoffset();
   *dest = *(BeamParticles*) libp->para[0].ref;
   const BeamParticles& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::VirtualEvent */
static int G__erhicDict_361_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::VirtualEvent*) G__getstructoffset())->GetTrack((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::VirtualEvent*) G__getstructoffset())->GetTrack((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const erhic::VirtualEvent*) G__getstructoffset())->GetNTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const erhic::VirtualEvent*) G__getstructoffset())->HadronicFinalState(*(erhic::VirtualEvent::ParticlePtrList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::VirtualEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::VirtualEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::VirtualEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::VirtualEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::VirtualEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_361_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::VirtualEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::VirtualEvent G__TerhiccLcLVirtualEvent;
static int G__erhicDict_361_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::VirtualEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::VirtualEvent*) (soff+(sizeof(erhic::VirtualEvent)*i)))->~G__TerhiccLcLVirtualEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::VirtualEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::VirtualEvent*) (soff))->~G__TerhiccLcLVirtualEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_361_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::VirtualEvent* dest = (erhic::VirtualEvent*) G__getstructoffset();
   *dest = *(erhic::VirtualEvent*) libp->para[0].ref;
   const erhic::VirtualEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> > */
static int G__erhicDict_363_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reference obj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->at((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_reference obj = ((const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->at((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator* pobj;
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator xobj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->begin();
         pobj = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator* pobj;
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator xobj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->end();
         pobj = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator* pobj;
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator xobj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator* pobj;
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator xobj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->rend();
         pobj = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->resize((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->resize((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]), (erhic::VirtualParticle*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reference obj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->operator[]((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_reference obj = ((const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->operator[]((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >[n];
     } else {
       p = new((void*) gvp) vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >;
     } else {
       p = new((void*) gvp) vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(const erhic::VirtualParticle**) libp->para[1].ref : *(const erhic::VirtualParticle**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(const erhic::VirtualParticle**) libp->para[1].ref : *(const erhic::VirtualParticle**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >(*(vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >(*(vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >(*((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator*) G__int(libp->para[0])), *((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >(*((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator*) G__int(libp->para[0])), *((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >& obj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->operator=(*(vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->reserve((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::VirtualParticle*& obj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::VirtualParticle*& obj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(const erhic::VirtualParticle**) libp->para[0].ref : *(const erhic::VirtualParticle**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->swap(*(vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator* pobj;
         vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator xobj = ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->insert(*((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(const erhic::VirtualParticle**) libp->para[1].ref : *(const erhic::VirtualParticle**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->insert(*((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator*) G__int(libp->para[0])), *((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->insert(*((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator*) G__int(libp->para[0])), (vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(const erhic::VirtualParticle**) libp->para[2].ref : *(const erhic::VirtualParticle**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->erase(*((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->erase(*((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator*) G__int(libp->para[0])), *((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_363_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> > G__TvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR;
static int G__erhicDict_363_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) (soff+(sizeof(vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >)*i)))->~G__TvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*) (soff))->~G__TvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleIdentifier */
static int G__erhicDict_366_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleIdentifier* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleIdentifier((const int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ParticleIdentifier((const int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ParticleIdentifier[n];
       } else {
         p = new((void*) gvp) ParticleIdentifier[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ParticleIdentifier;
       } else {
         p = new((void*) gvp) ParticleIdentifier;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_ParticleIdentifier));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ParticleIdentifier*) G__getstructoffset())->isBeamLepton(*(erhic::VirtualParticle*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ParticleIdentifier*) G__getstructoffset())->isBeamNucleon(*(erhic::VirtualParticle*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ParticleIdentifier*) G__getstructoffset())->isScatteredLepton(*(erhic::VirtualParticle*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ParticleIdentifier*) G__getstructoffset())->IsVirtualPhoton(*(erhic::VirtualParticle*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ParticleIdentifier*) G__getstructoffset())->SkipParticle(*(erhic::VirtualParticle*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleIdentifier*) G__getstructoffset())->SetLeptonBeamPdgCode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ParticleIdentifier*) G__getstructoffset())->GetLeptonBeamPdgCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ParticleIdentifier*) G__getstructoffset())->SetChargedCurrent((bool) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ParticleIdentifier::IdentifyBeams(*(erhic::VirtualEvent*) libp->para[0].ref, *(BeamParticles*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_366_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ParticleIdentifier::IdentifyBeams(*(erhic::VirtualEvent*) libp->para[0].ref, *(vector<const erhic::VirtualParticle*>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_366_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ParticleIdentifier* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ParticleIdentifier(*(ParticleIdentifier*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_ParticleIdentifier));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ParticleIdentifier G__TParticleIdentifier;
static int G__erhicDict_366_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ParticleIdentifier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ParticleIdentifier*) (soff+(sizeof(ParticleIdentifier)*i)))->~G__TParticleIdentifier();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ParticleIdentifier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ParticleIdentifier*) (soff))->~G__TParticleIdentifier();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_366_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleIdentifier* dest = (ParticleIdentifier*) G__getstructoffset();
   *dest = *(ParticleIdentifier*) libp->para[0].ref;
   const ParticleIdentifier& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventDis */
static int G__erhicDict_367_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::EventDis& obj = ((erhic::EventDis*) G__getstructoffset())->operator=(*(erhic::EventDis*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetQ2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetYPlus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetW2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetNu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetXDoubleAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetQ2DoubleAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetYDoubleAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetW2DoubleAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetXJacquetBlondel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetQ2JacquetBlondel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetYJacquetBlondel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventDis*) G__getstructoffset())->GetW2JacquetBlondel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventDis*) G__getstructoffset())->SetLeptonKinematics(*(erhic::DisKinematics*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventDis*) G__getstructoffset())->SetJacquetBlondelKinematics(*(erhic::DisKinematics*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventDis*) G__getstructoffset())->SetDoubleAngleKinematics(*(erhic::DisKinematics*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::EventDis*) G__getstructoffset())->BeamLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::EventDis*) G__getstructoffset())->BeamHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::EventDis*) G__getstructoffset())->ExchangeBoson());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::EventDis*) G__getstructoffset())->ScatteredLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventDis*) G__getstructoffset())->CopyKinematics(*(erhic::EventDis*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventDis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventDis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventDis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventDis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventDis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_367_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventDis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventDis G__TerhiccLcLEventDis;
static int G__erhicDict_367_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventDis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventDis*) (soff+(sizeof(erhic::EventDis)*i)))->~G__TerhiccLcLEventDis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventDis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventDis*) (soff))->~G__TerhiccLcLEventDis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::DisKinematics */
static int G__erhicDict_368_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::DisKinematics* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::DisKinematics[n];
     } else {
       p = new((void*) gvp) erhic::DisKinematics[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::DisKinematics;
     } else {
       p = new((void*) gvp) erhic::DisKinematics;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::DisKinematics* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::DisKinematics(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) erhic::DisKinematics(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::DisKinematics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::DisKinematics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::DisKinematics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::DisKinematics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::DisKinematics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::DisKinematics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::DisKinematics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::DisKinematics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_368_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::DisKinematics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_368_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::DisKinematics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::DisKinematics(*(erhic::DisKinematics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::DisKinematics G__TerhiccLcLDisKinematics;
static int G__erhicDict_368_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::DisKinematics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::DisKinematics*) (soff+(sizeof(erhic::DisKinematics)*i)))->~G__TerhiccLcLDisKinematics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::DisKinematics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::DisKinematics*) (soff))->~G__TerhiccLcLDisKinematics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_368_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::DisKinematics* dest = (erhic::DisKinematics*) G__getstructoffset();
   *dest = *(erhic::DisKinematics*) libp->para[0].ref;
   const erhic::DisKinematics& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::KinematicsComputer */
static int G__erhicDict_369_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::KinematicsComputer*) G__getstructoffset())->Calculate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::KinematicsComputer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::KinematicsComputer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::KinematicsComputer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::KinematicsComputer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::KinematicsComputer*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::KinematicsComputer*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::KinematicsComputer*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::KinematicsComputer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::KinematicsComputer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::KinematicsComputer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::KinematicsComputer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_369_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::KinematicsComputer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::KinematicsComputer G__TerhiccLcLKinematicsComputer;
static int G__erhicDict_369_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::KinematicsComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::KinematicsComputer*) (soff+(sizeof(erhic::KinematicsComputer)*i)))->~G__TerhiccLcLKinematicsComputer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::KinematicsComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::KinematicsComputer*) (soff))->~G__TerhiccLcLKinematicsComputer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_369_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::KinematicsComputer* dest = (erhic::KinematicsComputer*) G__getstructoffset();
   *dest = *(erhic::KinematicsComputer*) libp->para[0].ref;
   const erhic::KinematicsComputer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LeptonKinematicsComputer */
static int G__erhicDict_370_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LeptonKinematicsComputer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::LeptonKinematicsComputer(*(erhic::EventDis*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::LeptonKinematicsComputer(*(erhic::EventDis*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LeptonKinematicsComputer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LeptonKinematicsComputer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LeptonKinematicsComputer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LeptonKinematicsComputer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LeptonKinematicsComputer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LeptonKinematicsComputer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LeptonKinematicsComputer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LeptonKinematicsComputer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_370_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LeptonKinematicsComputer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_370_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::LeptonKinematicsComputer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::LeptonKinematicsComputer(*(erhic::LeptonKinematicsComputer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::LeptonKinematicsComputer G__TerhiccLcLLeptonKinematicsComputer;
static int G__erhicDict_370_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::LeptonKinematicsComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::LeptonKinematicsComputer*) (soff+(sizeof(erhic::LeptonKinematicsComputer)*i)))->~G__TerhiccLcLLeptonKinematicsComputer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::LeptonKinematicsComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::LeptonKinematicsComputer*) (soff))->~G__TerhiccLcLLeptonKinematicsComputer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_370_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LeptonKinematicsComputer* dest = (erhic::LeptonKinematicsComputer*) G__getstructoffset();
   *dest = *(erhic::LeptonKinematicsComputer*) libp->para[0].ref;
   const erhic::LeptonKinematicsComputer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::JacquetBlondelComputer */
static int G__erhicDict_371_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::JacquetBlondelComputer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::JacquetBlondelComputer(*(erhic::EventDis*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::JacquetBlondelComputer(*(erhic::EventDis*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::JacquetBlondelComputer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::JacquetBlondelComputer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::JacquetBlondelComputer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::JacquetBlondelComputer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::JacquetBlondelComputer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::JacquetBlondelComputer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::JacquetBlondelComputer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::JacquetBlondelComputer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_371_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::JacquetBlondelComputer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_371_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::JacquetBlondelComputer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::JacquetBlondelComputer(*(erhic::JacquetBlondelComputer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::JacquetBlondelComputer G__TerhiccLcLJacquetBlondelComputer;
static int G__erhicDict_371_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::JacquetBlondelComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::JacquetBlondelComputer*) (soff+(sizeof(erhic::JacquetBlondelComputer)*i)))->~G__TerhiccLcLJacquetBlondelComputer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::JacquetBlondelComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::JacquetBlondelComputer*) (soff))->~G__TerhiccLcLJacquetBlondelComputer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::DoubleAngleComputer */
static int G__erhicDict_372_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::DoubleAngleComputer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::DoubleAngleComputer(*(erhic::EventDis*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::DoubleAngleComputer(*(erhic::EventDis*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::DoubleAngleComputer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::DoubleAngleComputer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::DoubleAngleComputer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::DoubleAngleComputer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::DoubleAngleComputer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::DoubleAngleComputer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::DoubleAngleComputer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::DoubleAngleComputer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_372_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::DoubleAngleComputer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_372_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::DoubleAngleComputer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::DoubleAngleComputer(*(erhic::DoubleAngleComputer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::DoubleAngleComputer G__TerhiccLcLDoubleAngleComputer;
static int G__erhicDict_372_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::DoubleAngleComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::DoubleAngleComputer*) (soff+(sizeof(erhic::DoubleAngleComputer)*i)))->~G__TerhiccLcLDoubleAngleComputer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::DoubleAngleComputer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::DoubleAngleComputer*) (soff))->~G__TerhiccLcLDoubleAngleComputer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::VirtualEventFactory */
static int G__erhicDict_388_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::VirtualEventFactory*) G__getstructoffset())->Create());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::VirtualEventFactory*) G__getstructoffset())->GetEvBufferPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const erhic::VirtualEventFactory*) G__getstructoffset())->EventName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::VirtualEventFactory*) G__getstructoffset())->Branch(*(TTree*) libp->para[0].ref, *(string*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::VirtualEventFactory*) G__getstructoffset())->Fill(*(TBranch*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::VirtualEventFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualEventFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::VirtualEventFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::VirtualEventFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::VirtualEventFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualEventFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::VirtualEventFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::VirtualEventFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_388_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::VirtualEventFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::VirtualEventFactory G__TerhiccLcLVirtualEventFactory;
static int G__erhicDict_388_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::VirtualEventFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::VirtualEventFactory*) (soff+(sizeof(erhic::VirtualEventFactory)*i)))->~G__TerhiccLcLVirtualEventFactory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::VirtualEventFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::VirtualEventFactory*) (soff))->~G__TerhiccLcLVirtualEventFactory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_388_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::VirtualEventFactory* dest = (erhic::VirtualEventFactory*) G__getstructoffset();
   *dest = *(erhic::VirtualEventFactory*) libp->para[0].ref;
   const erhic::VirtualEventFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventToDot */
static int G__erhicDict_389_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const EventToDot*) G__getstructoffset())->Generate(*(erhic::EventMC*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventToDot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventToDot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventToDot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventToDot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventToDot*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventToDot*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventToDot*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventToDot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventToDot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventToDot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventToDot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_389_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventToDot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__erhicDict_389_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventToDot *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventToDot[n];
     } else {
       p = new((void*) gvp) EventToDot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventToDot;
     } else {
       p = new((void*) gvp) EventToDot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_EventToDot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_389_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventToDot* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventToDot(*(EventToDot*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_EventToDot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventToDot G__TEventToDot;
static int G__erhicDict_389_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventToDot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventToDot*) (soff+(sizeof(EventToDot)*i)))->~G__TEventToDot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventToDot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventToDot*) (soff))->~G__TEventToDot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_389_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventToDot* dest = (EventToDot*) G__getstructoffset();
   *dest = *(EventToDot*) libp->para[0].ref;
   const EventToDot& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::Reader */
static int G__erhicDict_392_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::Reader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::Reader(*(string*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) erhic::Reader(*(string*) libp->para[0].ref);
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::Reader[n];
       } else {
         p = new((void*) gvp) erhic::Reader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::Reader;
       } else {
         p = new((void*) gvp) erhic::Reader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::Reader*) G__getstructoffset())->Read((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::Reader*) G__getstructoffset())->operator()((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((erhic::Reader*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::Reader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Reader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::Reader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::Reader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::Reader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Reader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Reader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Reader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Reader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Reader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Reader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_392_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Reader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_392_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::Reader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::Reader(*(erhic::Reader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::Reader G__TerhiccLcLReader;
static int G__erhicDict_392_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::Reader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::Reader*) (soff+(sizeof(erhic::Reader)*i)))->~G__TerhiccLcLReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::Reader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::Reader*) (soff))->~G__TerhiccLcLReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_392_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::Reader* dest = (erhic::Reader*) G__getstructoffset();
   *dest = *(erhic::Reader*) libp->para[0].ref;
   const erhic::Reader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventDjangoh */
static int G__erhicDict_393_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventDjangoh* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventDjangoh[n];
     } else {
       p = new((void*) gvp) erhic::EventDjangoh[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventDjangoh;
     } else {
       p = new((void*) gvp) erhic::EventDjangoh;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventDjangoh::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDjangoh::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventDjangoh::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventDjangoh::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventDjangoh*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDjangoh::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventDjangoh::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDjangoh::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_393_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventDjangoh::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventDjangoh G__TerhiccLcLEventDjangoh;
static int G__erhicDict_393_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventDjangoh*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventDjangoh*) (soff+(sizeof(erhic::EventDjangoh)*i)))->~G__TerhiccLcLEventDjangoh();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventDjangoh*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventDjangoh*) (soff))->~G__TerhiccLcLEventDjangoh();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventDpmjet */
static int G__erhicDict_394_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventDpmjet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDpmjet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventDpmjet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventDpmjet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventDpmjet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDpmjet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventDpmjet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventDpmjet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_394_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventDpmjet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventDpmjet G__TerhiccLcLEventDpmjet;
static int G__erhicDict_394_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventDpmjet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventDpmjet*) (soff+(sizeof(erhic::EventDpmjet)*i)))->~G__TerhiccLcLEventDpmjet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventDpmjet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventDpmjet*) (soff))->~G__TerhiccLcLEventDpmjet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventPythia */
static int G__erhicDict_687_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventPythia* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventPythia(*(string*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) erhic::EventPythia(*(string*) libp->para[0].ref);
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::EventPythia[n];
       } else {
         p = new((void*) gvp) erhic::EventPythia[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::EventPythia;
       } else {
         p = new((void*) gvp) erhic::EventPythia;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetNucleon((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetTargetParton((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetBeamParton((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetGenEvent((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetTargetPartonX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetBeamPartonX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetBeamPartonTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetLeptonPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetF1((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetF2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetSigmaRad((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetHardS((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetHardT((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetHardU((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetHardQ2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetHardPt2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetSigRadCor((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetEBrems((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetPhotonFlux((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetTrueY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetTrueQ2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetTrueX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetTrueW2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetTrueNu((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->SetR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const erhic::EventPythia*) G__getstructoffset())->GetGenEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetTargetPartonX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetBeamPartonX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetBeamPartonTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetLeptonPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetF1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetF2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetSigmaRad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetHardS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetHardT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetHardU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetHardQ2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetHardPt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetSigRadCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetEBrems());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetPhotonFlux());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetTrueY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetTrueQ2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetTrueX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetTrueW2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetTrueNu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventPythia*) G__getstructoffset())->GetR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventPythia::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventPythia::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventPythia::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventPythia::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPythia*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventPythia::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventPythia::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventPythia::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_687_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventPythia::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventPythia G__TerhiccLcLEventPythia;
static int G__erhicDict_687_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventPythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventPythia*) (soff+(sizeof(erhic::EventPythia)*i)))->~G__TerhiccLcLEventPythia();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventPythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventPythia*) (soff))->~G__TerhiccLcLEventPythia();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventGmcTrans */
static int G__erhicDict_692_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventGmcTrans* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventGmcTrans(*(string*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) erhic::EventGmcTrans(*(string*) libp->para[0].ref);
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::EventGmcTrans[n];
       } else {
         p = new((void*) gvp) erhic::EventGmcTrans[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new erhic::EventGmcTrans;
       } else {
         p = new((void*) gvp) erhic::EventGmcTrans;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetPhiSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetPhiHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetHadronZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetHadronPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetF1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetG1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetH1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetD1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetF1TPerp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetF1TPerp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetH1Perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetH1Perp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetH1Perp12());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetSivers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetSiversWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetSiversStruckQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetSiversStruckQuarkWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetSiversPiDifference());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetSiversPiDifferenceWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCollins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCollinsWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCollinsStruckQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCollinsStructQuarkWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCollinsTwist3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCollinsTwist3Weight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCrossSectionUnpolarised());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCrossSectionSivers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetCrossSectionCollins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const erhic::EventGmcTrans*) G__getstructoffset())->GetHadronPolarisation();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventGmcTrans*) G__getstructoffset())->GetHermesPhiS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventGmcTrans::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventGmcTrans::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventGmcTrans::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventGmcTrans::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventGmcTrans*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventGmcTrans::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventGmcTrans::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventGmcTrans::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_692_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventGmcTrans::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventGmcTrans G__TerhiccLcLEventGmcTrans;
static int G__erhicDict_692_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventGmcTrans*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventGmcTrans*) (soff+(sizeof(erhic::EventGmcTrans)*i)))->~G__TerhiccLcLEventGmcTrans();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventGmcTrans*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventGmcTrans*) (soff))->~G__TerhiccLcLEventGmcTrans();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventMCFilterABC */
static int G__erhicDict_693_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::EventMCFilterABC*) G__getstructoffset())->Accept(*(erhic::VirtualEvent*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventMCFilterABC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMCFilterABC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventMCFilterABC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventMCFilterABC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::EventMCFilterABC*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMCFilterABC*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMCFilterABC*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMCFilterABC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMCFilterABC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventMCFilterABC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMCFilterABC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_693_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventMCFilterABC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventMCFilterABC G__TerhiccLcLEventMCFilterABC;
static int G__erhicDict_693_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventMCFilterABC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventMCFilterABC*) (soff+(sizeof(erhic::EventMCFilterABC)*i)))->~G__TerhiccLcLEventMCFilterABC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventMCFilterABC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventMCFilterABC*) (soff))->~G__TerhiccLcLEventMCFilterABC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_693_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventMCFilterABC* dest = (erhic::EventMCFilterABC*) G__getstructoffset();
   *dest = *(erhic::EventMCFilterABC*) libp->para[0].ref;
   const erhic::EventMCFilterABC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventMilou */
static int G__erhicDict_694_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventMilou* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventMilou[n];
     } else {
       p = new((void*) gvp) erhic::EventMilou[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventMilou;
     } else {
       p = new((void*) gvp) erhic::EventMilou;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventMilou*) G__getstructoffset())->GetPhiBelGen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventMilou*) G__getstructoffset())->GetPhiBelRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::EventMilou*) G__getstructoffset())->GetPhiBelRec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventMilou::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMilou::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventMilou::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventMilou::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventMilou*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMilou::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventMilou::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventMilou::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_694_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventMilou::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventMilou G__TerhiccLcLEventMilou;
static int G__erhicDict_694_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventMilou*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventMilou*) (soff+(sizeof(erhic::EventMilou)*i)))->~G__TerhiccLcLEventMilou();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventMilou*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventMilou*) (soff))->~G__TerhiccLcLEventMilou();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventPepsi */
static int G__erhicDict_695_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventPepsi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventPepsi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventPepsi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventPepsi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventPepsi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventPepsi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventPepsi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventPepsi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_695_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventPepsi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventPepsi G__TerhiccLcLEventPepsi;
static int G__erhicDict_695_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventPepsi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventPepsi*) (soff+(sizeof(erhic::EventPepsi)*i)))->~G__TerhiccLcLEventPepsi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventPepsi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventPepsi*) (soff))->~G__TerhiccLcLEventPepsi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventRapgap */
static int G__erhicDict_696_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventRapgap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventRapgap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventRapgap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventRapgap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventRapgap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventRapgap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventRapgap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventRapgap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_696_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventRapgap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventRapgap G__TerhiccLcLEventRapgap;
static int G__erhicDict_696_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventRapgap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventRapgap*) (soff+(sizeof(erhic::EventRapgap)*i)))->~G__TerhiccLcLEventRapgap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventRapgap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventRapgap*) (soff))->~G__TerhiccLcLEventRapgap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LogReader */
static int G__erhicDict_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::LogReader*) G__getstructoffset())->Create());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((erhic::LogReader*) G__getstructoffset())->Extract(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const erhic::LogReader*) G__getstructoffset())->Save());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LogReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LogReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LogReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_697_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::LogReader G__TerhiccLcLLogReader;
static int G__erhicDict_697_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::LogReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::LogReader*) (soff+(sizeof(erhic::LogReader)*i)))->~G__TerhiccLcLLogReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::LogReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::LogReader*) (soff))->~G__TerhiccLcLLogReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_697_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReader* dest = (erhic::LogReader*) G__getstructoffset();
   *dest = *(erhic::LogReader*) libp->para[0].ref;
   const erhic::LogReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LogReaderPythia */
static int G__erhicDict_698_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderPythia* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderPythia[n];
     } else {
       p = new((void*) gvp) erhic::LogReaderPythia[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderPythia;
     } else {
       p = new((void*) gvp) erhic::LogReaderPythia;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LogReaderPythia::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderPythia::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LogReaderPythia::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LogReaderPythia::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderPythia*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderPythia::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderPythia::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderPythia::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_698_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderPythia::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_698_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::LogReaderPythia* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::LogReaderPythia(*(erhic::LogReaderPythia*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::LogReaderPythia G__TerhiccLcLLogReaderPythia;
static int G__erhicDict_698_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::LogReaderPythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::LogReaderPythia*) (soff+(sizeof(erhic::LogReaderPythia)*i)))->~G__TerhiccLcLLogReaderPythia();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::LogReaderPythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::LogReaderPythia*) (soff))->~G__TerhiccLcLLogReaderPythia();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_698_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderPythia* dest = (erhic::LogReaderPythia*) G__getstructoffset();
   *dest = *(erhic::LogReaderPythia*) libp->para[0].ref;
   const erhic::LogReaderPythia& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LogReaderPepsi */
static int G__erhicDict_699_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderPepsi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderPepsi[n];
     } else {
       p = new((void*) gvp) erhic::LogReaderPepsi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderPepsi;
     } else {
       p = new((void*) gvp) erhic::LogReaderPepsi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LogReaderPepsi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderPepsi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LogReaderPepsi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LogReaderPepsi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderPepsi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderPepsi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderPepsi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderPepsi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_699_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderPepsi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_699_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::LogReaderPepsi* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::LogReaderPepsi(*(erhic::LogReaderPepsi*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::LogReaderPepsi G__TerhiccLcLLogReaderPepsi;
static int G__erhicDict_699_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::LogReaderPepsi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::LogReaderPepsi*) (soff+(sizeof(erhic::LogReaderPepsi)*i)))->~G__TerhiccLcLLogReaderPepsi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::LogReaderPepsi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::LogReaderPepsi*) (soff))->~G__TerhiccLcLLogReaderPepsi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_699_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderPepsi* dest = (erhic::LogReaderPepsi*) G__getstructoffset();
   *dest = *(erhic::LogReaderPepsi*) libp->para[0].ref;
   const erhic::LogReaderPepsi& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LogReaderDjangoh */
static int G__erhicDict_700_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderDjangoh* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderDjangoh[n];
     } else {
       p = new((void*) gvp) erhic::LogReaderDjangoh[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderDjangoh;
     } else {
       p = new((void*) gvp) erhic::LogReaderDjangoh;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LogReaderDjangoh::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderDjangoh::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LogReaderDjangoh::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LogReaderDjangoh::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderDjangoh*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderDjangoh::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderDjangoh::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderDjangoh::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_700_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderDjangoh::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_700_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::LogReaderDjangoh* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::LogReaderDjangoh(*(erhic::LogReaderDjangoh*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::LogReaderDjangoh G__TerhiccLcLLogReaderDjangoh;
static int G__erhicDict_700_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::LogReaderDjangoh*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::LogReaderDjangoh*) (soff+(sizeof(erhic::LogReaderDjangoh)*i)))->~G__TerhiccLcLLogReaderDjangoh();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::LogReaderDjangoh*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::LogReaderDjangoh*) (soff))->~G__TerhiccLcLLogReaderDjangoh();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_700_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderDjangoh* dest = (erhic::LogReaderDjangoh*) G__getstructoffset();
   *dest = *(erhic::LogReaderDjangoh*) libp->para[0].ref;
   const erhic::LogReaderDjangoh& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LogReaderMilou */
static int G__erhicDict_701_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderMilou* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderMilou[n];
     } else {
       p = new((void*) gvp) erhic::LogReaderMilou[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderMilou;
     } else {
       p = new((void*) gvp) erhic::LogReaderMilou;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const erhic::LogReaderMilou*) G__getstructoffset())->GetNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::LogReaderMilou*) G__getstructoffset())->GetCrossSection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::LogReaderMilou*) G__getstructoffset())->GetCrossSectionError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LogReaderMilou::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderMilou::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LogReaderMilou::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LogReaderMilou::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderMilou*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderMilou::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderMilou::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderMilou::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_701_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderMilou::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_701_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::LogReaderMilou* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::LogReaderMilou(*(erhic::LogReaderMilou*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::LogReaderMilou G__TerhiccLcLLogReaderMilou;
static int G__erhicDict_701_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::LogReaderMilou*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::LogReaderMilou*) (soff+(sizeof(erhic::LogReaderMilou)*i)))->~G__TerhiccLcLLogReaderMilou();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::LogReaderMilou*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::LogReaderMilou*) (soff))->~G__TerhiccLcLLogReaderMilou();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_701_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderMilou* dest = (erhic::LogReaderMilou*) G__getstructoffset();
   *dest = *(erhic::LogReaderMilou*) libp->para[0].ref;
   const erhic::LogReaderMilou& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LogReaderGmcTrans */
static int G__erhicDict_702_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderGmcTrans* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderGmcTrans[n];
     } else {
       p = new((void*) gvp) erhic::LogReaderGmcTrans[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::LogReaderGmcTrans;
     } else {
       p = new((void*) gvp) erhic::LogReaderGmcTrans;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const erhic::LogReaderGmcTrans*) G__getstructoffset())->GetNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const erhic::LogReaderGmcTrans*) G__getstructoffset())->GetCrossSection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LogReaderGmcTrans::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderGmcTrans::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LogReaderGmcTrans::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LogReaderGmcTrans::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderGmcTrans*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderGmcTrans::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderGmcTrans::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderGmcTrans::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_702_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderGmcTrans::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_702_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::LogReaderGmcTrans* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::LogReaderGmcTrans(*(erhic::LogReaderGmcTrans*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::LogReaderGmcTrans G__TerhiccLcLLogReaderGmcTrans;
static int G__erhicDict_702_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::LogReaderGmcTrans*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::LogReaderGmcTrans*) (soff+(sizeof(erhic::LogReaderGmcTrans)*i)))->~G__TerhiccLcLLogReaderGmcTrans();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::LogReaderGmcTrans*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::LogReaderGmcTrans*) (soff))->~G__TerhiccLcLLogReaderGmcTrans();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_702_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderGmcTrans* dest = (erhic::LogReaderGmcTrans*) G__getstructoffset();
   *dest = *(erhic::LogReaderGmcTrans*) libp->para[0].ref;
   const erhic::LogReaderGmcTrans& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::LogReaderFactory */
static int G__erhicDict_703_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::LogReaderFactory& obj = erhic::LogReaderFactory::GetInstance();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::LogReaderFactory*) G__getstructoffset())->CreateReader(*(EventBase*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::LogReaderFactory*) G__getstructoffset())->CreateReader(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::LogReaderFactory*) G__getstructoffset())->CreateReader(*(istream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const erhic::LogReaderFactory*) G__getstructoffset())->Locate(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::LogReaderFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::LogReaderFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::LogReaderFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::LogReaderFactory*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderFactory*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderFactory*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::LogReaderFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::LogReaderFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_703_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::LogReaderFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_703_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::LogReaderFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::LogReaderFactory(*(erhic::LogReaderFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_703_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::LogReaderFactory* dest = (erhic::LogReaderFactory*) G__getstructoffset();
   *dest = *(erhic::LogReaderFactory*) libp->para[0].ref;
   const erhic::LogReaderFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::FileType */
static int G__erhicDict_711_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::FileType*) G__getstructoffset())->Create());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::FileType*) G__getstructoffset())->AllocateEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const erhic::FileType*) G__getstructoffset())->GetGeneratorName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::FileType*) G__getstructoffset())->CreateLogReader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::FileType*) G__getstructoffset())->CreateEventFactory(*(istream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::FileType::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::FileType::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::FileType::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::FileType::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::FileType*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::FileType::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::FileType::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::FileType::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_711_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::FileType::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::FileType G__TerhiccLcLFileType;
static int G__erhicDict_711_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::FileType*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::FileType*) (soff+(sizeof(erhic::FileType)*i)))->~G__TerhiccLcLFileType();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::FileType*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::FileType*) (soff))->~G__TerhiccLcLFileType();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_711_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::FileType* dest = (erhic::FileType*) G__getstructoffset();
   *dest = *(erhic::FileType*) libp->para[0].ref;
   const erhic::FileType& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::FileFactory */
static int G__erhicDict_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::FileFactory& obj = erhic::FileFactory::GetInstance();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_712_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::FileFactory*) G__getstructoffset())->GetFile(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_712_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::FileFactory*) G__getstructoffset())->GetFile(*(istream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_712_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::FileFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::FileFactory(*(erhic::FileFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_712_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::FileFactory* dest = (erhic::FileFactory*) G__getstructoffset();
   *dest = *(erhic::FileFactory*) libp->para[0].ref;
   const erhic::FileFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::Forester */
static int G__erhicDict_747_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::Forester* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::Forester[n];
     } else {
       p = new((void*) gvp) erhic::Forester[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::Forester;
     } else {
       p = new((void*) gvp) erhic::Forester;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((erhic::Forester*) G__getstructoffset())->Plant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Forester*) G__getstructoffset())->SetInputFileName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Forester*) G__getstructoffset())->SetOutputFileName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((erhic::Forester*) G__getstructoffset())->SetTreeName(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((erhic::Forester*) G__getstructoffset())->SetTreeName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((erhic::Forester*) G__getstructoffset())->SetBranchName(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((erhic::Forester*) G__getstructoffset())->SetBranchName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const erhic::Forester*) G__getstructoffset())->GetInputFileName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const erhic::Forester*) G__getstructoffset())->GetOutputFileName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const erhic::Forester*) G__getstructoffset())->GetTreeName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const erhic::Forester*) G__getstructoffset())->GetBranchName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((erhic::Forester*) G__getstructoffset())->SetMaxNEvents((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((erhic::Forester*) G__getstructoffset())->SetMaxNEvents();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const erhic::Forester*) G__getstructoffset())->GetMaxNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((erhic::Forester*) G__getstructoffset())->SetMessageInterval((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((erhic::Forester*) G__getstructoffset())->SetMessageInterval();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const erhic::Forester*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((erhic::Forester*) G__getstructoffset())->SetBeVerbose((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((erhic::Forester*) G__getstructoffset())->SetBeVerbose();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const erhic::Forester*) G__getstructoffset())->BeVerbose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::Forester*) G__getstructoffset())->GetFileType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::Forester::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Forester::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::Forester::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::Forester::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Forester*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Forester::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Forester::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Forester::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_747_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Forester::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_747_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::Forester* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::Forester(*(erhic::Forester*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::Forester G__TerhiccLcLForester;
static int G__erhicDict_747_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::Forester*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::Forester*) (soff+(sizeof(erhic::Forester)*i)))->~G__TerhiccLcLForester();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::Forester*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::Forester*) (soff))->~G__TerhiccLcLForester();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::Forester::Status */
static int G__erhicDict_748_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::Forester::Status* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::Forester::Status[n];
     } else {
       p = new((void*) gvp) erhic::Forester::Status[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::Forester::Status;
     } else {
       p = new((void*) gvp) erhic::Forester::Status;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const ostream& obj = ((const erhic::Forester::Status*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostream& obj = ((const erhic::Forester::Status*) G__getstructoffset())->Print();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::Forester::Status::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Forester::Status::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::Forester::Status::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::Forester::Status::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const erhic::Forester::Status*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Forester::Status*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Forester::Status*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::Forester::Status*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Forester::Status::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Forester::Status::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::Forester::Status::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_748_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::Forester::Status::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_748_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::Forester::Status* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::Forester::Status(*(erhic::Forester::Status*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::Forester::Status G__TerhiccLcLForestercLcLStatus;
static int G__erhicDict_748_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::Forester::Status*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::Forester::Status*) (soff+(sizeof(erhic::Forester::Status)*i)))->~G__TerhiccLcLForestercLcLStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::Forester::Status*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::Forester::Status*) (soff))->~G__TerhiccLcLForestercLcLStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_748_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::Forester::Status* dest = (erhic::Forester::Status*) G__getstructoffset();
   *dest = *(erhic::Forester::Status*) libp->para[0].ref;
   const erhic::Forester::Status& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventFromAsciiFactory<erhic::EventPepsi> */
static int G__erhicDict_749_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventPepsi>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventPepsi>[n];
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventPepsi>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventPepsi>;
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventPepsi>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventPepsi>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::EventFromAsciiFactory<erhic::EventPepsi>(*(istream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventPepsi>(*(istream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventFromAsciiFactory<erhic::EventPepsi>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventFromAsciiFactory<erhic::EventPepsi>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventPepsi>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventPepsi>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventPepsi>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_749_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventPepsi>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_749_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::EventFromAsciiFactory<erhic::EventPepsi>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::EventFromAsciiFactory<erhic::EventPepsi>(*(erhic::EventFromAsciiFactory<erhic::EventPepsi>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventFromAsciiFactory<erhic::EventPepsi> G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR;
static int G__erhicDict_749_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventFromAsciiFactory<erhic::EventPepsi>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventFromAsciiFactory<erhic::EventPepsi>*) (soff+(sizeof(erhic::EventFromAsciiFactory<erhic::EventPepsi>)*i)))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventFromAsciiFactory<erhic::EventPepsi>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventFromAsciiFactory<erhic::EventPepsi>*) (soff))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_749_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventPepsi>* dest = (erhic::EventFromAsciiFactory<erhic::EventPepsi>*) G__getstructoffset();
   *dest = *(erhic::EventFromAsciiFactory<erhic::EventPepsi>*) libp->para[0].ref;
   const erhic::EventFromAsciiFactory<erhic::EventPepsi>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventFromAsciiFactory<erhic::EventMilou> */
static int G__erhicDict_751_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventMilou>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventMilou>[n];
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventMilou>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventMilou>;
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventMilou>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventMilou>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::EventFromAsciiFactory<erhic::EventMilou>(*(istream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventMilou>(*(istream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventFromAsciiFactory<erhic::EventMilou>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventMilou>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventFromAsciiFactory<erhic::EventMilou>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventFromAsciiFactory<erhic::EventMilou>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventFromAsciiFactory<erhic::EventMilou>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventMilou>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventMilou>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventMilou>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_751_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventMilou>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_751_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::EventFromAsciiFactory<erhic::EventMilou>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::EventFromAsciiFactory<erhic::EventMilou>(*(erhic::EventFromAsciiFactory<erhic::EventMilou>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventFromAsciiFactory<erhic::EventMilou> G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR;
static int G__erhicDict_751_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventFromAsciiFactory<erhic::EventMilou>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventFromAsciiFactory<erhic::EventMilou>*) (soff+(sizeof(erhic::EventFromAsciiFactory<erhic::EventMilou>)*i)))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventFromAsciiFactory<erhic::EventMilou>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventFromAsciiFactory<erhic::EventMilou>*) (soff))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_751_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventMilou>* dest = (erhic::EventFromAsciiFactory<erhic::EventMilou>*) G__getstructoffset();
   *dest = *(erhic::EventFromAsciiFactory<erhic::EventMilou>*) libp->para[0].ref;
   const erhic::EventFromAsciiFactory<erhic::EventMilou>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventFromAsciiFactory<erhic::EventRapgap> */
static int G__erhicDict_753_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventRapgap>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventRapgap>[n];
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventRapgap>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventRapgap>;
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventRapgap>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventRapgap>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::EventFromAsciiFactory<erhic::EventRapgap>(*(istream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventRapgap>(*(istream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventFromAsciiFactory<erhic::EventRapgap>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventFromAsciiFactory<erhic::EventRapgap>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventRapgap>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventRapgap>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventRapgap>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_753_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventRapgap>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_753_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::EventFromAsciiFactory<erhic::EventRapgap>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::EventFromAsciiFactory<erhic::EventRapgap>(*(erhic::EventFromAsciiFactory<erhic::EventRapgap>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventFromAsciiFactory<erhic::EventRapgap> G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR;
static int G__erhicDict_753_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventFromAsciiFactory<erhic::EventRapgap>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventFromAsciiFactory<erhic::EventRapgap>*) (soff+(sizeof(erhic::EventFromAsciiFactory<erhic::EventRapgap>)*i)))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventFromAsciiFactory<erhic::EventRapgap>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventFromAsciiFactory<erhic::EventRapgap>*) (soff))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_753_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventRapgap>* dest = (erhic::EventFromAsciiFactory<erhic::EventRapgap>*) G__getstructoffset();
   *dest = *(erhic::EventFromAsciiFactory<erhic::EventRapgap>*) libp->para[0].ref;
   const erhic::EventFromAsciiFactory<erhic::EventRapgap>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventFromAsciiFactory<erhic::EventDjangoh> */
static int G__erhicDict_755_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventDjangoh>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventDjangoh>[n];
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventDjangoh>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventDjangoh>;
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventDjangoh>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventDjangoh>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::EventFromAsciiFactory<erhic::EventDjangoh>(*(istream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventDjangoh>(*(istream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventDjangoh>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventDjangoh>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventDjangoh>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_755_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventDjangoh>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_755_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::EventFromAsciiFactory<erhic::EventDjangoh>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::EventFromAsciiFactory<erhic::EventDjangoh>(*(erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventFromAsciiFactory<erhic::EventDjangoh> G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR;
static int G__erhicDict_755_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) (soff+(sizeof(erhic::EventFromAsciiFactory<erhic::EventDjangoh>)*i)))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) (soff))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_755_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventDjangoh>* dest = (erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) G__getstructoffset();
   *dest = *(erhic::EventFromAsciiFactory<erhic::EventDjangoh>*) libp->para[0].ref;
   const erhic::EventFromAsciiFactory<erhic::EventDjangoh>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventFromAsciiFactory<erhic::EventDpmjet> */
static int G__erhicDict_757_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventDpmjet>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventDpmjet>[n];
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventDpmjet>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventDpmjet>;
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventDpmjet>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventDpmjet>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::EventFromAsciiFactory<erhic::EventDpmjet>(*(istream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventDpmjet>(*(istream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventDpmjet>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventDpmjet>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventDpmjet>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_757_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventDpmjet>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_757_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::EventFromAsciiFactory<erhic::EventDpmjet>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::EventFromAsciiFactory<erhic::EventDpmjet>(*(erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventFromAsciiFactory<erhic::EventDpmjet> G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR;
static int G__erhicDict_757_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) (soff+(sizeof(erhic::EventFromAsciiFactory<erhic::EventDpmjet>)*i)))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) (soff))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_757_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventDpmjet>* dest = (erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) G__getstructoffset();
   *dest = *(erhic::EventFromAsciiFactory<erhic::EventDpmjet>*) libp->para[0].ref;
   const erhic::EventFromAsciiFactory<erhic::EventDpmjet>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventFromAsciiFactory<erhic::EventPythia> */
static int G__erhicDict_759_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventPythia>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventPythia>[n];
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventPythia>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventPythia>;
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventPythia>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventPythia>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::EventFromAsciiFactory<erhic::EventPythia>(*(istream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventPythia>(*(istream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventFromAsciiFactory<erhic::EventPythia>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventPythia>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventFromAsciiFactory<erhic::EventPythia>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventFromAsciiFactory<erhic::EventPythia>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventFromAsciiFactory<erhic::EventPythia>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventPythia>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventPythia>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventPythia>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_759_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventPythia>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_759_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::EventFromAsciiFactory<erhic::EventPythia>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::EventFromAsciiFactory<erhic::EventPythia>(*(erhic::EventFromAsciiFactory<erhic::EventPythia>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventFromAsciiFactory<erhic::EventPythia> G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR;
static int G__erhicDict_759_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventFromAsciiFactory<erhic::EventPythia>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventFromAsciiFactory<erhic::EventPythia>*) (soff+(sizeof(erhic::EventFromAsciiFactory<erhic::EventPythia>)*i)))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventFromAsciiFactory<erhic::EventPythia>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventFromAsciiFactory<erhic::EventPythia>*) (soff))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_759_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventPythia>* dest = (erhic::EventFromAsciiFactory<erhic::EventPythia>*) G__getstructoffset();
   *dest = *(erhic::EventFromAsciiFactory<erhic::EventPythia>*) libp->para[0].ref;
   const erhic::EventFromAsciiFactory<erhic::EventPythia>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::EventFromAsciiFactory<erhic::EventGmcTrans> */
static int G__erhicDict_761_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventGmcTrans>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventGmcTrans>[n];
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::EventFromAsciiFactory<erhic::EventGmcTrans>;
     } else {
       p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventGmcTrans>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new erhic::EventFromAsciiFactory<erhic::EventGmcTrans>(*(istream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>(*(istream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_761_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_761_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::EventFromAsciiFactory<erhic::EventGmcTrans>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::EventFromAsciiFactory<erhic::EventGmcTrans>(*(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::EventFromAsciiFactory<erhic::EventGmcTrans> G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR;
static int G__erhicDict_761_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) (soff+(sizeof(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>)*i)))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) (soff))->~G__TerhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_761_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::EventFromAsciiFactory<erhic::EventGmcTrans>* dest = (erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) G__getstructoffset();
   *dest = *(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*) libp->para[0].ref;
   const erhic::EventFromAsciiFactory<erhic::EventGmcTrans>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::File<erhic::EventPythia> */
static int G__erhicDict_763_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventPythia>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventPythia>[n];
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventPythia>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventPythia>;
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventPythia>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::File<erhic::EventPythia>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventPythia>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::File<erhic::EventPythia>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::File<erhic::EventPythia>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::File<erhic::EventPythia>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventPythia>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventPythia>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventPythia>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_763_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventPythia>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_763_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::File<erhic::EventPythia>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::File<erhic::EventPythia>(*(erhic::File<erhic::EventPythia>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::File<erhic::EventPythia> G__TerhiccLcLFilelEerhiccLcLEventPythiagR;
static int G__erhicDict_763_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::File<erhic::EventPythia>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::File<erhic::EventPythia>*) (soff+(sizeof(erhic::File<erhic::EventPythia>)*i)))->~G__TerhiccLcLFilelEerhiccLcLEventPythiagR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::File<erhic::EventPythia>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::File<erhic::EventPythia>*) (soff))->~G__TerhiccLcLFilelEerhiccLcLEventPythiagR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_763_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventPythia>* dest = (erhic::File<erhic::EventPythia>*) G__getstructoffset();
   *dest = *(erhic::File<erhic::EventPythia>*) libp->para[0].ref;
   const erhic::File<erhic::EventPythia>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::File<erhic::EventMilou> */
static int G__erhicDict_764_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventMilou>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventMilou>[n];
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventMilou>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventMilou>;
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventMilou>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::File<erhic::EventMilou>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventMilou>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::File<erhic::EventMilou>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::File<erhic::EventMilou>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::File<erhic::EventMilou>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventMilou>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventMilou>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventMilou>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_764_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventMilou>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_764_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::File<erhic::EventMilou>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::File<erhic::EventMilou>(*(erhic::File<erhic::EventMilou>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::File<erhic::EventMilou> G__TerhiccLcLFilelEerhiccLcLEventMilougR;
static int G__erhicDict_764_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::File<erhic::EventMilou>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::File<erhic::EventMilou>*) (soff+(sizeof(erhic::File<erhic::EventMilou>)*i)))->~G__TerhiccLcLFilelEerhiccLcLEventMilougR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::File<erhic::EventMilou>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::File<erhic::EventMilou>*) (soff))->~G__TerhiccLcLFilelEerhiccLcLEventMilougR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_764_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventMilou>* dest = (erhic::File<erhic::EventMilou>*) G__getstructoffset();
   *dest = *(erhic::File<erhic::EventMilou>*) libp->para[0].ref;
   const erhic::File<erhic::EventMilou>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::File<erhic::EventPepsi> */
static int G__erhicDict_765_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventPepsi>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventPepsi>[n];
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventPepsi>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventPepsi>;
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventPepsi>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::File<erhic::EventPepsi>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventPepsi>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::File<erhic::EventPepsi>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::File<erhic::EventPepsi>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::File<erhic::EventPepsi>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventPepsi>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventPepsi>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventPepsi>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_765_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventPepsi>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_765_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::File<erhic::EventPepsi>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::File<erhic::EventPepsi>(*(erhic::File<erhic::EventPepsi>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::File<erhic::EventPepsi> G__TerhiccLcLFilelEerhiccLcLEventPepsigR;
static int G__erhicDict_765_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::File<erhic::EventPepsi>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::File<erhic::EventPepsi>*) (soff+(sizeof(erhic::File<erhic::EventPepsi>)*i)))->~G__TerhiccLcLFilelEerhiccLcLEventPepsigR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::File<erhic::EventPepsi>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::File<erhic::EventPepsi>*) (soff))->~G__TerhiccLcLFilelEerhiccLcLEventPepsigR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_765_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventPepsi>* dest = (erhic::File<erhic::EventPepsi>*) G__getstructoffset();
   *dest = *(erhic::File<erhic::EventPepsi>*) libp->para[0].ref;
   const erhic::File<erhic::EventPepsi>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::File<erhic::EventRapgap> */
static int G__erhicDict_766_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventRapgap>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventRapgap>[n];
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventRapgap>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventRapgap>;
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventRapgap>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::File<erhic::EventRapgap>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventRapgap>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::File<erhic::EventRapgap>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::File<erhic::EventRapgap>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::File<erhic::EventRapgap>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventRapgap>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventRapgap>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventRapgap>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_766_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventRapgap>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_766_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::File<erhic::EventRapgap>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::File<erhic::EventRapgap>(*(erhic::File<erhic::EventRapgap>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::File<erhic::EventRapgap> G__TerhiccLcLFilelEerhiccLcLEventRapgapgR;
static int G__erhicDict_766_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::File<erhic::EventRapgap>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::File<erhic::EventRapgap>*) (soff+(sizeof(erhic::File<erhic::EventRapgap>)*i)))->~G__TerhiccLcLFilelEerhiccLcLEventRapgapgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::File<erhic::EventRapgap>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::File<erhic::EventRapgap>*) (soff))->~G__TerhiccLcLFilelEerhiccLcLEventRapgapgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_766_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventRapgap>* dest = (erhic::File<erhic::EventRapgap>*) G__getstructoffset();
   *dest = *(erhic::File<erhic::EventRapgap>*) libp->para[0].ref;
   const erhic::File<erhic::EventRapgap>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::File<erhic::EventDjangoh> */
static int G__erhicDict_767_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventDjangoh>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventDjangoh>[n];
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventDjangoh>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventDjangoh>;
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventDjangoh>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::File<erhic::EventDjangoh>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventDjangoh>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::File<erhic::EventDjangoh>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::File<erhic::EventDjangoh>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::File<erhic::EventDjangoh>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventDjangoh>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventDjangoh>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventDjangoh>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_767_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventDjangoh>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_767_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::File<erhic::EventDjangoh>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::File<erhic::EventDjangoh>(*(erhic::File<erhic::EventDjangoh>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::File<erhic::EventDjangoh> G__TerhiccLcLFilelEerhiccLcLEventDjangohgR;
static int G__erhicDict_767_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::File<erhic::EventDjangoh>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::File<erhic::EventDjangoh>*) (soff+(sizeof(erhic::File<erhic::EventDjangoh>)*i)))->~G__TerhiccLcLFilelEerhiccLcLEventDjangohgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::File<erhic::EventDjangoh>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::File<erhic::EventDjangoh>*) (soff))->~G__TerhiccLcLFilelEerhiccLcLEventDjangohgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_767_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventDjangoh>* dest = (erhic::File<erhic::EventDjangoh>*) G__getstructoffset();
   *dest = *(erhic::File<erhic::EventDjangoh>*) libp->para[0].ref;
   const erhic::File<erhic::EventDjangoh>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::File<erhic::EventDpmjet> */
static int G__erhicDict_768_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventDpmjet>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventDpmjet>[n];
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventDpmjet>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventDpmjet>;
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventDpmjet>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::File<erhic::EventDpmjet>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventDpmjet>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::File<erhic::EventDpmjet>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::File<erhic::EventDpmjet>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::File<erhic::EventDpmjet>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventDpmjet>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventDpmjet>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventDpmjet>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_768_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventDpmjet>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_768_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::File<erhic::EventDpmjet>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::File<erhic::EventDpmjet>(*(erhic::File<erhic::EventDpmjet>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::File<erhic::EventDpmjet> G__TerhiccLcLFilelEerhiccLcLEventDpmjetgR;
static int G__erhicDict_768_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::File<erhic::EventDpmjet>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::File<erhic::EventDpmjet>*) (soff+(sizeof(erhic::File<erhic::EventDpmjet>)*i)))->~G__TerhiccLcLFilelEerhiccLcLEventDpmjetgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::File<erhic::EventDpmjet>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::File<erhic::EventDpmjet>*) (soff))->~G__TerhiccLcLFilelEerhiccLcLEventDpmjetgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_768_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventDpmjet>* dest = (erhic::File<erhic::EventDpmjet>*) G__getstructoffset();
   *dest = *(erhic::File<erhic::EventDpmjet>*) libp->para[0].ref;
   const erhic::File<erhic::EventDpmjet>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* erhic::File<erhic::EventGmcTrans> */
static int G__erhicDict_769_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventGmcTrans>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventGmcTrans>[n];
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventGmcTrans>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new erhic::File<erhic::EventGmcTrans>;
     } else {
       p = new((void*) gvp) erhic::File<erhic::EventGmcTrans>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) erhic::File<erhic::EventGmcTrans>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventGmcTrans>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) erhic::File<erhic::EventGmcTrans>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      erhic::File<erhic::EventGmcTrans>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((erhic::File<erhic::EventGmcTrans>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventGmcTrans>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventGmcTrans>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) erhic::File<erhic::EventGmcTrans>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_769_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) erhic::File<erhic::EventGmcTrans>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__erhicDict_769_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   erhic::File<erhic::EventGmcTrans>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new erhic::File<erhic::EventGmcTrans>(*(erhic::File<erhic::EventGmcTrans>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef erhic::File<erhic::EventGmcTrans> G__TerhiccLcLFilelEerhiccLcLEventGmcTransgR;
static int G__erhicDict_769_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (erhic::File<erhic::EventGmcTrans>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((erhic::File<erhic::EventGmcTrans>*) (soff+(sizeof(erhic::File<erhic::EventGmcTrans>)*i)))->~G__TerhiccLcLFilelEerhiccLcLEventGmcTransgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (erhic::File<erhic::EventGmcTrans>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((erhic::File<erhic::EventGmcTrans>*) (soff))->~G__TerhiccLcLFilelEerhiccLcLEventGmcTransgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__erhicDict_769_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   erhic::File<erhic::EventGmcTrans>* dest = (erhic::File<erhic::EventGmcTrans>*) G__getstructoffset();
   *dest = *(erhic::File<erhic::EventGmcTrans>*) libp->para[0].ref;
   const erhic::File<erhic::EventGmcTrans>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<erhic::ParticleMC,allocator<erhic::ParticleMC> > */
static int G__erhicDict_771_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reference obj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->at((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_reference obj = ((const vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->at((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator* pobj;
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator xobj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->begin();
         pobj = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator* pobj;
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator xobj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->end();
         pobj = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator* pobj;
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator xobj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->rbegin();
         pobj = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator* pobj;
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator xobj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->rend();
         pobj = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->resize((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->resize((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]), *((erhic::ParticleMC*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reference obj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->operator[]((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_reference obj = ((const vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->operator[]((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >[n];
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >;
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]), *(erhic::ParticleMC*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]), *(erhic::ParticleMC*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >(*(vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >(*(vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >(*((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >(*((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >& obj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->operator=(*(vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->reserve((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::ParticleMC& obj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::ParticleMC& obj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->push_back(*(erhic::ParticleMC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->swap(*(vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator* pobj;
         vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator xobj = ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->insert(*((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator*) G__int(libp->para[0])), *(erhic::ParticleMC*) libp->para[1].ref);
         pobj = new vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->insert(*((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator*) G__int(libp->para[1]))
, *((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->insert(*((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator*) G__int(libp->para[0])), (vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type) G__int(libp->para[1])
, *(erhic::ParticleMC*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->erase(*((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->erase(*((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_771_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<erhic::ParticleMC,allocator<erhic::ParticleMC> > G__TvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR;
static int G__erhicDict_771_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) (soff+(sizeof(vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >)*i)))->~G__TvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*) (soff))->~G__TvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> > */
static int G__erhicDict_775_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reference obj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->at((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_reference obj = ((const vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->at((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator* pobj;
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator xobj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->begin();
         pobj = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator* pobj;
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator xobj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->end();
         pobj = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator* pobj;
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator xobj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator* pobj;
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator xobj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->rend();
         pobj = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->resize((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->resize((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]), (erhic::ParticleMC*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reference obj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->operator[]((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_reference obj = ((const vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->operator[]((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >[n];
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >;
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(erhic::ParticleMC**) libp->para[1].ref : *(erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(erhic::ParticleMC**) libp->para[1].ref : *(erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >(*(vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >(*(vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >(*((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >(*((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >& obj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->operator=(*(vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->reserve((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         erhic::ParticleMC*& obj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         erhic::ParticleMC*& obj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(erhic::ParticleMC**) libp->para[0].ref : *(erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->swap(*(vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator* pobj;
         vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator xobj = ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->insert(*((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(erhic::ParticleMC**) libp->para[1].ref : *(erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->insert(*((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->insert(*((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), (vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(erhic::ParticleMC**) libp->para[2].ref : *(erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->erase(*((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->erase(*((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), *((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_775_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> > G__TvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR;
static int G__erhicDict_775_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) (soff+(sizeof(vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >)*i)))->~G__TvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*) (soff))->~G__TvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> > */
static int G__erhicDict_779_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reference obj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->at((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_reference obj = ((const vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->at((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator* pobj;
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator xobj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->begin();
         pobj = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator* pobj;
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator xobj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->end();
         pobj = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator* pobj;
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator xobj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator* pobj;
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator xobj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->rend();
         pobj = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->resize((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->resize((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]), (erhic::ParticleMC*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reference obj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->operator[]((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_reference obj = ((const vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->operator[]((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >[n];
     } else {
       p = new((void*) gvp) vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >;
     } else {
       p = new((void*) gvp) vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(const erhic::ParticleMC**) libp->para[1].ref : *(const erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(const erhic::ParticleMC**) libp->para[1].ref : *(const erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >(*(vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >(*(vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >(*((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[0])), *((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >(*((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[0])), *((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >& obj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->operator=(*(vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->reserve((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::ParticleMC*& obj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::ParticleMC*& obj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(const erhic::ParticleMC**) libp->para[0].ref : *(const erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->swap(*(vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator* pobj;
         vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator xobj = ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->insert(*((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(const erhic::ParticleMC**) libp->para[1].ref : *(const erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->insert(*((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), *((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->insert(*((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), (vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(const erhic::ParticleMC**) libp->para[2].ref : *(const erhic::ParticleMC**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->erase(*((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->erase(*((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator*) G__int(libp->para[0])), *((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_779_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> > G__TvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR;
static int G__erhicDict_779_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) (soff+(sizeof(vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >)*i)))->~G__TvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*) (soff))->~G__TvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* auto_ptr<erhic::Pid> */
static int G__erhicDict_782_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   auto_ptr<erhic::Pid>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new auto_ptr<erhic::Pid>((erhic::Pid*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) auto_ptr<erhic::Pid>((erhic::Pid*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new auto_ptr<erhic::Pid>[n];
       } else {
         p = new((void*) gvp) auto_ptr<erhic::Pid>[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new auto_ptr<erhic::Pid>;
       } else {
         p = new((void*) gvp) auto_ptr<erhic::Pid>;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_782_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   auto_ptr<erhic::Pid>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new auto_ptr<erhic::Pid>(*(auto_ptr<erhic::Pid>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) auto_ptr<erhic::Pid>(*(auto_ptr<erhic::Pid>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_782_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const auto_ptr<erhic::Pid>& obj = ((auto_ptr<erhic::Pid>*) G__getstructoffset())->operator=(*(auto_ptr<erhic::Pid>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_782_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const erhic::Pid& obj = ((const auto_ptr<erhic::Pid>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_782_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const auto_ptr<erhic::Pid>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_782_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const auto_ptr<erhic::Pid>*) G__getstructoffset())->get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__erhicDict_782_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((auto_ptr<erhic::Pid>*) G__getstructoffset())->release());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef auto_ptr<erhic::Pid> G__Tauto_ptrlEerhiccLcLPidgR;
static int G__erhicDict_782_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (auto_ptr<erhic::Pid>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((auto_ptr<erhic::Pid>*) (soff+(sizeof(auto_ptr<erhic::Pid>)*i)))->~G__Tauto_ptrlEerhiccLcLPidgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (auto_ptr<erhic::Pid>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((auto_ptr<erhic::Pid>*) (soff))->~G__Tauto_ptrlEerhiccLcLPidgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__erhicDict__0_2963(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letLonglong(result7, 110, (G__int64) BuildTree(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref
, (const Long64_t) G__Longlong(libp->para[2]), *(string*) libp->para[3].ref));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) BuildTree(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref
, (const Long64_t) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) BuildTree(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) BuildTree(*(TString*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* erhic */

/* erhic::Pid */

/* erhic::VirtualParticle */

/* erhic::EventMC */

/* erhic::ParticleMC */

/* BeamParticles */

/* erhic::VirtualEvent */

/* vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> > */

/* ParticleIdentifier */

/* erhic::EventDis */

/* erhic::DisKinematics */

/* erhic::KinematicsComputer */

/* erhic::LeptonKinematicsComputer */

/* erhic::JacquetBlondelComputer */

/* erhic::DoubleAngleComputer */

/* erhic::VirtualEventFactory */

/* EventToDot */

/* erhic::Reader */

/* erhic::EventDjangoh */

/* erhic::EventDpmjet */

/* erhic::EventPythia */

/* erhic::EventGmcTrans */

/* erhic::EventMCFilterABC */

/* erhic::EventMilou */

/* erhic::EventPepsi */

/* erhic::EventRapgap */

/* erhic::LogReader */

/* erhic::LogReaderPythia */

/* erhic::LogReaderPepsi */

/* erhic::LogReaderDjangoh */

/* erhic::LogReaderMilou */

/* erhic::LogReaderGmcTrans */

/* erhic::LogReaderFactory */

/* erhic::FileType */

/* erhic::FileFactory */

/* erhic::Forester */

/* erhic::Forester::Status */

/* erhic::EventFromAsciiFactory<erhic::EventPepsi> */

/* erhic::EventFromAsciiFactory<erhic::EventMilou> */

/* erhic::EventFromAsciiFactory<erhic::EventRapgap> */

/* erhic::EventFromAsciiFactory<erhic::EventDjangoh> */

/* erhic::EventFromAsciiFactory<erhic::EventDpmjet> */

/* erhic::EventFromAsciiFactory<erhic::EventPythia> */

/* erhic::EventFromAsciiFactory<erhic::EventGmcTrans> */

/* erhic::File<erhic::EventPythia> */

/* erhic::File<erhic::EventMilou> */

/* erhic::File<erhic::EventPepsi> */

/* erhic::File<erhic::EventRapgap> */

/* erhic::File<erhic::EventDjangoh> */

/* erhic::File<erhic::EventDpmjet> */

/* erhic::File<erhic::EventGmcTrans> */

/* vector<erhic::ParticleMC,allocator<erhic::ParticleMC> > */

/* vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> > */

/* vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> > */

/* auto_ptr<erhic::Pid> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncerhicDict {
 public:
  G__Sizep2memfuncerhicDict(): p(&G__Sizep2memfuncerhicDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncerhicDict::*p)();
};

size_t G__get_sizep2memfuncerhicDict()
{
  G__Sizep2memfuncerhicDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceerhicDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle))) {
     erhic::VirtualParticle *G__Lderived;
     G__Lderived=(erhic::VirtualParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC))) {
     erhic::EventMC *G__Lderived;
     G__Lderived=(erhic::EventMC*)0x1000;
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC))) {
     erhic::ParticleMC *G__Lderived;
     G__Lderived=(erhic::ParticleMC*)0x1000;
     {
       erhic::VirtualParticle *G__Lpbase=(erhic::VirtualParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent))) {
     erhic::VirtualEvent *G__Lderived;
     G__Lderived=(erhic::VirtualEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis))) {
     erhic::EventDis *G__Lderived;
     G__Lderived=(erhic::EventDis*)0x1000;
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics))) {
     erhic::DisKinematics *G__Lderived;
     G__Lderived=(erhic::DisKinematics*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer))) {
     erhic::LeptonKinematicsComputer *G__Lderived;
     G__Lderived=(erhic::LeptonKinematicsComputer*)0x1000;
     {
       erhic::KinematicsComputer *G__Lpbase=(erhic::KinematicsComputer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLKinematicsComputer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer))) {
     erhic::JacquetBlondelComputer *G__Lderived;
     G__Lderived=(erhic::JacquetBlondelComputer*)0x1000;
     {
       erhic::KinematicsComputer *G__Lpbase=(erhic::KinematicsComputer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLKinematicsComputer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer))) {
     erhic::DoubleAngleComputer *G__Lderived;
     G__Lderived=(erhic::DoubleAngleComputer*)0x1000;
     {
       erhic::KinematicsComputer *G__Lpbase=(erhic::KinematicsComputer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLKinematicsComputer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory))) {
     erhic::VirtualEventFactory *G__Lderived;
     G__Lderived=(erhic::VirtualEventFactory*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh))) {
     erhic::EventDjangoh *G__Lderived;
     G__Lderived=(erhic::EventDjangoh*)0x1000;
     {
       erhic::EventMC *G__Lpbase=(erhic::EventMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet))) {
     erhic::EventDpmjet *G__Lderived;
     G__Lderived=(erhic::EventDpmjet*)0x1000;
     {
       erhic::EventMC *G__Lpbase=(erhic::EventMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia))) {
     erhic::EventPythia *G__Lderived;
     G__Lderived=(erhic::EventPythia*)0x1000;
     {
       erhic::EventMC *G__Lpbase=(erhic::EventMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans))) {
     erhic::EventGmcTrans *G__Lderived;
     G__Lderived=(erhic::EventGmcTrans*)0x1000;
     {
       erhic::EventMC *G__Lpbase=(erhic::EventMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou))) {
     erhic::EventMilou *G__Lderived;
     G__Lderived=(erhic::EventMilou*)0x1000;
     {
       erhic::EventMC *G__Lpbase=(erhic::EventMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi))) {
     erhic::EventPepsi *G__Lderived;
     G__Lderived=(erhic::EventPepsi*)0x1000;
     {
       erhic::EventMC *G__Lpbase=(erhic::EventMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap))) {
     erhic::EventRapgap *G__Lderived;
     G__Lderived=(erhic::EventRapgap*)0x1000;
     {
       erhic::EventMC *G__Lpbase=(erhic::EventMC*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       erhic::EventDis *G__Lpbase=(erhic::EventDis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       erhic::VirtualEvent *G__Lpbase=(erhic::VirtualEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader))) {
     erhic::LogReader *G__Lderived;
     G__Lderived=(erhic::LogReader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia))) {
     erhic::LogReaderPythia *G__Lderived;
     G__Lderived=(erhic::LogReaderPythia*)0x1000;
     {
       erhic::LogReader *G__Lpbase=(erhic::LogReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi))) {
     erhic::LogReaderPepsi *G__Lderived;
     G__Lderived=(erhic::LogReaderPepsi*)0x1000;
     {
       erhic::LogReader *G__Lpbase=(erhic::LogReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh))) {
     erhic::LogReaderDjangoh *G__Lderived;
     G__Lderived=(erhic::LogReaderDjangoh*)0x1000;
     {
       erhic::LogReader *G__Lpbase=(erhic::LogReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou))) {
     erhic::LogReaderMilou *G__Lderived;
     G__Lderived=(erhic::LogReaderMilou*)0x1000;
     {
       erhic::LogReader *G__Lpbase=(erhic::LogReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans))) {
     erhic::LogReaderGmcTrans *G__Lderived;
     G__Lderived=(erhic::LogReaderGmcTrans*)0x1000;
     {
       erhic::LogReader *G__Lpbase=(erhic::LogReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType))) {
     erhic::FileType *G__Lderived;
     G__Lderived=(erhic::FileType*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester))) {
     erhic::Forester *G__Lderived;
     G__Lderived=(erhic::Forester*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR))) {
     erhic::EventFromAsciiFactory<erhic::EventPepsi> *G__Lderived;
     G__Lderived=(erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x1000;
     {
       erhic::VirtualEventFactory *G__Lpbase=(erhic::VirtualEventFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR))) {
     erhic::EventFromAsciiFactory<erhic::EventMilou> *G__Lderived;
     G__Lderived=(erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x1000;
     {
       erhic::VirtualEventFactory *G__Lpbase=(erhic::VirtualEventFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR))) {
     erhic::EventFromAsciiFactory<erhic::EventRapgap> *G__Lderived;
     G__Lderived=(erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x1000;
     {
       erhic::VirtualEventFactory *G__Lpbase=(erhic::VirtualEventFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR))) {
     erhic::EventFromAsciiFactory<erhic::EventDjangoh> *G__Lderived;
     G__Lderived=(erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x1000;
     {
       erhic::VirtualEventFactory *G__Lpbase=(erhic::VirtualEventFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR))) {
     erhic::EventFromAsciiFactory<erhic::EventDpmjet> *G__Lderived;
     G__Lderived=(erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x1000;
     {
       erhic::VirtualEventFactory *G__Lpbase=(erhic::VirtualEventFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR))) {
     erhic::EventFromAsciiFactory<erhic::EventPythia> *G__Lderived;
     G__Lderived=(erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x1000;
     {
       erhic::VirtualEventFactory *G__Lpbase=(erhic::VirtualEventFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR))) {
     erhic::EventFromAsciiFactory<erhic::EventGmcTrans> *G__Lderived;
     G__Lderived=(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x1000;
     {
       erhic::VirtualEventFactory *G__Lpbase=(erhic::VirtualEventFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR))) {
     erhic::File<erhic::EventPythia> *G__Lderived;
     G__Lderived=(erhic::File<erhic::EventPythia>*)0x1000;
     {
       erhic::FileType *G__Lpbase=(erhic::FileType*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR))) {
     erhic::File<erhic::EventMilou> *G__Lderived;
     G__Lderived=(erhic::File<erhic::EventMilou>*)0x1000;
     {
       erhic::FileType *G__Lpbase=(erhic::FileType*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR))) {
     erhic::File<erhic::EventPepsi> *G__Lderived;
     G__Lderived=(erhic::File<erhic::EventPepsi>*)0x1000;
     {
       erhic::FileType *G__Lpbase=(erhic::FileType*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR))) {
     erhic::File<erhic::EventRapgap> *G__Lderived;
     G__Lderived=(erhic::File<erhic::EventRapgap>*)0x1000;
     {
       erhic::FileType *G__Lpbase=(erhic::FileType*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR))) {
     erhic::File<erhic::EventDjangoh> *G__Lderived;
     G__Lderived=(erhic::File<erhic::EventDjangoh>*)0x1000;
     {
       erhic::FileType *G__Lpbase=(erhic::FileType*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR))) {
     erhic::File<erhic::EventDpmjet> *G__Lderived;
     G__Lderived=(erhic::File<erhic::EventDpmjet>*)0x1000;
     {
       erhic::FileType *G__Lpbase=(erhic::FileType*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR))) {
     erhic::File<erhic::EventGmcTrans> *G__Lderived;
     G__Lderived=(erhic::File<erhic::EventGmcTrans>*)0x1000;
     {
       erhic::FileType *G__Lpbase=(erhic::FileType*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR),G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR),G__get_linked_tagnum(&G__erhicDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableerhicDict() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__erhicDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const erhic::VirtualParticle*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle),1,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle),257,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ParticlePtrList",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const VirtualParticle*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const VirtualParticle*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const VirtualParticle*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Smear::Smearer*>",117,G__get_linked_tagnum(&G__erhicDictLN_listlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Smear::Smearer*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const VirtualParticle*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EventBase",117,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ParticleMCS*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Smear::ParticleMCS*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,LogReader*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,LogReader*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,erhic::LogReader*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,erhic::LogReader*,less<string> >",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Map",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR),0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,FileType*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,FileType*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,erhic::FileType*>",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,erhic::FileType*,less<string> >",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Map",117,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR),0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Particle>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),1,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),257,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<erhic::ParticleMC>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Particle*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),1,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),257,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<erhic::ParticleMC*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const Particle*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),1,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC),257,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const erhic::ParticleMC*>",117,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("element_type",117,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid),0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* erhic */
static void G__setup_memvarerhic(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhic));
   {
   }
   G__tag_memvar_reset();
}


   /* erhic::Pid */
static void G__setup_memvarerhiccLcLPid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid));
   { erhic::Pid *p; p=(erhic::Pid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mCode=",0,"/< The integer PDG code");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::VirtualParticle */
static void G__setup_memvarerhiccLcLVirtualParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle));
   { erhic::VirtualParticle *p; p=(erhic::VirtualParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventMC */
static void G__setup_memvarerhiccLcLEventMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC));
   { erhic::EventMC *p; p=(erhic::EventMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"number=",0,"/< Event number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"process=",0,"/< PYTHIA code for the physics process producing the event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nTracks=",0,"/< Number of Particles in the event (intermediate + final)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"ELeptonInNucl=",0,"/< Incident lepton energy in the");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"ELeptonOutNucl=",0,"/< Scattered lepton energy in the");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClonesArray),-1,-1,2,"particles=",0,"/< Particle list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::ParticleMC */
static void G__setup_memvarerhiccLcLParticleMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC));
   { erhic::ParticleMC *p; p=(erhic::ParticleMC*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->I)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"I=",0,"/< Particle index in event");
   G__memvar_setup((void*)((long)(&p->KS)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"KS=",0,"/< Particle status code: see PYTHIA manual");
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,"/< PDG particle code");
   G__memvar_setup((void*)((long)(&p->orig)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"orig=",0,"/< I of parent particle");
   G__memvar_setup((void*)((long)(&p->daughter)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"daughter=",0,"/< I of first child particle");
   G__memvar_setup((void*)((long)(&p->ldaughter)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ldaughter=",0,"/< I of last child particle");
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"px=",0,"/< x component of particle momentum");
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"py=",0,"/< y component of particle momentum");
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"pz=",0,"/< z component of particle momentum");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"E=",0,"/< Energy of particle");
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"m=",0,"/< Invariant mass of particle");
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"pt=",0,"/< Transverse momentum of particle");
   G__memvar_setup((void*)((long)(&p->xv)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xv=",0,"/< x coordinate of particle production vertex");
   G__memvar_setup((void*)((long)(&p->yv)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"yv=",0,"/< y coordinate of particle production vertex");
   G__memvar_setup((void*)((long)(&p->zv)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"zv=",0,"/< z coordinate of particle production vertex");
   G__memvar_setup((void*)((long)(&p->parentId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"parentId=",0,"/< PDG code of this particle's parent");
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"p=",0,"/< Total momentum of particle");
   G__memvar_setup((void*)((long)(&p->theta)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"theta=",0,"/< Polar angle");
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"phi=",0,"/< Azimuthal angle");
   G__memvar_setup((void*)((long)(&p->rapidity)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"rapidity=",0,"/< Rapidity of particle");
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"eta=",0,"/< Pseudorapidity of particle");
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"z=",0,"/< Fraction of virtual photon energy");
   G__memvar_setup((void*)((long)(&p->xFeynman)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xFeynman=",0,"/< Feynman x = p<sub>z</sub>/(2sqrt(s))");
   G__memvar_setup((void*)((long)(&p->thetaGamma)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"thetaGamma=",0,"/< Angle between particle and the exchange");
   G__memvar_setup((void*)((long)(&p->ptVsGamma)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"ptVsGamma=",0,"/< pt w.r.t. the virtual photon in the");
   G__memvar_setup((void*)((long)(&p->phiPrf)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"phiPrf=",0,"/< Azimuthal angle around virtual");
   G__memvar_setup((void*)((long)(&p->event)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TRef),-1,-1,1,"event=",0,"/< Persistent reference to the event containing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BeamParticles */
static void G__setup_memvarBeamParticles(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_BeamParticles));
   { BeamParticles *p; p=(BeamParticles*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector),-1,-1,2,"mBeamHadron=",0,"/< Incident hadron beam");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector),-1,-1,2,"mBeamLepton=",0,"/< Incident lepton beam");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector),-1,-1,2,"mScatteredHadron=",0,"/< Scattered hadron beam");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector),-1,-1,2,"mScatteredLepton=",0,"/< Scattered lepton beam");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector),-1,-1,2,"mBoson=",0,"/< Exchanged boson");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::VirtualEvent */
static void G__setup_memvarerhiccLcLVirtualEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent));
   { erhic::VirtualEvent *p; p=(erhic::VirtualEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> > */
static void G__setup_memvarvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   { vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> > *p; p=(vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ParticleIdentifier */
static void G__setup_memvarParticleIdentifier(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_ParticleIdentifier));
   { ParticleIdentifier *p; p=(ParticleIdentifier*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mChargedCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mLeptonBeamPdgCode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mScatteredPdgCode=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventDis */
static void G__setup_memvarerhiccLcLEventDis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis));
   { erhic::EventDis *p; p=(erhic::EventDis*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"x=",0,"/< Bjorken scaling variable");
   G__memvar_setup((void*)((long)(&p->QSquared)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"QSquared=",0,"/< Q<sup>2</sup> calculated from scattered electron");
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"y=",0,"/< Inelasticity");
   G__memvar_setup((void*)((long)(&p->WSquared)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"WSquared=",0,"/< Invariant mass of the hadronic system");
   G__memvar_setup((void*)((long)(&p->nu)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"nu=",0,"/< Energy transfer from the electron");
   G__memvar_setup((void*)((long)(&p->yJB)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"yJB=",0,"/< y calculated via the Jacquet-Blondel method");
   G__memvar_setup((void*)((long)(&p->QSquaredJB)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"QSquaredJB=",0,"/< Q2 calculated via the Jacquet-Blondel method");
   G__memvar_setup((void*)((long)(&p->xJB)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xJB=",0,"/< x calculated via the Jacquet-Blondel method");
   G__memvar_setup((void*)((long)(&p->WSquaredJB)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"WSquaredJB=",0,"/< W2 calculated via the Jacquet-Blondel method");
   G__memvar_setup((void*)((long)(&p->yDA)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"yDA=",0,"/< y calculated via the double-angle method");
   G__memvar_setup((void*)((long)(&p->QSquaredDA)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"QSquaredDA=",0,"/< Q2 calculated via the double-angle method");
   G__memvar_setup((void*)((long)(&p->xDA)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xDA=",0,"/< x calculated via the double-angle method");
   G__memvar_setup((void*)((long)(&p->WSquaredDA)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"WSquaredDA=",0,"/< W2 calculated via the double-angle method");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::DisKinematics */
static void G__setup_memvarerhiccLcLDisKinematics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics));
   { erhic::DisKinematics *p; p=(erhic::DisKinematics*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mX)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"mX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mQ2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"mQ2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mW2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"mW2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNu)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"mNu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mY)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"mY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::KinematicsComputer */
static void G__setup_memvarerhiccLcLKinematicsComputer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLKinematicsComputer));
   { erhic::KinematicsComputer *p; p=(erhic::KinematicsComputer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LeptonKinematicsComputer */
static void G__setup_memvarerhiccLcLLeptonKinematicsComputer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer));
   { erhic::LeptonKinematicsComputer *p; p=(erhic::LeptonKinematicsComputer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),-1,-1,2,"mBeams=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::JacquetBlondelComputer */
static void G__setup_memvarerhiccLcLJacquetBlondelComputer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer));
   { erhic::JacquetBlondelComputer *p; p=(erhic::JacquetBlondelComputer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),-1,-1,2,"mEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),-1,-1,2,"mParticles=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::DoubleAngleComputer */
static void G__setup_memvarerhiccLcLDoubleAngleComputer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer));
   { erhic::DoubleAngleComputer *p; p=(erhic::DoubleAngleComputer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis),-1,-1,2,"mEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mHasChanged=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),-1,-1,2,"mParticles=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::VirtualEventFactory */
static void G__setup_memvarerhiccLcLVirtualEventFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory));
   { erhic::VirtualEventFactory *p; p=(erhic::VirtualEventFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventToDot */
static void G__setup_memvarEventToDot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_EventToDot));
   { EventToDot *p; p=(EventToDot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::Reader */
static void G__setup_memvarerhiccLcLReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLReader));
   { erhic::Reader *p; p=(erhic::Reader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC),-1,-1,1,"mEvent=",0,"/< The last event read");
   G__memvar_setup((void*)((long)(&p->mTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TTree),-1,-1,1,"mTree=",0,"/< The tree being read");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventDjangoh */
static void G__setup_memvarerhiccLcLEventDjangoh(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh));
   { erhic::EventDjangoh *p; p=(erhic::EventDjangoh*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nucleon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nucleon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IChannel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"IChannel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dprocess)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dprocess=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dstruckparton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dstruckparton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dpartontrck)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dpartontrck=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dY)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dQ2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dQ2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dX)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dW2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dW2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dNu)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dNu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueY)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueQ2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueQ2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueX)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueW2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueW2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueNu)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueNu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigTot)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"sigTot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigTotErr)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"sigTotErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->D)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F1NC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"F1NC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3NC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"F3NC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G1NC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"G1NC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G3NC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"G3NC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->A1NC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"A1NC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F1CC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"F1CC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3CC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"F3CC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G1CC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"G1CC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G5CC)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"G5CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventDpmjet */
static void G__setup_memvarerhiccLcLEventDpmjet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet));
   { erhic::EventDpmjet *p; p=(erhic::EventDpmjet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ievent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ievent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->I)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"I=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->process1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"process1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->process2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"process2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"IP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgtparton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgtparton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->prjparton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"prjparton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nucleon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nucleon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xtgtparton)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xtgtparton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xprjparton)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xprjparton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueW2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueW2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueNu)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueNu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueQ2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueQ2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueY)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtrueX)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dtrueX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->theta_Evt)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"theta_Evt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photonFlux)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"photonFlux=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventPythia */
static void G__setup_memvarerhiccLcLEventPythia(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia));
   { erhic::EventPythia *p; p=(erhic::EventPythia*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nucleon=",0,"/< PDG code of the hadron beam,");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"tgtparton=",0,"/< PDG code of the struck parton");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"beamparton=",0,"/< Parton interacting with the hadron");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"genevent=",0,"/< Trials required for this event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"xtgtparton=",0,"/< Momentum fraction taken by the");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"xbeamparton=",0,"/< Momentum fraction taken by the");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"thetabeamparton=",0,"/< Polar angle of the beam parton in");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"leptonphi=",0,"/< Azimuthal angle of the scattered");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"F1=",0,"/< Value used for radiative corrections");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"sigma_rad=",0,"/< Value used for radiative corrections");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"t_hat=",0,"/< Mandelstam t of the hard subprocess,");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"u_hat=",0,"/< Mandelstam u of the hard subprocess,");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"Q2_hat=",0,"/< Q<sup>2</sup> of the hard subprocess,");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"SigRadCor=",0,"/< Value used for radiative corrections");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"EBrems=",0,"/< Energy per radiative photon in the");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"photonflux=",0,"/< Flux factor, see VINT(319)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"trueY=",0,"/< Generated y of the event,");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"trueQ2=",0,"/< Generated Q<sup>2</sup> of the event,");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"trueX=",0,"/< Generated x of the event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"trueW2=",0,"/< Generated W<sup>2</sup> of the event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"trueNu=",0,"/< Generated nu of the event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"F2=",0,"/< Value used for radiative corrections");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"R=",0,"/< Value used for radiative corrections");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"pt2_hat=",0,"/< Squared p<sub>T</sub> of the hard");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"sHat=",0,"/< Mandelstam s of the hard subprocess,");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventGmcTrans */
static void G__setup_memvarerhiccLcLEventGmcTrans(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans));
   { erhic::EventGmcTrans *p; p=(erhic::EventGmcTrans*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mStruckQuark=",0,"/< Flavour of struck quark");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mQSquared=",0,"/< Negative squared four-momentum of");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mBjorkenX=",0,"/< Longitudinal momentum fraction in the");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mInelasticity=",0,"or mY?");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mWSquared=",0,"/< Invariant mass of the hadronic final state");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mNu=",0,"/< Energy of the exchanged boson in the hadron rest frame");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mS=",0,"/< Square of the centre of mass energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mZ=",0,"/< z of the produced hadron");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mHadronPt=",0,"/< pT of the produced hadron");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mLeptonTheta=",0,"/< Polar angle of the scattered lepton");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mLeptonPhi=",0,"/< Azimuthal angle of the scattered lepton");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mPhiSpin=",0,"/< Azimuthal angle of spin vector in gamma*-proton");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mPhiHadron=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mF1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mG1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mH1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mD1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mF1TPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mF1TPerp1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mF1TPerp12=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mH1Perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mH1Perp1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mH1Perp12=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutSiv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutWtSiv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutSivAllQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutWtSivAllQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutSivPiDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutWtSivPiDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutCol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutWtCol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutTw3Col=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutWtTw3Col=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutColAllQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mAutWtColAllQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mXUnpolarised=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mXSivers=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,2,"mXCollins=",0,"/< Cross sections");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventMCFilterABC */
static void G__setup_memvarerhiccLcLEventMCFilterABC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMCFilterABC));
   { erhic::EventMCFilterABC *p; p=(erhic::EventMCFilterABC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventMilou */
static void G__setup_memvarerhiccLcLEventMilou(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou));
   { erhic::EventMilou *p; p=(erhic::EventMilou*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->radcorr)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"radcorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->weight)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"weight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trueX)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trueQ2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueQ2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trueY)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trueT)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->truePhi)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"truePhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phibelgen)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"phibelgen=",0,"/> the azimuthal angle between the production");
   G__memvar_setup((void*)((long)(&p->phibelres)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"phibelres=",0,"/> the resolution of the previous angle");
   G__memvar_setup((void*)((long)(&p->phibelrec)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"phibelrec=",0,"/> the reconstructed phi angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventPepsi */
static void G__setup_memvarerhiccLcLEventPepsi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi));
   { erhic::EventPepsi *p; p=(erhic::EventPepsi*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nucleon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nucleon=",0,"/< PDG code of the hadron beam");
   G__memvar_setup((void*)((long)(&p->struckparton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"struckparton=",0,"/< Parton hit in the target LST(25)");
   G__memvar_setup((void*)((long)(&p->partontrck)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"partontrck=",0,"/< Number of parton track LST(26)");
   G__memvar_setup((void*)((long)(&p->genevent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"genevent=",0,"/< Trials required for this event");
   G__memvar_setup((void*)((long)(&p->subprocess)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"subprocess=",0,"/< PEPSI subprocess LST(23)");
   G__memvar_setup((void*)((long)(&p->trueY)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueY=",0,"/< Generated y of the event");
   G__memvar_setup((void*)((long)(&p->trueQ2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueQ2=",0,"/< Generated Q<sup>2</sup> of the event");
   G__memvar_setup((void*)((long)(&p->trueX)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueX=",0,"/< Generated x of the event");
   G__memvar_setup((void*)((long)(&p->trueW2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueW2=",0,"/< Generated W<sup>2</sup> of the event");
   G__memvar_setup((void*)((long)(&p->trueNu)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"trueNu=",0,"/< Generated nu of the event");
   G__memvar_setup((void*)((long)(&p->FixedWeight)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"FixedWeight=",0,"/< Weight calculated from generation limits");
   G__memvar_setup((void*)((long)(&p->Weight)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"Weight=",0,"/< Total weight including everything");
   G__memvar_setup((void*)((long)(&p->dxsec)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"dxsec=",0,"/< Cross section included in the weight");
   G__memvar_setup((void*)((long)(&p->ExtraWeight)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"ExtraWeight=",0,"/< PEPSI total cross section in pb from");
   G__memvar_setup((void*)((long)(&p->Dilute)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"Dilute=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->F1)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"F1=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->F2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"F2=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->A1)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"A1=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->A2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"A2=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->R)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"R=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->DePol)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"DePol=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->D)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"D=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"Eta=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->Eps)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"Eps=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->Chi)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"Chi=",0,"/< True variables needed to calculate g<sub>1</sub>");
   G__memvar_setup((void*)((long)(&p->gendilut)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"gendilut=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->genF1)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"genF1=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->genF2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"genF2=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->genA1)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"genA1=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->genA2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"genA2=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->genR)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"genR=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->genDepol)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"genDepol=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->gend)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"gend=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->geneta)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"geneta=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->geneps)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"geneps=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->genchi)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"genchi=",0,"/< Needed to calculate g1");
   G__memvar_setup((void*)((long)(&p->SigCorr)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"SigCorr=",0,"/< Needed in the radiative correction code");
   G__memvar_setup((void*)((long)(&p->radgamEnucl)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"radgamEnucl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventRapgap */
static void G__setup_memvarerhiccLcLEventRapgap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap));
   { erhic::EventRapgap *p; p=(erhic::EventRapgap*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->idir)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"idir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->idisdif)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"idisdif=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->genevent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"genevent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cs)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"cs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigma_cs)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"sigma_cs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->s)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"s=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->q2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"q2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xgam)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xgam=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xpr)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"xpr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pt_h)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"Pt_h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"t=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_pom)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"x_pom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sHat2)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"sHat2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x1)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"x1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi1)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"phi1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt2_hat)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"pt2_hat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sHat)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"sHat=",0,"Partonic centre-of-mass energy");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LogReader */
static void G__setup_memvarerhiccLcLLogReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader));
   { erhic::LogReader *p; p=(erhic::LogReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LogReaderPythia */
static void G__setup_memvarerhiccLcLLogReaderPythia(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia));
   { erhic::LogReaderPythia *p; p=(erhic::LogReaderPythia*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"crossSection_=",0,"/> Total cross section in microbarns");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"nEvents_=",0,"/> Total number of events generated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LogReaderPepsi */
static void G__setup_memvarerhiccLcLLogReaderPepsi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi));
   { erhic::LogReaderPepsi *p; p=(erhic::LogReaderPepsi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"crossSection_=",0,"/> Total cross section in microbarns");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"nEvents_=",0,"/> Total number of events generated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LogReaderDjangoh */
static void G__setup_memvarerhiccLcLLogReaderDjangoh(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh));
   { erhic::LogReaderDjangoh *p; p=(erhic::LogReaderDjangoh*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"crossSection_=",0,"/> Total cross section in microbarns");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"nEvents_=",0,"/> Total number of events generated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LogReaderMilou */
static void G__setup_memvarerhiccLcLLogReaderMilou(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou));
   { erhic::LogReaderMilou *p; p=(erhic::LogReaderMilou*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"crossSection_=",0,"/> Total cross section in nb");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"crossSectionError_=",0,"/> Cross section error in nb");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"nEvents_=",0,"/> Total number of events generated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LogReaderGmcTrans */
static void G__setup_memvarerhiccLcLLogReaderGmcTrans(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans));
   { erhic::LogReaderGmcTrans *p; p=(erhic::LogReaderGmcTrans*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"mNEvents=",0,"/< Number of generated events.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TObjString),-1,-1,2,"mCrossSection=",0,"/< Total cross section in microbarns.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::LogReaderFactory */
static void G__setup_memvarerhiccLcLLogReaderFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory));
   { erhic::LogReaderFactory *p; p=(erhic::LogReaderFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR),G__defined_typename("Map"),-1,2,"prototypes_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::FileType */
static void G__setup_memvarerhiccLcLFileType(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType));
   { erhic::FileType *p; p=(erhic::FileType*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::FileFactory */
static void G__setup_memvarerhiccLcLFileFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory));
   { erhic::FileFactory *p; p=(erhic::FileFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR),G__defined_typename("Map"),-1,2,"prototypes_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::Forester */
static void G__setup_memvarerhiccLcLForester(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester));
   { erhic::Forester *p; p=(erhic::Forester*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mQuit=",0,"/< Quit status. Set to true once EoF or max events reached");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mVerbose=",0,"/< Verbosity flag");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TTree),-1,-1,2,"mTree=",0,"!< Output TTree, owned by mRootFile");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent),-1,-1,2,"mEvent=",0,"!< Stores event branch address");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType),-1,-1,2,"mFile=",0,"!< File type information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TFile),-1,-1,2,"mRootFile=",0,"!< Pointer to output ROOT file");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"mMaxNEvents=",0,"/< Maximum number of events to process");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"mInterval=",0,"/< Event interval between printing status messages");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,2,"mTextFile=",0,"!< Input text file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,2,"mInputName=",0,"/< Name of the input text file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,2,"mOutputName=",0,"/< Name of the output ROOT file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,2,"mTreeName=",0,"/< Name of the output TTree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,2,"mBranchName=",0,"/< Name of the event TBranch");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,2,"mLine=",0,"/< Stores the latest text line read from the input file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus),-1,-1,2,"mStatus=",0,"/< Forester status information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory),-1,-1,2,"mFactory=",0,"!< Pointer to the event-builder object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::Forester::Status */
static void G__setup_memvarerhiccLcLForestercLcLStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus));
   { erhic::Forester::Status *p; p=(erhic::Forester::Status*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,2,"mStartTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,2,"mEndTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"mNEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"mNParticles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__erhicDictLN_TStopwatch),-1,-1,2,"mTimer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventFromAsciiFactory<erhic::EventPepsi> */
static void G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR));
   { erhic::EventFromAsciiFactory<erhic::EventPepsi> *p; p=(erhic::EventFromAsciiFactory<erhic::EventPepsi>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mInput)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,1,"mInput=",0,"!");
   G__memvar_setup((void*)((long)(&p->mLine)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,1,"mLine=",0,"!");
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLEventPepsigR),-1,-1,1,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventFromAsciiFactory<erhic::EventMilou> */
static void G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR));
   { erhic::EventFromAsciiFactory<erhic::EventMilou> *p; p=(erhic::EventFromAsciiFactory<erhic::EventMilou>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mInput)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,1,"mInput=",0,"!");
   G__memvar_setup((void*)((long)(&p->mLine)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,1,"mLine=",0,"!");
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLEventMilougR),-1,-1,1,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventFromAsciiFactory<erhic::EventRapgap> */
static void G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR));
   { erhic::EventFromAsciiFactory<erhic::EventRapgap> *p; p=(erhic::EventFromAsciiFactory<erhic::EventRapgap>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mInput)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,1,"mInput=",0,"!");
   G__memvar_setup((void*)((long)(&p->mLine)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,1,"mLine=",0,"!");
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLEventRapgapgR),-1,-1,1,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventFromAsciiFactory<erhic::EventDjangoh> */
static void G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR));
   { erhic::EventFromAsciiFactory<erhic::EventDjangoh> *p; p=(erhic::EventFromAsciiFactory<erhic::EventDjangoh>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mInput)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,1,"mInput=",0,"!");
   G__memvar_setup((void*)((long)(&p->mLine)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,1,"mLine=",0,"!");
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLEventDjangohgR),-1,-1,1,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventFromAsciiFactory<erhic::EventDpmjet> */
static void G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR));
   { erhic::EventFromAsciiFactory<erhic::EventDpmjet> *p; p=(erhic::EventFromAsciiFactory<erhic::EventDpmjet>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mInput)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,1,"mInput=",0,"!");
   G__memvar_setup((void*)((long)(&p->mLine)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,1,"mLine=",0,"!");
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLEventDpmjetgR),-1,-1,1,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventFromAsciiFactory<erhic::EventPythia> */
static void G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR));
   { erhic::EventFromAsciiFactory<erhic::EventPythia> *p; p=(erhic::EventFromAsciiFactory<erhic::EventPythia>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mInput)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,1,"mInput=",0,"!");
   G__memvar_setup((void*)((long)(&p->mLine)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,1,"mLine=",0,"!");
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLEventPythiagR),-1,-1,1,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::EventFromAsciiFactory<erhic::EventGmcTrans> */
static void G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR));
   { erhic::EventFromAsciiFactory<erhic::EventGmcTrans> *p; p=(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mInput)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,1,"mInput=",0,"!");
   G__memvar_setup((void*)((long)(&p->mLine)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_string),-1,-1,1,"mLine=",0,"!");
   G__memvar_setup((void*)((long)(&p->mEvent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLEventGmcTransgR),-1,-1,1,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::File<erhic::EventPythia> */
static void G__setup_memvarerhiccLcLFilelEerhiccLcLEventPythiagR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR));
   { erhic::File<erhic::EventPythia> *p; p=(erhic::File<erhic::EventPythia>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia),-1,-1,2,"t_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::File<erhic::EventMilou> */
static void G__setup_memvarerhiccLcLFilelEerhiccLcLEventMilougR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR));
   { erhic::File<erhic::EventMilou> *p; p=(erhic::File<erhic::EventMilou>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou),-1,-1,2,"t_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::File<erhic::EventPepsi> */
static void G__setup_memvarerhiccLcLFilelEerhiccLcLEventPepsigR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR));
   { erhic::File<erhic::EventPepsi> *p; p=(erhic::File<erhic::EventPepsi>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi),-1,-1,2,"t_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::File<erhic::EventRapgap> */
static void G__setup_memvarerhiccLcLFilelEerhiccLcLEventRapgapgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR));
   { erhic::File<erhic::EventRapgap> *p; p=(erhic::File<erhic::EventRapgap>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap),-1,-1,2,"t_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::File<erhic::EventDjangoh> */
static void G__setup_memvarerhiccLcLFilelEerhiccLcLEventDjangohgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR));
   { erhic::File<erhic::EventDjangoh> *p; p=(erhic::File<erhic::EventDjangoh>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh),-1,-1,2,"t_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::File<erhic::EventDpmjet> */
static void G__setup_memvarerhiccLcLFilelEerhiccLcLEventDpmjetgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR));
   { erhic::File<erhic::EventDpmjet> *p; p=(erhic::File<erhic::EventDpmjet>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet),-1,-1,2,"t_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* erhic::File<erhic::EventGmcTrans> */
static void G__setup_memvarerhiccLcLFilelEerhiccLcLEventGmcTransgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR));
   { erhic::File<erhic::EventGmcTrans> *p; p=(erhic::File<erhic::EventGmcTrans>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans),-1,-1,2,"t_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<erhic::ParticleMC,allocator<erhic::ParticleMC> > */
static void G__setup_memvarvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   { vector<erhic::ParticleMC,allocator<erhic::ParticleMC> > *p; p=(vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> > */
static void G__setup_memvarvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   { vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> > *p; p=(vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> > */
static void G__setup_memvarvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   { vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> > *p; p=(vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* auto_ptr<erhic::Pid> */
static void G__setup_memvarauto_ptrlEerhiccLcLPidgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR));
   { auto_ptr<erhic::Pid> *p; p=(auto_ptr<erhic::Pid>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid),-1,-1,4,"ptr=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarerhicDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncerhic(void) {
   /* erhic */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhic));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLPid(void) {
   /* erhic::Pid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid));
   G__memfunc_setup("InvalidCode",1090,G__erhicDict_356_0_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&erhic::Pid::InvalidCode) ), 0);
   G__memfunc_setup("Pid",285,G__erhicDict_356_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 'Pid::InvalidCode()' pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Code",379,G__erhicDict_356_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__erhicDict_356_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Info",396,G__erhicDict_356_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TParticlePDG), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator Int_t",1418,G__erhicDict_356_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__erhicDict_356_0_7, 103, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__erhicDict_356_0_8, 103, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__erhicDict_356_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__erhicDict_356_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<=",997,G__erhicDict_356_0_11, 103, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>=",999,G__erhicDict_356_0_12, 103, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_356_0_13, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::Pid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_356_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Pid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_356_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::Pid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_356_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::Pid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_356_0_17, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_356_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_356_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_356_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_356_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Pid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_356_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Pid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_356_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Pid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_356_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Pid::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Pid", 285, G__erhicDict_356_0_25, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 1, 1, 1, 0, "u 'erhic::Pid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pid", 411, G__erhicDict_356_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_356_0_27, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 1, 1, 1, 1, 0, "u 'erhic::Pid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLVirtualParticle(void) {
   /* erhic::VirtualParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle));
   G__memfunc_setup("Id",173,G__erhicDict_357_0_1, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Get4Vector",967,G__erhicDict_357_0_2, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPx",488,G__erhicDict_357_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPy",489,G__erhicDict_357_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPz",490,G__erhicDict_357_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetE",357,G__erhicDict_357_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetP",368,G__erhicDict_357_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetM",365,G__erhicDict_357_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPt",484,G__erhicDict_357_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetTheta",790,G__erhicDict_357_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPhi",577,G__erhicDict_357_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRapidity",1126,G__erhicDict_357_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetEta",570,G__erhicDict_357_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetVertex",926,G__erhicDict_357_0_14, 117, G__get_linked_tagnum(&G__erhicDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetStatus",932,G__erhicDict_357_0_15, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetParentIndex",1410,G__erhicDict_357_0_16, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetVertex",938,G__erhicDict_357_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Set4Vector",979,G__erhicDict_357_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__erhicDict_357_0_19, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::VirtualParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_357_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_357_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::VirtualParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_357_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::VirtualParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_357_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_357_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_357_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::VirtualParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_357_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_357_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::VirtualParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~VirtualParticle", 1689, G__erhicDict_357_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_357_0_32, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 1, 1, 1, 1, 0, "u 'erhic::VirtualParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventMC(void) {
   /* erhic::EventMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC));
   G__memfunc_setup("GetN",366,G__erhicDict_358_0_2, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProcess",1023,G__erhicDict_358_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNTracks",982,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrack",789,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - u", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrack",789,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - u", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeamLepton",999,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeamHadron",977,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExchangeBoson",1316,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScatteredLepton",1553,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Parse",507,G__erhicDict_358_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddLast",669,G__erhicDict_358_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'erhic::ParticleMC' - 0 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__erhicDict_358_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProcess",1035,G__erhicDict_358_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - code", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetN",378,G__erhicDict_358_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNTracks",994,G__erhicDict_358_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetELeptonInNuclearFrame",2383,G__erhicDict_358_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEScatteredInNuclearFrame",2684,G__erhicDict_358_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalState",1003,G__erhicDict_358_0_20, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >' 'erhic::VirtualEvent::ParticlePtrList' 1 - particles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HadronicFinalState",1811,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >' 'erhic::VirtualEvent::ParticlePtrList' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalStateMomentum",1853,G__erhicDict_358_0_22, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HadronicFinalStateMomentum",2661,G__erhicDict_358_0_23, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinalStateCharge",1589,G__erhicDict_358_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracks",904,G__erhicDict_358_0_25, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_358_0_26, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_358_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_358_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_358_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_358_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_358_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_358_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_358_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_358_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventMC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventMC", 784, G__erhicDict_358_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLParticleMC(void) {
   /* erhic::ParticleMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC));
   G__memfunc_setup("ParticleMC",964,G__erhicDict_359_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 1, 5, 1, 0, "u 'string' - 11 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIndex",792,G__erhicDict_359_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStatus",932,(G__InterfaceMethod) NULL,114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParentIndex",1410,(G__InterfaceMethod) NULL,114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParent",906,G__erhicDict_359_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChild1Index",1325,G__erhicDict_359_0_7, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChildNIndex",1354,G__erhicDict_359_0_8, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNChildren",1175,G__erhicDict_359_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChild",772,G__erhicDict_359_0_10, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 1, 1, 1, 9, "r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasChild",768,G__erhicDict_359_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPx",488,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPy",489,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPz",490,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetM",365,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPt",484,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVertex",926,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParentId",1079,G__erhicDict_359_0_18, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetP",368,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTheta",790,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhi",577,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRapidity",1126,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEta",570,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ",378,G__erhicDict_359_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXFeynman",1094,G__erhicDict_359_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetThetaVsGamma",1474,G__erhicDict_359_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtVsGamma",1168,G__erhicDict_359_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,G__erhicDict_359_0_28, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvent",814,G__erhicDict_359_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'erhic::EventMC' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get4Vector",967,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PxPyPzE",672,G__erhicDict_359_0_31, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Get4VectorInHadronBosonFrame",2758,G__erhicDict_359_0_32, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetE",357,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetE",369,G__erhicDict_359_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetM",377,G__erhicDict_359_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetP",380,G__erhicDict_359_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - momentum", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPt",496,G__erhicDict_359_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - momentum", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPz",502,G__erhicDict_359_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - momentum", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPhi",589,G__erhicDict_359_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTheta",802,G__erhicDict_359_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStatus",944,G__erhicDict_359_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - status", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Id",173,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPdgCode",950,G__erhicDict_359_0_43, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeDerivedQuantities",2503,G__erhicDict_359_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeEventDependentQuantities",3229,G__erhicDict_359_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'erhic::EventMC' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIndex",804,G__erhicDict_359_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStatus",944,G__erhicDict_359_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetId",473,G__erhicDict_359_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParentIndex",1422,G__erhicDict_359_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChild1Index",1337,G__erhicDict_359_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChildNIndex",1366,G__erhicDict_359_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set4Vector",979,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVertex",938,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParentId",1091,G__erhicDict_359_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_359_0_55, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::ParticleMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_359_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::ParticleMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_359_0_57, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::ParticleMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_359_0_58, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::ParticleMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_359_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_359_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::ParticleMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_359_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::ParticleMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_359_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::ParticleMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_359_0_66, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::ParticleMC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleMC", 964, G__erhicDict_359_0_67, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 1, 1, 1, 0, "u 'erhic::ParticleMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleMC", 1090, G__erhicDict_359_0_68, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_359_0_69, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 1, 1, 1, 1, 0, "u 'erhic::ParticleMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBeamParticles(void) {
   /* BeamParticles */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_BeamParticles));
   G__memfunc_setup("BeamParticles",1308,G__erhicDict_360_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_BeamParticles), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamParticles",1308,G__erhicDict_360_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_BeamParticles), -1, 0, 5, 1, 1, 0, 
"u 'TLorentzVector' - 11 - hadronBeam u 'TLorentzVector' - 11 - leptonBeam "
"u 'TLorentzVector' - 11 - scatteredHadron u 'TLorentzVector' - 11 - scatteredLepton "
"u 'TLorentzVector' - 11 - exchangedBoson", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__erhicDict_360_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamHadron",1277,G__erhicDict_360_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamLepton",1299,G__erhicDict_360_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScatteredHadron",1831,G__erhicDict_360_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScatteredLepton",1853,G__erhicDict_360_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoson",813,G__erhicDict_360_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamHadron",977,G__erhicDict_360_0_9, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamLepton",999,G__erhicDict_360_0_10, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScatteredHadron",1819,G__erhicDict_360_0_11, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScatteredLepton",1553,G__erhicDict_360_0_12, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBoson",801,G__erhicDict_360_0_13, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_360_0_14, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BeamParticles::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_360_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BeamParticles::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_360_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BeamParticles::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_360_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BeamParticles::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_360_0_18, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_360_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_360_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_360_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_360_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BeamParticles::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_360_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BeamParticles::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_360_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BeamParticles::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_360_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BeamParticles::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BeamParticles", 1308, G__erhicDict_360_0_26, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_BeamParticles), -1, 0, 1, 1, 1, 0, "u 'BeamParticles' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BeamParticles", 1434, G__erhicDict_360_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_360_0_28, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_BeamParticles), -1, 1, 1, 1, 1, 0, "u 'BeamParticles' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLVirtualEvent(void) {
   /* erhic::VirtualEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent));
   G__memfunc_setup("GetTrack",789,G__erhicDict_361_0_1, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetTrack",789,G__erhicDict_361_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNTracks",982,G__erhicDict_361_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("HadronicFinalState",1811,G__erhicDict_361_0_4, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >' 'erhic::VirtualEvent::ParticlePtrList' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_361_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::VirtualEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_361_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_361_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::VirtualEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_361_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::VirtualEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_361_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_361_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_361_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::VirtualEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_361_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_361_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::VirtualEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~VirtualEvent", 1383, G__erhicDict_361_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_361_0_18, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent), -1, 1, 1, 1, 1, 0, "u 'erhic::VirtualEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR(void) {
   /* vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR));
   G__memfunc_setup("at",213,G__erhicDict_363_0_1, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__erhicDict_363_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__erhicDict_363_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__erhicDict_363_0_4, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__erhicDict_363_0_5, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__erhicDict_363_0_6, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__erhicDict_363_0_7, 107, -1, G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__erhicDict_363_0_8, 107, -1, G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_363_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_363_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - sz U 'erhic::VirtualParticle' - 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__erhicDict_363_0_11, 107, -1, G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__erhicDict_363_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_363_0_13, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_363_0_14, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), G__defined_typename("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >",7594,G__erhicDict_363_0_15, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >",7594,G__erhicDict_363_0_16, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - n U 'erhic::VirtualParticle' - 51 '(const erhic::VirtualParticle*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >",7594,G__erhicDict_363_0_17, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >",7594,G__erhicDict_363_0_18, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator' 10 - first u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__erhicDict_363_0_19, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__erhicDict_363_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__erhicDict_363_0_21, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__erhicDict_363_0_22, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__erhicDict_363_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'erhic::VirtualParticle' - 51 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__erhicDict_363_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_363_0_25, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' - 0 - position U 'erhic::VirtualParticle' - 51 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_363_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' - 0 - position u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator' 10 - first "
"u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_363_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' - 0 - position k - 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::size_type' 0 - n "
"U 'erhic::VirtualParticle' - 51 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__erhicDict_363_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_363_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_363_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' - 0 - first u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__erhicDict_363_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >", 7720, G__erhicDict_363_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleIdentifier(void) {
   /* ParticleIdentifier */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_ParticleIdentifier));
   G__memfunc_setup("ParticleIdentifier",1847,G__erhicDict_366_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_ParticleIdentifier), -1, 0, 1, 1, 1, 0, "i - - 10 '~unsigned(0)/2' leptonPdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBeamLepton",1219,G__erhicDict_366_0_2, 103, -1, -1, 0, 1, 1, 1, 8, "u 'erhic::VirtualParticle' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isBeamNucleon",1317,G__erhicDict_366_0_3, 103, -1, -1, 0, 1, 1, 1, 8, "u 'erhic::VirtualParticle' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isScatteredLepton",1773,G__erhicDict_366_0_4, 103, -1, -1, 0, 1, 1, 1, 8, "u 'erhic::VirtualParticle' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsVirtualPhoton",1563,G__erhicDict_366_0_5, 103, -1, -1, 0, 1, 1, 1, 8, "u 'erhic::VirtualParticle' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SkipParticle",1227,G__erhicDict_366_0_6, 103, -1, -1, 0, 1, 1, 1, 8, "u 'erhic::VirtualParticle' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLeptonBeamPdgCode",1961,G__erhicDict_366_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeptonBeamPdgCode",1949,G__erhicDict_366_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChargedCurrent",1725,G__erhicDict_366_0_9, 103, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isChargedCurrent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IdentifyBeams",1316,G__erhicDict_366_0_10, 103, -1, -1, 0, 2, 3, 1, 0, 
"u 'erhic::VirtualEvent' - 11 - - u 'BeamParticles' - 1 - -", (char*)NULL, (void*) G__func2void( (bool (*)(const erhic::VirtualEvent&, BeamParticles&))(&ParticleIdentifier::IdentifyBeams) ), 0);
   G__memfunc_setup("IdentifyBeams",1316,G__erhicDict_366_0_11, 103, -1, -1, 0, 2, 3, 1, 0, 
"u 'erhic::VirtualEvent' - 11 - - u 'vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >' 'vector<const erhic::VirtualParticle*>' 1 - -", (char*)NULL, (void*) G__func2void( (bool (*)(const erhic::VirtualEvent&, vector<const erhic::VirtualParticle*>&))(&ParticleIdentifier::IdentifyBeams) ), 0);
   G__memfunc_setup("DetermineScatteredType",2270,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleIdentifier", 1847, G__erhicDict_366_0_13, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_ParticleIdentifier), -1, 0, 1, 1, 1, 0, "u 'ParticleIdentifier' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleIdentifier", 1973, G__erhicDict_366_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_366_0_15, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_ParticleIdentifier), -1, 1, 1, 1, 1, 0, "u 'ParticleIdentifier' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventDis(void) {
   /* erhic::EventDis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis));
   G__memfunc_setup("operator=",937,G__erhicDict_367_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDis), -1, 1, 1, 1, 1, 0, "u 'erhic::EventDis' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__erhicDict_367_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQ2",419,G__erhicDict_367_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetY",377,G__erhicDict_367_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYPlus",797,G__erhicDict_367_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetW2",425,G__erhicDict_367_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNu",483,G__erhicDict_367_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXDoubleAngle",1466,G__erhicDict_367_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQ2DoubleAngle",1509,G__erhicDict_367_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYDoubleAngle",1467,G__erhicDict_367_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetW2DoubleAngle",1515,G__erhicDict_367_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXJacquetBlondel",1797,G__erhicDict_367_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQ2JacquetBlondel",1840,G__erhicDict_367_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYJacquetBlondel",1798,G__erhicDict_367_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetW2JacquetBlondel",1846,G__erhicDict_367_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLeptonKinematics",1958,G__erhicDict_367_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'erhic::DisKinematics' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJacquetBlondelKinematics",2753,G__erhicDict_367_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'erhic::DisKinematics' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDoubleAngleKinematics",2422,G__erhicDict_367_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'erhic::DisKinematics' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeamLepton",999,G__erhicDict_367_0_21, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("BeamHadron",977,G__erhicDict_367_0_22, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ExchangeBoson",1316,G__erhicDict_367_0_23, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ScatteredLepton",1553,G__erhicDict_367_0_24, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CopyKinematics",1443,G__erhicDict_367_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'erhic::EventDis' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_367_0_26, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventDis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_367_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_367_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventDis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_367_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventDis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_367_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_367_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_367_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventDis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_367_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_367_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventDis::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventDis", 928, G__erhicDict_367_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLDisKinematics(void) {
   /* erhic::DisKinematics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics));
   G__memfunc_setup("DisKinematics",1320,G__erhicDict_368_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisKinematics",1320,G__erhicDict_368_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics), -1, 0, 5, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - nu d - - 0 - Q2 "
"d - - 0 - W2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_368_0_3, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::DisKinematics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_368_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::DisKinematics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_368_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::DisKinematics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_368_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::DisKinematics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_368_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_368_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::DisKinematics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_368_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::DisKinematics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_368_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::DisKinematics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_368_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::DisKinematics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DisKinematics", 1320, G__erhicDict_368_0_15, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics), -1, 0, 1, 1, 1, 0, "u 'erhic::DisKinematics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DisKinematics", 1446, G__erhicDict_368_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_368_0_17, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics), -1, 1, 1, 1, 1, 0, "u 'erhic::DisKinematics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLKinematicsComputer(void) {
   /* erhic::KinematicsComputer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLKinematicsComputer));
   G__memfunc_setup("Calculate",910,G__erhicDict_369_0_1, 85, G__get_linked_tagnum(&G__erhicDictLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__erhicDict_369_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::KinematicsComputer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_369_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::KinematicsComputer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_369_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::KinematicsComputer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_369_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::KinematicsComputer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_369_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_369_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_369_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_369_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_369_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::KinematicsComputer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_369_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::KinematicsComputer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_369_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::KinematicsComputer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_369_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::KinematicsComputer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KinematicsComputer", 2005, G__erhicDict_369_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_369_0_15, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLKinematicsComputer), -1, 1, 1, 1, 1, 0, "u 'erhic::KinematicsComputer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLeptonKinematicsComputer(void) {
   /* erhic::LeptonKinematicsComputer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer));
   G__memfunc_setup("LeptonKinematicsComputer",2505,G__erhicDict_370_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer), -1, 0, 1, 5, 1, 0, "u 'erhic::EventDis' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_370_0_3, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LeptonKinematicsComputer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_370_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LeptonKinematicsComputer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_370_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LeptonKinematicsComputer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_370_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LeptonKinematicsComputer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_370_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_370_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LeptonKinematicsComputer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_370_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LeptonKinematicsComputer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_370_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LeptonKinematicsComputer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_370_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LeptonKinematicsComputer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LeptonKinematicsComputer", 2505, G__erhicDict_370_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer), -1, 0, 1, 1, 1, 0, "u 'erhic::LeptonKinematicsComputer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LeptonKinematicsComputer", 2631, G__erhicDict_370_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_370_0_17, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer), -1, 1, 1, 1, 1, 0, "u 'erhic::LeptonKinematicsComputer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLJacquetBlondelComputer(void) {
   /* erhic::JacquetBlondelComputer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer));
   G__memfunc_setup("JacquetBlondelComputer",2268,G__erhicDict_371_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer), -1, 0, 1, 5, 1, 0, "u 'erhic::EventDis' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeY",822,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeQSquared",1539,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeX",821,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_371_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::JacquetBlondelComputer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_371_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::JacquetBlondelComputer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_371_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::JacquetBlondelComputer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_371_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::JacquetBlondelComputer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_371_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_371_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::JacquetBlondelComputer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_371_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::JacquetBlondelComputer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_371_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::JacquetBlondelComputer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_371_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::JacquetBlondelComputer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("JacquetBlondelComputer", 2268, G__erhicDict_371_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer), -1, 0, 1, 1, 1, 0, "u 'erhic::JacquetBlondelComputer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JacquetBlondelComputer", 2394, G__erhicDict_371_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLDoubleAngleComputer(void) {
   /* erhic::DoubleAngleComputer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer));
   G__memfunc_setup("DoubleAngleComputer",1937,G__erhicDict_372_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer), -1, 0, 1, 5, 1, 0, "u 'erhic::EventDis' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDisKinematics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeQuarkAngle",1736,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeY",822,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeQSquared",1539,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeX",821,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_372_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::DoubleAngleComputer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_372_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::DoubleAngleComputer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_372_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::DoubleAngleComputer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_372_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::DoubleAngleComputer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_372_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_372_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::DoubleAngleComputer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_372_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::DoubleAngleComputer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_372_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::DoubleAngleComputer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_372_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::DoubleAngleComputer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DoubleAngleComputer", 1937, G__erhicDict_372_0_19, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLDoubleAngleComputer), -1, 0, 1, 1, 1, 0, "u 'erhic::DoubleAngleComputer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DoubleAngleComputer", 2063, G__erhicDict_372_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLVirtualEventFactory(void) {
   /* erhic::VirtualEventFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory));
   G__memfunc_setup("Create",596,G__erhicDict_388_0_1, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetEvBufferPtr",1387,G__erhicDict_388_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,G__erhicDict_388_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Branch",590,G__erhicDict_388_0_4, 85, G__get_linked_tagnum(&G__erhicDictLN_TBranch), -1, 0, 2, 1, 1, 0, 
"u 'TTree' - 1 - - u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,G__erhicDict_388_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBranch' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_388_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::VirtualEventFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_388_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualEventFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_388_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::VirtualEventFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_388_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::VirtualEventFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_388_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_388_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualEventFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_388_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::VirtualEventFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_388_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::VirtualEventFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_388_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::VirtualEventFactory::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~VirtualEventFactory", 2111, G__erhicDict_388_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_388_0_19, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory), -1, 1, 1, 1, 1, 0, "u 'erhic::VirtualEventFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventToDot(void) {
   /* EventToDot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_EventToDot));
   G__memfunc_setup("Generate",811,G__erhicDict_389_0_1, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'erhic::EventMC' - 11 - - u 'string' - 11 - outputName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_389_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventToDot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_389_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventToDot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_389_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventToDot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_389_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventToDot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_389_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_389_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_389_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_389_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_389_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventToDot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_389_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventToDot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_389_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventToDot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_389_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventToDot::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("EventToDot", 1004, G__erhicDict_389_0_14, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_EventToDot), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("EventToDot", 1004, G__erhicDict_389_0_15, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_EventToDot), -1, 0, 1, 1, 1, 0, "u 'EventToDot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventToDot", 1130, G__erhicDict_389_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_389_0_17, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_EventToDot), -1, 1, 1, 1, 1, 0, "u 'EventToDot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLReader(void) {
   /* erhic::Reader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLReader));
   G__memfunc_setup("Reader",595,G__erhicDict_392_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLReader), -1, 0, 1, 5, 1, 0, "u 'string' - 11 '\"EICTree\"' treeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__erhicDict_392_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__erhicDict_392_0_3, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__erhicDict_392_0_4, 85, G__get_linked_tagnum(&G__erhicDictLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_392_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::Reader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_392_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Reader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_392_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::Reader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_392_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::Reader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_392_0_9, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_392_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_392_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_392_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_392_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Reader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_392_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Reader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_392_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Reader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_392_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Reader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Reader", 595, G__erhicDict_392_0_17, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLReader), -1, 0, 1, 1, 1, 0, "u 'erhic::Reader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Reader", 721, G__erhicDict_392_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_392_0_19, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLReader), -1, 1, 1, 1, 1, 0, "u 'erhic::Reader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventDjangoh(void) {
   /* erhic::EventDjangoh */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh));
   G__memfunc_setup("EventDjangoh",1213,G__erhicDict_393_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExchangeBoson",1316,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScatteredLepton",1553,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_393_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventDjangoh::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_393_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDjangoh::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_393_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventDjangoh::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_393_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventDjangoh::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_393_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_393_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDjangoh::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_393_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventDjangoh::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_393_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDjangoh::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_393_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventDjangoh::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventDjangoh", 1339, G__erhicDict_393_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventDpmjet(void) {
   /* erhic::EventDpmjet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet));
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_394_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventDpmjet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_394_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDpmjet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_394_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventDpmjet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_394_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventDpmjet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_394_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_394_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDpmjet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_394_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventDpmjet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_394_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventDpmjet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_394_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventDpmjet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventDpmjet", 1252, G__erhicDict_394_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventPythia(void) {
   /* erhic::EventPythia */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia));
   G__memfunc_setup("EventPythia",1137,G__erhicDict_687_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia), -1, 0, 1, 5, 1, 0, "u 'string' - 11 '\"\"' str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNucleon",1024,G__erhicDict_687_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTargetParton",1543,G__erhicDict_687_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBeamParton",1301,G__erhicDict_687_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGenEvent",1096,G__erhicDict_687_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTargetPartonX",1631,G__erhicDict_687_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xB", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBeamPartonX",1389,G__erhicDict_687_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xB", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBeamPartonTheta",1803,G__erhicDict_687_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - radians", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLeptonPhi",1215,G__erhicDict_687_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - radians", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetF1",419,G__erhicDict_687_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - f1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetF2",420,G__erhicDict_687_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - f2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSigmaRad",1076,G__erhicDict_687_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - sr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHardS",766,G__erhicDict_687_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHardT",767,G__erhicDict_687_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHardU",768,G__erhicDict_687_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - u", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHardQ2",814,G__erhicDict_687_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Q2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHardPt2",929,G__erhicDict_687_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pt2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSigRadCor",1162,G__erhicDict_687_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEBrems",874,G__erhicDict_687_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPhotonFlux",1347,G__erhicDict_687_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - f", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrueY",805,G__erhicDict_687_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - inelasticity", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrueQ2",847,G__erhicDict_687_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Q2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrueX",804,G__erhicDict_687_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xB", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrueW2",853,G__erhicDict_687_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - W2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrueNu",911,G__erhicDict_687_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Nu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetR",382,G__erhicDict_687_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGenEvent",1084,G__erhicDict_687_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTargetPartonX",1619,G__erhicDict_687_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamPartonX",1377,G__erhicDict_687_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamPartonTheta",1791,G__erhicDict_687_0_31, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeptonPhi",1203,G__erhicDict_687_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetF1",407,G__erhicDict_687_0_33, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetF2",408,G__erhicDict_687_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSigmaRad",1064,G__erhicDict_687_0_35, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHardS",754,G__erhicDict_687_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHardT",755,G__erhicDict_687_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHardU",756,G__erhicDict_687_0_38, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHardQ2",802,G__erhicDict_687_0_39, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHardPt2",917,G__erhicDict_687_0_40, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSigRadCor",1150,G__erhicDict_687_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEBrems",862,G__erhicDict_687_0_42, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhotonFlux",1335,G__erhicDict_687_0_43, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrueY",793,G__erhicDict_687_0_44, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrueQ2",835,G__erhicDict_687_0_45, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrueX",792,G__erhicDict_687_0_46, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrueW2",841,G__erhicDict_687_0_47, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrueNu",899,G__erhicDict_687_0_48, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetR",370,G__erhicDict_687_0_49, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScatteredLepton",1553,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_687_0_51, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventPythia::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_687_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventPythia::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_687_0_53, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventPythia::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_687_0_54, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventPythia::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_687_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_687_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventPythia::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_687_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventPythia::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_687_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventPythia::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_687_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventPythia::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventPythia", 1263, G__erhicDict_687_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventGmcTrans(void) {
   /* erhic::EventGmcTrans */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans));
   G__memfunc_setup("EventGmcTrans",1313,G__erhicDict_692_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans), -1, 0, 1, 5, 1, 0, "u 'string' - 11 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiSpin",987,G__erhicDict_692_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiHadron",1181,G__erhicDict_692_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHadronZ",982,G__erhicDict_692_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHadronPt",1088,G__erhicDict_692_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetF1",407,G__erhicDict_692_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG1",408,G__erhicDict_692_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH1",409,G__erhicDict_692_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD1",405,G__erhicDict_692_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetF1TPerp",898,G__erhicDict_692_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetF1TPerp1",947,G__erhicDict_692_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH1Perp",816,G__erhicDict_692_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH1Perp1",865,G__erhicDict_692_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH1Perp12",915,G__erhicDict_692_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSivers",924,G__erhicDict_692_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiversWeight",1540,G__erhicDict_692_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiversStruckQuark",2076,G__erhicDict_692_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiversStruckQuarkWeight",2692,G__erhicDict_692_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiversPiDifference",2112,G__erhicDict_692_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiversPiDifferenceWeight",2728,G__erhicDict_692_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollins",1012,G__erhicDict_692_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollinsWeight",1628,G__erhicDict_692_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollinsStruckQuark",2164,G__erhicDict_692_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollinsStructQuarkWeight",2789,G__erhicDict_692_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollinsTwist3",1602,G__erhicDict_692_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollinsTwist3Weight",2218,G__erhicDict_692_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSectionUnpolarised",2693,G__erhicDict_692_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSectionSivers",2171,G__erhicDict_692_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSectionCollins",2259,G__erhicDict_692_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHadronPolarisation",2161,G__erhicDict_692_0_31, 117, G__get_linked_tagnum(&G__erhicDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHermesPhiS",1272,G__erhicDict_692_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_692_0_33, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventGmcTrans::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_692_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventGmcTrans::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_692_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventGmcTrans::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_692_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventGmcTrans::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_692_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_692_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventGmcTrans::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_692_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventGmcTrans::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_692_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventGmcTrans::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_692_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventGmcTrans::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventGmcTrans", 1439, G__erhicDict_692_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventMCFilterABC(void) {
   /* erhic::EventMCFilterABC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMCFilterABC));
   G__memfunc_setup("Accept",592,G__erhicDict_693_0_1, 103, -1, -1, 0, 1, 1, 1, 8, "u 'erhic::VirtualEvent' - 11 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__erhicDict_693_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventMCFilterABC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_693_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMCFilterABC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_693_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventMCFilterABC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_693_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventMCFilterABC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_693_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_693_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_693_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_693_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_693_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMCFilterABC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_693_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventMCFilterABC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_693_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMCFilterABC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_693_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventMCFilterABC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventMCFilterABC", 1596, G__erhicDict_693_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_693_0_15, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMCFilterABC), -1, 1, 1, 1, 1, 0, "u 'erhic::EventMCFilterABC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventMilou(void) {
   /* erhic::EventMilou */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou));
   G__memfunc_setup("EventMilou",1032,G__erhicDict_694_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiBelGen",1134,G__erhicDict_694_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiBelRes",1150,G__erhicDict_694_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiBelRec",1134,G__erhicDict_694_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_694_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventMilou::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_694_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMilou::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_694_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventMilou::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_694_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventMilou::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_694_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_694_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMilou::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_694_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventMilou::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_694_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventMilou::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_694_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventMilou::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventMilou", 1158, G__erhicDict_694_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventPepsi(void) {
   /* erhic::EventPepsi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi));
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExchangeBoson",1316,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScatteredLepton",1553,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_695_0_4, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventPepsi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_695_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventPepsi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_695_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventPepsi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_695_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventPepsi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_695_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_695_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventPepsi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_695_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventPepsi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_695_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventPepsi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_695_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventPepsi::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventPepsi", 1153, G__erhicDict_695_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventRapgap(void) {
   /* erhic::EventRapgap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap));
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_696_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventRapgap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_696_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventRapgap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_696_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventRapgap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_696_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventRapgap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_696_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_696_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventRapgap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_696_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventRapgap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_696_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventRapgap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_696_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventRapgap::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventRapgap", 1243, G__erhicDict_696_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLogReader(void) {
   /* erhic::LogReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader));
   G__memfunc_setup("Create",596,G__erhicDict_697_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Extract",731,G__erhicDict_697_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Save",399,G__erhicDict_697_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__erhicDict_697_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LogReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_697_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_697_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LogReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_697_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LogReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_697_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_697_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_697_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_697_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_697_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~LogReader", 1011, G__erhicDict_697_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_697_0_18, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 1, 1, 1, 1, 0, "u 'erhic::LogReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLogReaderPythia(void) {
   /* erhic::LogReaderPythia */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia));
   G__memfunc_setup("LogReaderPythia",1508,G__erhicDict_698_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Extract",731,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Save",399,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_698_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LogReaderPythia::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_698_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderPythia::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_698_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LogReaderPythia::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_698_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LogReaderPythia::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_698_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_698_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderPythia::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_698_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderPythia::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_698_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderPythia::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_698_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderPythia::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LogReaderPythia", 1508, G__erhicDict_698_0_17, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia), -1, 0, 1, 1, 1, 0, "u 'erhic::LogReaderPythia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LogReaderPythia", 1634, G__erhicDict_698_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_698_0_19, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPythia), -1, 1, 1, 1, 1, 0, "u 'erhic::LogReaderPythia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLogReaderPepsi(void) {
   /* erhic::LogReaderPepsi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi));
   G__memfunc_setup("LogReaderPepsi",1398,G__erhicDict_699_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Extract",731,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Save",399,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_699_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LogReaderPepsi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_699_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderPepsi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_699_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LogReaderPepsi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_699_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LogReaderPepsi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_699_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_699_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderPepsi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_699_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderPepsi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_699_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderPepsi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_699_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderPepsi::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LogReaderPepsi", 1398, G__erhicDict_699_0_17, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi), -1, 0, 1, 1, 1, 0, "u 'erhic::LogReaderPepsi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LogReaderPepsi", 1524, G__erhicDict_699_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_699_0_19, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderPepsi), -1, 1, 1, 1, 1, 0, "u 'erhic::LogReaderPepsi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLogReaderDjangoh(void) {
   /* erhic::LogReaderDjangoh */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh));
   G__memfunc_setup("LogReaderDjangoh",1584,G__erhicDict_700_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Extract",731,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Save",399,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_700_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LogReaderDjangoh::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_700_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderDjangoh::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_700_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LogReaderDjangoh::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_700_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LogReaderDjangoh::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_700_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_700_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderDjangoh::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_700_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderDjangoh::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_700_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderDjangoh::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_700_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderDjangoh::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LogReaderDjangoh", 1584, G__erhicDict_700_0_17, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh), -1, 0, 1, 1, 1, 0, "u 'erhic::LogReaderDjangoh' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LogReaderDjangoh", 1710, G__erhicDict_700_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_700_0_19, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderDjangoh), -1, 1, 1, 1, 1, 0, "u 'erhic::LogReaderDjangoh' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLogReaderMilou(void) {
   /* erhic::LogReaderMilou */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou));
   G__memfunc_setup("LogReaderMilou",1403,G__erhicDict_701_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Extract",731,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Save",399,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNEvents",995,G__erhicDict_701_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSection",1535,G__erhicDict_701_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSectionError",2057,G__erhicDict_701_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_701_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LogReaderMilou::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_701_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderMilou::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_701_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LogReaderMilou::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_701_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LogReaderMilou::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_701_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_701_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderMilou::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_701_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderMilou::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_701_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderMilou::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_701_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderMilou::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LogReaderMilou", 1403, G__erhicDict_701_0_20, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou), -1, 0, 1, 1, 1, 0, "u 'erhic::LogReaderMilou' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LogReaderMilou", 1529, G__erhicDict_701_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_701_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderMilou), -1, 1, 1, 1, 1, 0, "u 'erhic::LogReaderMilou' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLogReaderGmcTrans(void) {
   /* erhic::LogReaderGmcTrans */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans));
   G__memfunc_setup("LogReaderGmcTrans",1684,G__erhicDict_702_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Extract",731,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Save",399,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNEvents",995,G__erhicDict_702_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSection",1535,G__erhicDict_702_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_702_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LogReaderGmcTrans::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_702_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderGmcTrans::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_702_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LogReaderGmcTrans::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_702_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LogReaderGmcTrans::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_702_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_702_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderGmcTrans::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_702_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderGmcTrans::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_702_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderGmcTrans::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_702_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderGmcTrans::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LogReaderGmcTrans", 1684, G__erhicDict_702_0_19, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans), -1, 0, 1, 1, 1, 0, "u 'erhic::LogReaderGmcTrans' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LogReaderGmcTrans", 1810, G__erhicDict_702_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_702_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans), -1, 1, 1, 1, 1, 0, "u 'erhic::LogReaderGmcTrans' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLLogReaderFactory(void) {
   /* erhic::LogReaderFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory));
   G__memfunc_setup("GetInstance",1109,G__erhicDict_703_0_1, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (erhic::LogReaderFactory& (*)())(&erhic::LogReaderFactory::GetInstance) ), 0);
   G__memfunc_setup("CreateReader",1191,G__erhicDict_703_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 1, 1, 1, 8, "u 'erhic::EventMC' 'EventBase' 11 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateReader",1191,G__erhicDict_703_0_3, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateReader",1191,G__erhicDict_703_0_4, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Locate",600,G__erhicDict_703_0_5, 117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 - mcFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogReaderFactory",1613,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_703_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::LogReaderFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_703_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_703_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::LogReaderFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_703_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::LogReaderFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_703_0_11, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_703_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_703_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_703_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_703_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_703_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_703_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::LogReaderFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_703_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::LogReaderFactory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LogReaderFactory", 1613, G__erhicDict_703_0_19, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory), -1, 0, 1, 1, 1, 0, "u 'erhic::LogReaderFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_703_0_20, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReaderFactory), -1, 1, 1, 1, 1, 0, "u 'erhic::LogReaderFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFileType(void) {
   /* erhic::FileType */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType));
   G__memfunc_setup("Create",596,G__erhicDict_711_0_1, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AllocateEvent",1319,G__erhicDict_711_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMC), G__defined_typename("EventBase"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetGeneratorName",1608,G__erhicDict_711_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CreateLogReader",1481,G__erhicDict_711_0_4, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CreateEventFactory",1838,G__erhicDict_711_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLVirtualEventFactory), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__erhicDict_711_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::FileType::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_711_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::FileType::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_711_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::FileType::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_711_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::FileType::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_711_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_711_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::FileType::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_711_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::FileType::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_711_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::FileType::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_711_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::FileType::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FileType", 928, G__erhicDict_711_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_711_0_19, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType), -1, 1, 1, 1, 1, 0, "u 'erhic::FileType' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFileFactory(void) {
   /* erhic::FileFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory));
   G__memfunc_setup("GetInstance",1109,G__erhicDict_712_0_1, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (erhic::FileFactory& (*)())(&erhic::FileFactory::GetInstance) ), 0);
   G__memfunc_setup("GetFile",672,G__erhicDict_712_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType), -1, 0, 1, 1, 1, 9, "u 'string' - 11 - generatorName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFile",672,G__erhicDict_712_0_3, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType), -1, 0, 1, 1, 1, 9, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FileFactory",1112,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FileFactory", 1112, G__erhicDict_712_0_5, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory), -1, 0, 1, 1, 1, 0, "u 'erhic::FileFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_712_0_6, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileFactory), -1, 1, 1, 1, 1, 0, "u 'erhic::FileFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLForester(void) {
   /* erhic::Forester */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester));
   G__memfunc_setup("Forester",842,G__erhicDict_747_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Plant",511,G__erhicDict_747_0_2, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputFileName",1597,G__erhicDict_747_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputFileName",1726,G__erhicDict_747_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__erhicDict_747_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"EICTree\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchName",1275,G__erhicDict_747_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"event\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputFileName",1585,G__erhicDict_747_0_7, 117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputFileName",1714,G__erhicDict_747_0_8, 117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__erhicDict_747_0_9, 117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchName",1263,G__erhicDict_747_0_10, 117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxNEvents",1301,G__erhicDict_747_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '0' number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxNEvents",1289,G__erhicDict_747_0_12, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMessageInterval",1846,G__erhicDict_747_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '10000' number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__erhicDict_747_0_14, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"not used\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBeVerbose",1193,G__erhicDict_747_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeVerbose",893,G__erhicDict_747_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileType",1090,G__erhicDict_747_0_18, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFileType), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGetStatus",1220,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus), -1, 1, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenInput",930,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupOutput",1186,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFirstEvent",1419,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatus",1169,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MustQuit",844,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMustQuit",1144,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_747_0_28, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::Forester::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_747_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Forester::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_747_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::Forester::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_747_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::Forester::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_747_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_747_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Forester::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_747_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Forester::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_747_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Forester::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_747_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Forester::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Forester", 842, G__erhicDict_747_0_40, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForester), -1, 0, 1, 1, 1, 0, "u 'erhic::Forester' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Forester", 968, G__erhicDict_747_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLForestercLcLStatus(void) {
   /* erhic::Forester::Status */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus));
   G__memfunc_setup("Status",644,G__erhicDict_748_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__erhicDict_748_0_2, 117, G__get_linked_tagnum(&G__erhicDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' os", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartTimer",1039,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopTimer",935,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModifyEventCount",1651,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "n - 'Long64_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModifyParticleCount",1957,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "n - 'Long64_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_748_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::Forester::Status::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_748_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Forester::Status::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_748_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::Forester::Status::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_748_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::Forester::Status::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__erhicDict_748_0_11, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__erhicDict_748_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__erhicDict_748_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_748_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_748_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Forester::Status::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_748_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Forester::Status::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_748_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::Forester::Status::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_748_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::Forester::Status::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Status", 644, G__erhicDict_748_0_19, (int) ('i'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus), -1, 0, 1, 1, 1, 0, "u 'erhic::Forester::Status' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Status", 770, G__erhicDict_748_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_748_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLForestercLcLStatus), -1, 1, 1, 1, 1, 0, "u 'erhic::Forester::Status' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR(void) {
   /* erhic::EventFromAsciiFactory<erhic::EventPepsi> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR));
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventPepsi>",3923,G__erhicDict_749_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventPepsi>",3923,G__erhicDict_749_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR), -1, 0, 1, 5, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfEvent",1155,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_749_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_749_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_749_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_749_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_749_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_749_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_749_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_749_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_749_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventPepsi>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventPepsi>", 3923, G__erhicDict_749_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR), -1, 0, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventPepsi>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventFromAsciiFactory<erhic::EventPepsi>", 4049, G__erhicDict_749_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_749_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR), -1, 1, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventPepsi>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR(void) {
   /* erhic::EventFromAsciiFactory<erhic::EventMilou> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR));
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventMilou>",3928,G__erhicDict_751_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventMilou>",3928,G__erhicDict_751_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR), -1, 0, 1, 5, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfEvent",1155,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_751_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_751_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_751_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_751_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_751_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_751_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_751_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_751_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_751_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventMilou>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventMilou>", 3928, G__erhicDict_751_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR), -1, 0, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventMilou>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventFromAsciiFactory<erhic::EventMilou>", 4054, G__erhicDict_751_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_751_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR), -1, 1, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventMilou>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR(void) {
   /* erhic::EventFromAsciiFactory<erhic::EventRapgap> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR));
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventRapgap>",4013,G__erhicDict_753_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventRapgap>",4013,G__erhicDict_753_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR), -1, 0, 1, 5, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfEvent",1155,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_753_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_753_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_753_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_753_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_753_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_753_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_753_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_753_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_753_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventRapgap>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventRapgap>", 4013, G__erhicDict_753_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR), -1, 0, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventRapgap>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventFromAsciiFactory<erhic::EventRapgap>", 4139, G__erhicDict_753_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_753_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR), -1, 1, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventRapgap>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR(void) {
   /* erhic::EventFromAsciiFactory<erhic::EventDjangoh> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR));
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventDjangoh>",4109,G__erhicDict_755_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventDjangoh>",4109,G__erhicDict_755_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR), -1, 0, 1, 5, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfEvent",1155,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_755_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_755_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_755_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_755_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_755_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_755_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_755_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_755_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_755_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventDjangoh>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventDjangoh>", 4109, G__erhicDict_755_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR), -1, 0, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventDjangoh>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventFromAsciiFactory<erhic::EventDjangoh>", 4235, G__erhicDict_755_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_755_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR), -1, 1, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventDjangoh>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR(void) {
   /* erhic::EventFromAsciiFactory<erhic::EventDpmjet> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR));
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventDpmjet>",4022,G__erhicDict_757_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventDpmjet>",4022,G__erhicDict_757_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR), -1, 0, 1, 5, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfEvent",1155,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_757_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_757_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_757_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_757_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_757_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_757_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_757_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_757_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_757_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventDpmjet>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventDpmjet>", 4022, G__erhicDict_757_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR), -1, 0, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventDpmjet>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventFromAsciiFactory<erhic::EventDpmjet>", 4148, G__erhicDict_757_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_757_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR), -1, 1, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventDpmjet>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR(void) {
   /* erhic::EventFromAsciiFactory<erhic::EventPythia> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR));
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventPythia>",4033,G__erhicDict_759_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventPythia>",4033,G__erhicDict_759_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR), -1, 0, 1, 5, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfEvent",1155,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_759_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_759_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_759_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_759_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_759_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_759_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_759_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_759_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_759_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventPythia>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventPythia>", 4033, G__erhicDict_759_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR), -1, 0, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventPythia>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventFromAsciiFactory<erhic::EventPythia>", 4159, G__erhicDict_759_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_759_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR), -1, 1, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventPythia>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR(void) {
   /* erhic::EventFromAsciiFactory<erhic::EventGmcTrans> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR));
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventGmcTrans>",4209,G__erhicDict_761_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventGmcTrans>",4209,G__erhicDict_761_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR), -1, 0, 1, 5, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EventName",899,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfEvent",1155,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__erhicDict_761_0_8, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_761_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_761_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_761_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_761_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_761_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_761_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_761_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_761_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::EventFromAsciiFactory<erhic::EventGmcTrans>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventFromAsciiFactory<erhic::EventGmcTrans>", 4209, G__erhicDict_761_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR), -1, 0, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventGmcTrans>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventFromAsciiFactory<erhic::EventGmcTrans>", 4335, G__erhicDict_761_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_761_0_22, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR), -1, 1, 1, 1, 1, 0, "u 'erhic::EventFromAsciiFactory<erhic::EventGmcTrans>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFilelEerhiccLcLEventPythiagR(void) {
   /* erhic::File<erhic::EventPythia> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR));
   G__memfunc_setup("File<erhic::EventPythia>",2282,G__erhicDict_763_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPythia), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneratorName",1608,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateLogReader",1481,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateEventFactory",1838,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_763_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::File<erhic::EventPythia>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_763_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventPythia>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_763_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::File<erhic::EventPythia>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_763_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::File<erhic::EventPythia>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_763_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_763_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventPythia>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_763_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventPythia>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_763_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventPythia>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_763_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventPythia>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("File<erhic::EventPythia>", 2282, G__erhicDict_763_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR), -1, 0, 1, 1, 1, 0, "u 'erhic::File<erhic::EventPythia>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~File<erhic::EventPythia>", 2408, G__erhicDict_763_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_763_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR), -1, 1, 1, 1, 1, 0, "u 'erhic::File<erhic::EventPythia>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFilelEerhiccLcLEventMilougR(void) {
   /* erhic::File<erhic::EventMilou> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR));
   G__memfunc_setup("File<erhic::EventMilou>",2177,G__erhicDict_764_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventMilou), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneratorName",1608,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateLogReader",1481,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateEventFactory",1838,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_764_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::File<erhic::EventMilou>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_764_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventMilou>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_764_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::File<erhic::EventMilou>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_764_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::File<erhic::EventMilou>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_764_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_764_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventMilou>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_764_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventMilou>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_764_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventMilou>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_764_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventMilou>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("File<erhic::EventMilou>", 2177, G__erhicDict_764_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR), -1, 0, 1, 1, 1, 0, "u 'erhic::File<erhic::EventMilou>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~File<erhic::EventMilou>", 2303, G__erhicDict_764_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_764_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR), -1, 1, 1, 1, 1, 0, "u 'erhic::File<erhic::EventMilou>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFilelEerhiccLcLEventPepsigR(void) {
   /* erhic::File<erhic::EventPepsi> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR));
   G__memfunc_setup("File<erhic::EventPepsi>",2172,G__erhicDict_765_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventPepsi), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneratorName",1608,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateLogReader",1481,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateEventFactory",1838,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_765_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::File<erhic::EventPepsi>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_765_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventPepsi>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_765_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::File<erhic::EventPepsi>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_765_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::File<erhic::EventPepsi>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_765_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_765_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventPepsi>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_765_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventPepsi>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_765_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventPepsi>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_765_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventPepsi>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("File<erhic::EventPepsi>", 2172, G__erhicDict_765_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR), -1, 0, 1, 1, 1, 0, "u 'erhic::File<erhic::EventPepsi>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~File<erhic::EventPepsi>", 2298, G__erhicDict_765_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_765_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR), -1, 1, 1, 1, 1, 0, "u 'erhic::File<erhic::EventPepsi>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFilelEerhiccLcLEventRapgapgR(void) {
   /* erhic::File<erhic::EventRapgap> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR));
   G__memfunc_setup("File<erhic::EventRapgap>",2262,G__erhicDict_766_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventRapgap), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneratorName",1608,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateLogReader",1481,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateEventFactory",1838,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_766_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::File<erhic::EventRapgap>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_766_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventRapgap>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_766_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::File<erhic::EventRapgap>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_766_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::File<erhic::EventRapgap>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_766_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_766_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventRapgap>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_766_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventRapgap>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_766_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventRapgap>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_766_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventRapgap>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("File<erhic::EventRapgap>", 2262, G__erhicDict_766_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR), -1, 0, 1, 1, 1, 0, "u 'erhic::File<erhic::EventRapgap>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~File<erhic::EventRapgap>", 2388, G__erhicDict_766_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_766_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR), -1, 1, 1, 1, 1, 0, "u 'erhic::File<erhic::EventRapgap>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFilelEerhiccLcLEventDjangohgR(void) {
   /* erhic::File<erhic::EventDjangoh> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR));
   G__memfunc_setup("File<erhic::EventDjangoh>",2358,G__erhicDict_767_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDjangoh), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneratorName",1608,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateLogReader",1481,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateEventFactory",1838,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_767_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::File<erhic::EventDjangoh>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_767_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventDjangoh>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_767_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::File<erhic::EventDjangoh>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_767_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::File<erhic::EventDjangoh>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_767_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_767_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventDjangoh>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_767_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventDjangoh>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_767_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventDjangoh>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_767_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventDjangoh>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("File<erhic::EventDjangoh>", 2358, G__erhicDict_767_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR), -1, 0, 1, 1, 1, 0, "u 'erhic::File<erhic::EventDjangoh>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~File<erhic::EventDjangoh>", 2484, G__erhicDict_767_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_767_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR), -1, 1, 1, 1, 1, 0, "u 'erhic::File<erhic::EventDjangoh>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFilelEerhiccLcLEventDpmjetgR(void) {
   /* erhic::File<erhic::EventDpmjet> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR));
   G__memfunc_setup("File<erhic::EventDpmjet>",2271,G__erhicDict_768_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventDpmjet), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneratorName",1608,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateLogReader",1481,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateEventFactory",1838,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_768_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::File<erhic::EventDpmjet>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_768_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventDpmjet>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_768_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::File<erhic::EventDpmjet>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_768_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::File<erhic::EventDpmjet>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_768_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_768_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventDpmjet>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_768_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventDpmjet>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_768_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventDpmjet>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_768_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventDpmjet>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("File<erhic::EventDpmjet>", 2271, G__erhicDict_768_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR), -1, 0, 1, 1, 1, 0, "u 'erhic::File<erhic::EventDpmjet>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~File<erhic::EventDpmjet>", 2397, G__erhicDict_768_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_768_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR), -1, 1, 1, 1, 1, 0, "u 'erhic::File<erhic::EventDpmjet>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncerhiccLcLFilelEerhiccLcLEventGmcTransgR(void) {
   /* erhic::File<erhic::EventGmcTrans> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR));
   G__memfunc_setup("File<erhic::EventGmcTrans>",2458,G__erhicDict_769_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllocateEvent",1319,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventGmcTrans), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneratorName",1608,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__erhicDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateLogReader",1481,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLLogReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateEventFactory",1838,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR), -1, 0, 1, 1, 1, 8, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__erhicDict_769_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&erhic::File<erhic::EventGmcTrans>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__erhicDict_769_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventGmcTrans>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__erhicDict_769_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&erhic::File<erhic::EventGmcTrans>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__erhicDict_769_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&erhic::File<erhic::EventGmcTrans>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__erhicDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__erhicDict_769_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__erhicDict_769_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventGmcTrans>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__erhicDict_769_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventGmcTrans>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__erhicDict_769_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&erhic::File<erhic::EventGmcTrans>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__erhicDict_769_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&erhic::File<erhic::EventGmcTrans>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("File<erhic::EventGmcTrans>", 2458, G__erhicDict_769_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR), -1, 0, 1, 1, 1, 0, "u 'erhic::File<erhic::EventGmcTrans>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~File<erhic::EventGmcTrans>", 2584, G__erhicDict_769_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__erhicDict_769_0_21, (int) ('u'), G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR), -1, 1, 1, 1, 1, 0, "u 'erhic::File<erhic::EventGmcTrans>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR(void) {
   /* vector<erhic::ParticleMC,allocator<erhic::ParticleMC> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR));
   G__memfunc_setup("at",213,G__erhicDict_771_0_1, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__erhicDict_771_0_2, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__erhicDict_771_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__erhicDict_771_0_4, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__erhicDict_771_0_5, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR), G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__erhicDict_771_0_6, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR), G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__erhicDict_771_0_7, 107, -1, G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__erhicDict_771_0_8, 107, -1, G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_771_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_771_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - sz u 'erhic::ParticleMC' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__erhicDict_771_0_11, 107, -1, G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__erhicDict_771_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_771_0_13, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_771_0_14, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >",5146,G__erhicDict_771_0_15, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >",5146,G__erhicDict_771_0_16, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - n u 'erhic::ParticleMC' - 11 'erhic::ParticleMC()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >",5146,G__erhicDict_771_0_17, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >",5146,G__erhicDict_771_0_18, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator' 10 - first u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__erhicDict_771_0_19, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__erhicDict_771_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__erhicDict_771_0_21, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__erhicDict_771_0_22, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__erhicDict_771_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'erhic::ParticleMC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__erhicDict_771_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_771_0_25, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' - 0 - position u 'erhic::ParticleMC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_771_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' - 0 - position u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator' 10 - first "
"u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_771_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' - 0 - position k - 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::size_type' 0 - n "
"u 'erhic::ParticleMC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__erhicDict_771_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_771_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_771_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' - 0 - first u 'vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__erhicDict_771_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >", 5272, G__erhicDict_771_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR(void) {
   /* vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR));
   G__memfunc_setup("at",213,G__erhicDict_775_0_1, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__erhicDict_775_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__erhicDict_775_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__erhicDict_775_0_4, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__erhicDict_775_0_5, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__erhicDict_775_0_6, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__erhicDict_775_0_7, 107, -1, G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__erhicDict_775_0_8, 107, -1, G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_775_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_775_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - sz U 'erhic::ParticleMC' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__erhicDict_775_0_11, 107, -1, G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__erhicDict_775_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_775_0_13, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_775_0_14, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >",5230,G__erhicDict_775_0_15, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >",5230,G__erhicDict_775_0_16, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - n U 'erhic::ParticleMC' - 41 '(erhic::ParticleMC*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >",5230,G__erhicDict_775_0_17, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >",5230,G__erhicDict_775_0_18, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator' 10 - first u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__erhicDict_775_0_19, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__erhicDict_775_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__erhicDict_775_0_21, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__erhicDict_775_0_22, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__erhicDict_775_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'erhic::ParticleMC' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__erhicDict_775_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_775_0_25, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' - 0 - position U 'erhic::ParticleMC' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_775_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' - 0 - position u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator' 10 - first "
"u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_775_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' - 0 - position k - 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::size_type' 0 - n "
"U 'erhic::ParticleMC' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__erhicDict_775_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_775_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_775_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' - 0 - first u 'vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__erhicDict_775_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >", 5356, G__erhicDict_775_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR(void) {
   /* vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR));
   G__memfunc_setup("at",213,G__erhicDict_779_0_1, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__erhicDict_779_0_2, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__erhicDict_779_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__erhicDict_779_0_4, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__erhicDict_779_0_5, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__erhicDict_779_0_6, 117, G__get_linked_tagnum(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__erhicDict_779_0_7, 107, -1, G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__erhicDict_779_0_8, 107, -1, G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_779_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__erhicDict_779_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - sz U 'erhic::ParticleMC' - 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__erhicDict_779_0_11, 107, -1, G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__erhicDict_779_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_779_0_13, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__erhicDict_779_0_14, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), G__defined_typename("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >",6396,G__erhicDict_779_0_15, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >",6396,G__erhicDict_779_0_16, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - n U 'erhic::ParticleMC' - 51 '(const erhic::ParticleMC*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >",6396,G__erhicDict_779_0_17, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >",6396,G__erhicDict_779_0_18, 105, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator' 10 - first u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__erhicDict_779_0_19, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__erhicDict_779_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__erhicDict_779_0_21, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__erhicDict_779_0_22, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLParticleMC), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__erhicDict_779_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'erhic::ParticleMC' - 51 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__erhicDict_779_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_779_0_25, 117, G__get_linked_tagnum(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' - 0 - position U 'erhic::ParticleMC' - 51 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_779_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' - 0 - position u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator' 10 - first "
"u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__erhicDict_779_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' - 0 - position k - 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::size_type' 0 - n "
"U 'erhic::ParticleMC' - 51 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__erhicDict_779_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_779_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__erhicDict_779_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' - 0 - first u 'vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__erhicDict_779_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >", 6522, G__erhicDict_779_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncauto_ptrlEerhiccLcLPidgR(void) {
   /* auto_ptr<erhic::Pid> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR));
   G__memfunc_setup("auto_ptr<erhic::Pid>",1924,G__erhicDict_782_0_1, 105, G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR), -1, 0, 1, 5, 1, 0, "U 'erhic::Pid' - 0 '0' p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("auto_ptr<erhic::Pid>",1924,G__erhicDict_782_0_2, 105, G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR), -1, 0, 1, 1, 1, 0, "u 'auto_ptr<erhic::Pid>' - 1 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__erhicDict_782_0_3, 117, G__get_linked_tagnum(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR), -1, 1, 1, 1, 1, 0, "u 'auto_ptr<erhic::Pid>' - 1 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__erhicDict_782_0_4, 117, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__erhicDict_782_0_5, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__erhicDict_782_0_6, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__erhicDict_782_0_7, 85, G__get_linked_tagnum(&G__erhicDictLN_erhiccLcLPid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~auto_ptr<erhic::Pid>", 2050, G__erhicDict_782_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncerhicDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalerhicDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
   G__memfunc_setup("BuildTree", 896, G__erhicDict__0_2963, 110, -1, G__defined_typename("Long64_t"), 0, 4, 1, 1, 0, 
"u 'TString' - 11 - inputFileName u 'TString' - 11 '\".\"' outputDirName "
"n - 'Long64_t' 10 '0' maxEvent u 'string' - 11 '\"\"' logFileName", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcerhicDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__erhicDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TParticlePDG = { "TParticlePDG" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhic = { "erhic" , 110 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLPid = { "erhic::Pid" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLVirtualParticle = { "erhic::VirtualParticle" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventMC = { "erhic::EventMC" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLParticleMC = { "erhic::ParticleMC" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_BeamParticles = { "BeamParticles" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLVirtualEvent = { "erhic::VirtualEvent" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR = { "vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiterator = { "vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_ParticleIdentifier = { "ParticleIdentifier" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventDis = { "erhic::EventDis" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLDisKinematics = { "erhic::DisKinematics" , 115 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLKinematicsComputer = { "erhic::KinematicsComputer" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLeptonKinematicsComputer = { "erhic::LeptonKinematicsComputer" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLJacquetBlondelComputer = { "erhic::JacquetBlondelComputer" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLDoubleAngleComputer = { "erhic::DoubleAngleComputer" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_listlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR = { "list<Smear::Smearer*,allocator<Smear::Smearer*> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR = { "vector<Smear::Smearer*,allocator<Smear::Smearer*> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Smear::Smearer*,allocator<Smear::Smearer*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLVirtualEventFactory = { "erhic::VirtualEventFactory" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_EventToDot = { "EventToDot" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLReader = { "erhic::Reader" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventDjangoh = { "erhic::EventDjangoh" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventDpmjet = { "erhic::EventDpmjet" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventPythia = { "erhic::EventPythia" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgR = { "vector<Smear::ParticleMCS*,allocator<Smear::ParticleMCS*> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Smear::ParticleMCS*,allocator<Smear::ParticleMCS*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventGmcTrans = { "erhic::EventGmcTrans" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventMCFilterABC = { "erhic::EventMCFilterABC" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventMilou = { "erhic::EventMilou" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventPepsi = { "erhic::EventPepsi" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventRapgap = { "erhic::EventRapgap" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLogReader = { "erhic::LogReader" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLogReaderPythia = { "erhic::LogReaderPythia" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLogReaderPepsi = { "erhic::LogReaderPepsi" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLogReaderDjangoh = { "erhic::LogReaderDjangoh" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLogReaderMilou = { "erhic::LogReaderMilou" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLogReaderGmcTrans = { "erhic::LogReaderGmcTrans" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLLogReaderFactory = { "erhic::LogReaderFactory" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR = { "map<string,erhic::LogReader*,less<string>,allocator<pair<const string,erhic::LogReader*> > >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFileType = { "erhic::FileType" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFileFactory = { "erhic::FileFactory" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR = { "map<string,erhic::FileType*,less<string>,allocator<pair<const string,erhic::FileType*> > >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLForester = { "erhic::Forester" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLForestercLcLStatus = { "erhic::Forester::Status" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR = { "erhic::EventFromAsciiFactory<erhic::EventPepsi>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLEventPepsigR = { "auto_ptr<erhic::EventPepsi>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR = { "erhic::EventFromAsciiFactory<erhic::EventMilou>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLEventMilougR = { "auto_ptr<erhic::EventMilou>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR = { "erhic::EventFromAsciiFactory<erhic::EventRapgap>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLEventRapgapgR = { "auto_ptr<erhic::EventRapgap>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR = { "erhic::EventFromAsciiFactory<erhic::EventDjangoh>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLEventDjangohgR = { "auto_ptr<erhic::EventDjangoh>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR = { "erhic::EventFromAsciiFactory<erhic::EventDpmjet>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLEventDpmjetgR = { "auto_ptr<erhic::EventDpmjet>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR = { "erhic::EventFromAsciiFactory<erhic::EventPythia>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLEventPythiagR = { "auto_ptr<erhic::EventPythia>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR = { "erhic::EventFromAsciiFactory<erhic::EventGmcTrans>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLEventGmcTransgR = { "auto_ptr<erhic::EventGmcTrans>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR = { "erhic::File<erhic::EventPythia>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR = { "erhic::File<erhic::EventMilou>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR = { "erhic::File<erhic::EventPepsi>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR = { "erhic::File<erhic::EventRapgap>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR = { "erhic::File<erhic::EventDjangoh>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR = { "erhic::File<erhic::EventDpmjet>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR = { "erhic::File<erhic::EventGmcTrans>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR = { "vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiterator = { "vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR = { "vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiterator = { "vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR = { "vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiterator = { "vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__erhicDictLN_auto_ptrlEerhiccLcLPidgR = { "auto_ptr<erhic::Pid>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableerhicDict() {
  G__erhicDictLN_TClass.tagnum = -1 ;
  G__erhicDictLN_TBuffer.tagnum = -1 ;
  G__erhicDictLN_TMemberInspector.tagnum = -1 ;
  G__erhicDictLN_TObject.tagnum = -1 ;
  G__erhicDictLN_TString.tagnum = -1 ;
  G__erhicDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__erhicDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__erhicDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__erhicDictLN_string.tagnum = -1 ;
  G__erhicDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_TClonesArray.tagnum = -1 ;
  G__erhicDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__erhicDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__erhicDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__erhicDictLN_TVector3.tagnum = -1 ;
  G__erhicDictLN_TLorentzVector.tagnum = -1 ;
  G__erhicDictLN_TFile.tagnum = -1 ;
  G__erhicDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_TRef.tagnum = -1 ;
  G__erhicDictLN_TParticlePDG.tagnum = -1 ;
  G__erhicDictLN_erhic.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLPid.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLVirtualParticle.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventMC.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLParticleMC.tagnum = -1 ;
  G__erhicDictLN_BeamParticles.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLVirtualEvent.tagnum = -1 ;
  G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR.tagnum = -1 ;
  G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_ParticleIdentifier.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventDis.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLDisKinematics.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLKinematicsComputer.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLeptonKinematicsComputer.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLJacquetBlondelComputer.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLDoubleAngleComputer.tagnum = -1 ;
  G__erhicDictLN_listlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR.tagnum = -1 ;
  G__erhicDictLN_vectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLVirtualEventFactory.tagnum = -1 ;
  G__erhicDictLN_EventToDot.tagnum = -1 ;
  G__erhicDictLN_TTree.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLReader.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventDjangoh.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventDpmjet.tagnum = -1 ;
  G__erhicDictLN_TBranch.tagnum = -1 ;
  G__erhicDictLN_TObjString.tagnum = -1 ;
  G__erhicDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventPythia.tagnum = -1 ;
  G__erhicDictLN_vectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgR.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventGmcTrans.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventMCFilterABC.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventMilou.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventPepsi.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventRapgap.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLogReader.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLogReaderPythia.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLogReaderPepsi.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLogReaderDjangoh.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLogReaderMilou.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLogReaderGmcTrans.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLLogReaderFactory.tagnum = -1 ;
  G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFileType.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFileFactory.tagnum = -1 ;
  G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR.tagnum = -1 ;
  G__erhicDictLN_TStopwatch.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLForester.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLForestercLcLStatus.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLEventPepsigR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLEventMilougR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLEventRapgapgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLEventDjangohgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLEventDpmjetgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLEventPythiagR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLEventGmcTransgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR.tagnum = -1 ;
  G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR.tagnum = -1 ;
  G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR.tagnum = -1 ;
  G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiterator.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR.tagnum = -1 ;
  G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR.tagnum = -1 ;
  G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__erhicDictLN_auto_ptrlEerhiccLcLPidgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableerhicDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TString);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_string);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TRef);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TParticlePDG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhic),0,-1,0,(char*)NULL,G__setup_memvarerhic,G__setup_memfuncerhic);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLPid),sizeof(erhic::Pid),-1,263424,(char*)NULL,G__setup_memvarerhiccLcLPid,G__setup_memfuncerhiccLcLPid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLVirtualParticle),sizeof(erhic::VirtualParticle),-1,291858,(char*)NULL,G__setup_memvarerhiccLcLVirtualParticle,G__setup_memfuncerhiccLcLVirtualParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventMC),sizeof(erhic::EventMC),-1,292097,(char*)NULL,G__setup_memvarerhiccLcLEventMC,G__setup_memfuncerhiccLcLEventMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLParticleMC),sizeof(erhic::ParticleMC),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLParticleMC,G__setup_memfuncerhiccLcLParticleMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_BeamParticles),sizeof(BeamParticles),-1,296192,(char*)NULL,G__setup_memvarBeamParticles,G__setup_memfuncBeamParticles);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLVirtualEvent),sizeof(erhic::VirtualEvent),-1,291843,(char*)NULL,G__setup_memvarerhiccLcLVirtualEvent,G__setup_memfuncerhiccLcLVirtualEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR),sizeof(vector<const erhic::VirtualParticle*,allocator<const erhic::VirtualParticle*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR,G__setup_memfuncvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLVirtualParticlemUcOallocatorlEconstsPerhiccLcLVirtualParticlemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_ParticleIdentifier),sizeof(ParticleIdentifier),-1,263424,(char*)NULL,G__setup_memvarParticleIdentifier,G__setup_memfuncParticleIdentifier);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventDis),sizeof(erhic::EventDis),-1,294663,(char*)NULL,G__setup_memvarerhiccLcLEventDis,G__setup_memfuncerhiccLcLEventDis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLDisKinematics),sizeof(erhic::DisKinematics),-1,323840,(char*)NULL,G__setup_memvarerhiccLcLDisKinematics,G__setup_memfuncerhiccLcLDisKinematics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLKinematicsComputer),sizeof(erhic::KinematicsComputer),-1,263169,(char*)NULL,G__setup_memvarerhiccLcLKinematicsComputer,G__setup_memfuncerhiccLcLKinematicsComputer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLeptonKinematicsComputer),sizeof(erhic::LeptonKinematicsComputer),-1,295936,(char*)NULL,G__setup_memvarerhiccLcLLeptonKinematicsComputer,G__setup_memfuncerhiccLcLLeptonKinematicsComputer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLJacquetBlondelComputer),sizeof(erhic::JacquetBlondelComputer),-1,295936,(char*)NULL,G__setup_memvarerhiccLcLJacquetBlondelComputer,G__setup_memfuncerhiccLcLJacquetBlondelComputer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLDoubleAngleComputer),sizeof(erhic::DoubleAngleComputer),-1,295936,(char*)NULL,G__setup_memvarerhiccLcLDoubleAngleComputer,G__setup_memfuncerhiccLcLDoubleAngleComputer);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_listlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLSmearermUcOallocatorlESmearcLcLSmearermUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLVirtualEventFactory),sizeof(erhic::VirtualEventFactory),-1,291842,(char*)NULL,G__setup_memvarerhiccLcLVirtualEventFactory,G__setup_memfuncerhiccLcLVirtualEventFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_EventToDot),sizeof(EventToDot),-1,1024,(char*)NULL,G__setup_memvarEventToDot,G__setup_memfuncEventToDot);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLReader),sizeof(erhic::Reader),-1,263424,(char*)NULL,G__setup_memvarerhiccLcLReader,G__setup_memfuncerhiccLcLReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventDjangoh),sizeof(erhic::EventDjangoh),-1,291072,(char*)NULL,G__setup_memvarerhiccLcLEventDjangoh,G__setup_memfuncerhiccLcLEventDjangoh);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventDpmjet),sizeof(erhic::EventDpmjet),-1,290816,(char*)NULL,G__setup_memvarerhiccLcLEventDpmjet,G__setup_memfuncerhiccLcLEventDpmjet);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TObjString);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventPythia),sizeof(erhic::EventPythia),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLEventPythia,G__setup_memfuncerhiccLcLEventPythia);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlESmearcLcLParticleMCSmUcOallocatorlESmearcLcLParticleMCSmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventGmcTrans),sizeof(erhic::EventGmcTrans),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLEventGmcTrans,G__setup_memfuncerhiccLcLEventGmcTrans);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventMCFilterABC),sizeof(erhic::EventMCFilterABC),-1,263169,(char*)NULL,G__setup_memvarerhiccLcLEventMCFilterABC,G__setup_memfuncerhiccLcLEventMCFilterABC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventMilou),sizeof(erhic::EventMilou),-1,291072,(char*)NULL,G__setup_memvarerhiccLcLEventMilou,G__setup_memfuncerhiccLcLEventMilou);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventPepsi),sizeof(erhic::EventPepsi),-1,290816,(char*)NULL,G__setup_memvarerhiccLcLEventPepsi,G__setup_memfuncerhiccLcLEventPepsi);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventRapgap),sizeof(erhic::EventRapgap),-1,290816,(char*)NULL,G__setup_memvarerhiccLcLEventRapgap,G__setup_memfuncerhiccLcLEventRapgap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLogReader),sizeof(erhic::LogReader),-1,292099,(char*)NULL,G__setup_memvarerhiccLcLLogReader,G__setup_memfuncerhiccLcLLogReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLogReaderPythia),sizeof(erhic::LogReaderPythia),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLLogReaderPythia,G__setup_memfuncerhiccLcLLogReaderPythia);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLogReaderPepsi),sizeof(erhic::LogReaderPepsi),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLLogReaderPepsi,G__setup_memfuncerhiccLcLLogReaderPepsi);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLogReaderDjangoh),sizeof(erhic::LogReaderDjangoh),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLLogReaderDjangoh,G__setup_memfuncerhiccLcLLogReaderDjangoh);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLogReaderMilou),sizeof(erhic::LogReaderMilou),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLLogReaderMilou,G__setup_memfuncerhiccLcLLogReaderMilou);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLogReaderGmcTrans),sizeof(erhic::LogReaderGmcTrans),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLLogReaderGmcTrans,G__setup_memfuncerhiccLcLLogReaderGmcTrans);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLLogReaderFactory),sizeof(erhic::LogReaderFactory),-1,1280,(char*)NULL,G__setup_memvarerhiccLcLLogReaderFactory,G__setup_memfuncerhiccLcLLogReaderFactory);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_maplEstringcOerhiccLcLLogReadermUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLLogReadermUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFileType),sizeof(erhic::FileType),-1,291845,(char*)NULL,G__setup_memvarerhiccLcLFileType,G__setup_memfuncerhiccLcLFileType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFileFactory),sizeof(erhic::FileFactory),-1,1280,(char*)NULL,G__setup_memvarerhiccLcLFileFactory,G__setup_memfuncerhiccLcLFileFactory);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_maplEstringcOerhiccLcLFileTypemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOerhiccLcLFileTypemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_TStopwatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLForester),sizeof(erhic::Forester),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLForester,G__setup_memfuncerhiccLcLForester);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLForestercLcLStatus),sizeof(erhic::Forester::Status),-1,263424,(char*)NULL,G__setup_memvarerhiccLcLForestercLcLStatus,G__setup_memfuncerhiccLcLForestercLcLStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR),sizeof(erhic::EventFromAsciiFactory<erhic::EventPepsi>),-1,324864,(char*)NULL,G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR,G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPepsigR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLEventPepsigR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR),sizeof(erhic::EventFromAsciiFactory<erhic::EventMilou>),-1,324864,(char*)NULL,G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR,G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventMilougR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLEventMilougR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR),sizeof(erhic::EventFromAsciiFactory<erhic::EventRapgap>),-1,324864,(char*)NULL,G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR,G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventRapgapgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLEventRapgapgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR),sizeof(erhic::EventFromAsciiFactory<erhic::EventDjangoh>),-1,324864,(char*)NULL,G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR,G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDjangohgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLEventDjangohgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR),sizeof(erhic::EventFromAsciiFactory<erhic::EventDpmjet>),-1,324864,(char*)NULL,G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR,G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventDpmjetgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLEventDpmjetgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR),sizeof(erhic::EventFromAsciiFactory<erhic::EventPythia>),-1,324864,(char*)NULL,G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR,G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventPythiagR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLEventPythiagR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR),sizeof(erhic::EventFromAsciiFactory<erhic::EventGmcTrans>),-1,324864,(char*)NULL,G__setup_memvarerhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR,G__setup_memfuncerhiccLcLEventFromAsciiFactorylEerhiccLcLEventGmcTransgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLEventGmcTransgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPythiagR),sizeof(erhic::File<erhic::EventPythia>),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLFilelEerhiccLcLEventPythiagR,G__setup_memfuncerhiccLcLFilelEerhiccLcLEventPythiagR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventMilougR),sizeof(erhic::File<erhic::EventMilou>),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLFilelEerhiccLcLEventMilougR,G__setup_memfuncerhiccLcLFilelEerhiccLcLEventMilougR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventPepsigR),sizeof(erhic::File<erhic::EventPepsi>),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLFilelEerhiccLcLEventPepsigR,G__setup_memfuncerhiccLcLFilelEerhiccLcLEventPepsigR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventRapgapgR),sizeof(erhic::File<erhic::EventRapgap>),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLFilelEerhiccLcLEventRapgapgR,G__setup_memfuncerhiccLcLFilelEerhiccLcLEventRapgapgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDjangohgR),sizeof(erhic::File<erhic::EventDjangoh>),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLFilelEerhiccLcLEventDjangohgR,G__setup_memfuncerhiccLcLFilelEerhiccLcLEventDjangohgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventDpmjetgR),sizeof(erhic::File<erhic::EventDpmjet>),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLFilelEerhiccLcLEventDpmjetgR,G__setup_memfuncerhiccLcLFilelEerhiccLcLEventDpmjetgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_erhiccLcLFilelEerhiccLcLEventGmcTransgR),sizeof(erhic::File<erhic::EventGmcTrans>),-1,292096,(char*)NULL,G__setup_memvarerhiccLcLFilelEerhiccLcLEventGmcTransgR,G__setup_memfuncerhiccLcLFilelEerhiccLcLEventGmcTransgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR),sizeof(vector<erhic::ParticleMC,allocator<erhic::ParticleMC> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR,G__setup_memfuncvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCcOallocatorlEerhiccLcLParticleMCgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR),sizeof(vector<erhic::ParticleMC*,allocator<erhic::ParticleMC*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR,G__setup_memfuncvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlEerhiccLcLParticleMCmUcOallocatorlEerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR),sizeof(vector<const erhic::ParticleMC*,allocator<const erhic::ParticleMC*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR,G__setup_memfuncvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_vectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__erhicDictLN_reverse_iteratorlEvectorlEconstsPerhiccLcLParticleMCmUcOallocatorlEconstsPerhiccLcLParticleMCmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__erhicDictLN_auto_ptrlEerhiccLcLPidgR),sizeof(auto_ptr<erhic::Pid>),-1,3840,(char*)NULL,G__setup_memvarauto_ptrlEerhiccLcLPidgR,G__setup_memfuncauto_ptrlEerhiccLcLPidgR);
}
extern "C" void G__cpp_setuperhicDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuperhicDict()");
  G__set_cpp_environmenterhicDict();
  G__cpp_setup_tagtableerhicDict();

  G__cpp_setup_inheritanceerhicDict();

  G__cpp_setup_typetableerhicDict();

  G__cpp_setup_memvarerhicDict();

  G__cpp_setup_memfuncerhicDict();
  G__cpp_setup_globalerhicDict();
  G__cpp_setup_funcerhicDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncerhicDict();
  return;
}
class G__cpp_setup_initerhicDict {
  public:
    G__cpp_setup_initerhicDict() { G__add_setup_func("erhicDict",(G__incsetup)(&G__cpp_setuperhicDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initerhicDict() { G__remove_setup_func("erhicDict"); }
};
G__cpp_setup_initerhicDict G__cpp_setup_initializererhicDict;

